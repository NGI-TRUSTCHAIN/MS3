{"id":"9304f248728344b98884cd28563ba975","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {IERC1155Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155\n    struct ERC1155Storage {\n        mapping(uint256 id => mapping(address account => uint256)) _balances;\n\n        mapping(address account => mapping(address operator => bool)) _operatorApprovals;\n\n        // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n        string _uri;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155StorageLocation = 0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500;\n\n    function _getERC1155Storage() private pure returns (ERC1155Storage storage $) {\n        assembly {\n            $.slot := ERC1155StorageLocation\n        }\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = $._balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    $._balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                $._balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        $._uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155Upgradeable} from \"../ERC1155Upgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155BurnableUpgradeable is Initializable, ERC1155Upgradeable {\n    function __ERC1155Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Burnable_init_unchained() internal onlyInitializing {\n    }\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155Upgradeable} from \"../ERC1155Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC-1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC1155PausableUpgradeable is Initializable, ERC1155Upgradeable, PausableUpgradeable {\n    function __ERC1155Pausable_init() internal onlyInitializing {\n    }\n\n    function __ERC1155Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC1155-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override whenNotPaused {\n        super._update(from, to, ids, values);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/UUPSMultiToken.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport {ERC1155Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\";\nimport {ERC1155BurnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol\";\nimport {ERC1155PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract UUPSMultiToken is Initializable, ERC1155Upgradeable, OwnableUpgradeable, ERC1155PausableUpgradeable, ERC1155BurnableUpgradeable, UUPSUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner) public initializer {\n        __ERC1155_init(\"ipfs://QmUUPS/{id}.json\");\n        __Ownable_init(initialOwner);\n        __ERC1155Pausable_init();\n        __ERC1155Burnable_init();\n        __UUPSUpgradeable_init();\n    }\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyOwner\n    {}\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values)\n        internal\n        override(ERC1155Upgradeable, ERC1155PausableUpgradeable)\n    {\n        super._update(from, to, ids, values);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1838],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1839,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1838,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2500],"IERC1822Proxiable":[2069],"Initializable":[462],"UUPSUpgradeable":[644]},"id":645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":2070,"src":"141:88:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":2501,"src":"230:84:2","symbolAliases":[{"foreign":{"id":467,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":463,"src":"315:50:2","symbolAliases":[{"foreign":{"id":469,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":472,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1023:13:2"},"id":473,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":474,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2069,"src":"1038:17:2"},"id":475,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":644,"linearizedBaseContracts":[644,2069,462],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":482,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":644,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":486,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":644,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":489,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":494,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":494,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":501,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":497,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":500,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":502,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":508,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":510,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":513,"kind":"modifierInvocation","modifierName":{"id":512,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":644,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":522,"implemented":true,"kind":"function","modifiers":[{"id":519,"kind":"modifierInvocation","modifierName":{"id":518,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":644,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2068],"body":{"id":533,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":530,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2500_$","typeString":"type(library ERC1967Utils)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":529,"id":532,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":534,"implemented":true,"kind":"function","modifiers":[{"id":526,"kind":"modifierInvocation","modifierName":{"id":525,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":644,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":553,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":545,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":544,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":549,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":548,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":554,"implemented":true,"kind":"function","modifiers":[{"id":542,"kind":"modifierInvocation","modifierName":{"id":541,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":554,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":554,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":644,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":575,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":560,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":562,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":564,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2500_$","typeString":"type(library ERC1967Utils)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2252,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":567,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":573,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":572,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":644,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":582,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":584,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":589,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":588,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":644,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":598,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":598,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":644,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":631,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":615,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2500_$","typeString":"type(library ERC1967Utils)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":622,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":619,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":618,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":621,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":627,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":624,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2500_$","typeString":"type(library ERC1967Utils)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":632,"nodeType":"TryCatchClause","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":632,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":639,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":633,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2500_$","typeString":"type(library ERC1967Utils)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2226,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":638,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":640,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":607,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2069_$","typeString":"type(contract IERC1822Proxiable)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2069","typeString":"contract IERC1822Proxiable"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2068,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":641,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":643,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":643,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":602,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":644,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":645,"src":"986:5586:2","usedErrors":[211,214,489,494,2226,2239,2855,4128],"usedEvents":[219,2046]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"Arrays":[4083],"ContextUpgradeable":[1838],"ERC1155Upgradeable":[1641],"ERC1155Utils":[2845],"ERC165Upgradeable":[2038],"IERC1155":[2633],"IERC1155Errors":[2206],"IERC1155MetadataURI":[2691],"IERC165":[4455],"Initializable":[462]},"id":1642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":646,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2634,"src":"135:76:3","symbolAliases":[{"foreign":{"id":647,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2692,"src":"212:109:3","symbolAliases":[{"foreign":{"id":649,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"220:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","id":652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2846,"src":"322:90:3","symbolAliases":[{"foreign":{"id":651,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"330:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":1839,"src":"413:70:3","symbolAliases":[{"foreign":{"id":653,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"421:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":656,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":4456,"src":"484:80:3","symbolAliases":[{"foreign":{"id":655,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"492:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2039,"src":"565:82:3","symbolAliases":[{"foreign":{"id":657,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"573:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":4084,"src":"648:64:3","symbolAliases":[{"foreign":{"id":659,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"656:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":2207,"src":"713:85:3","symbolAliases":[{"foreign":{"id":661,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"721:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":463,"src":"799:66:3","symbolAliases":[{"foreign":{"id":663,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"807:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":666,"name":"Initializable","nameLocations":["1092:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1092:13:3"},"id":667,"nodeType":"InheritanceSpecifier","src":"1092:13:3"},{"baseName":{"id":668,"name":"ContextUpgradeable","nameLocations":["1107:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"1107:18:3"},"id":669,"nodeType":"InheritanceSpecifier","src":"1107:18:3"},{"baseName":{"id":670,"name":"ERC165Upgradeable","nameLocations":["1127:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1127:17:3"},"id":671,"nodeType":"InheritanceSpecifier","src":"1127:17:3"},{"baseName":{"id":672,"name":"IERC1155","nameLocations":["1146:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"1146:8:3"},"id":673,"nodeType":"InheritanceSpecifier","src":"1146:8:3"},{"baseName":{"id":674,"name":"IERC1155MetadataURI","nameLocations":["1156:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":2691,"src":"1156:19:3"},"id":675,"nodeType":"InheritanceSpecifier","src":"1156:19:3"},{"baseName":{"id":676,"name":"IERC1155Errors","nameLocations":["1177:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2206,"src":"1177:14:3"},"id":677,"nodeType":"InheritanceSpecifier","src":"1177:14:3"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"867:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1641,"linearizedBaseContracts":[1641,2206,2691,2633,2038,4455,1838,462],"name":"ERC1155Upgradeable","nameLocation":"1070:18:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":681,"libraryName":{"id":678,"name":"Arrays","nameLocations":["1204:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4083,"src":"1204:6:3"},"nodeType":"UsingForDirective","src":"1198:27:3","typeName":{"baseType":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":680,"nodeType":"ArrayTypeName","src":"1215:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":685,"libraryName":{"id":682,"name":"Arrays","nameLocations":["1236:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4083,"src":"1236:6:3"},"nodeType":"UsingForDirective","src":"1230:27:3","typeName":{"baseType":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":684,"nodeType":"ArrayTypeName","src":"1247:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"canonicalName":"ERC1155Upgradeable.ERC1155Storage","documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1263:65:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155"},"id":701,"members":[{"constant":false,"id":692,"mutability":"mutable","name":"_balances","nameLocation":"1424:9:3","nodeType":"VariableDeclaration","scope":701,"src":"1365:68:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":691,"keyName":"id","keyNameLocation":"1381:2:3","keyType":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1365:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":690,"keyName":"account","keyNameLocation":"1403:7:3","keyType":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1387:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1506:18:3","nodeType":"VariableDeclaration","scope":701,"src":"1444:80:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":697,"keyName":"account","keyNameLocation":"1460:7:3","keyType":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":696,"keyName":"operator","keyNameLocation":"1487:8:3","keyType":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1471:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":695,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"_uri","nameLocation":"1660:4:3","nodeType":"VariableDeclaration","scope":701,"src":"1653:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC1155Storage","nameLocation":"1340:14:3","nodeType":"StructDefinition","scope":1641,"src":"1333:338:3","visibility":"public"},{"constant":true,"id":704,"mutability":"constant","name":"ERC1155StorageLocation","nameLocation":"1813:22:3","nodeType":"VariableDeclaration","scope":1641,"src":"1788:116:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838386265353336643532343063323734613362316433613162653534343832666439636161323934663038633632613763646535363966343961336334353030","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:3","typeDescriptions":{"typeIdentifier":"t_rational_61850824141875340645484003952679861077730695310785076753205161524670616061184_by_1","typeString":"int_const 6185...(69 digits omitted)...1184"},"value":"0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500"},"visibility":"private"},{"body":{"id":711,"nodeType":"Block","src":"1989:81:3","statements":[{"AST":{"nativeSrc":"2008:56:3","nodeType":"YulBlock","src":"2008:56:3","statements":[{"nativeSrc":"2022:32:3","nodeType":"YulAssignment","src":"2022:32:3","value":{"name":"ERC1155StorageLocation","nativeSrc":"2032:22:3","nodeType":"YulIdentifier","src":"2032:22:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:3","nodeType":"YulIdentifier","src":"2022:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":708,"isOffset":false,"isSlot":true,"src":"2022:6:3","suffix":"slot","valueSize":1},{"declaration":704,"isOffset":false,"isSlot":false,"src":"2032:22:3","valueSize":1}],"id":710,"nodeType":"InlineAssembly","src":"1999:65:3"}]},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155Storage","nameLocation":"1920:18:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"1938:2:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"$","nameLocation":"1986:1:3","nodeType":"VariableDeclaration","scope":712,"src":"1963:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":707,"nodeType":"UserDefinedTypeName","pathNode":{"id":706,"name":"ERC1155Storage","nameLocations":["1963:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"1963:14:3"},"referencedDeclaration":701,"src":"1963:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"src":"1962:26:3"},"scope":1641,"src":"1911:159:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":724,"nodeType":"Block","src":"2189:47:3","statements":[{"expression":{"arguments":[{"id":721,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2224:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":720,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"2199:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"2199:30:3"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"2076:38:3","text":" @dev See {_setURI}."},"id":725,"implemented":true,"kind":"function","modifiers":[{"id":718,"kind":"modifierInvocation","modifierName":{"id":717,"name":"onlyInitializing","nameLocations":["2172:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2172:16:3"},"nodeType":"ModifierInvocation","src":"2172:16:3"}],"name":"__ERC1155_init","nameLocation":"2128:14:3","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"uri_","nameLocation":"2157:4:3","nodeType":"VariableDeclaration","scope":725,"src":"2143:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":714,"name":"string","nodeType":"ElementaryTypeName","src":"2143:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2142:20:3"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"2189:0:3"},"scope":1641,"src":"2119:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"2322:30:3","statements":[{"expression":{"arguments":[{"id":733,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2340:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":732,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2332:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"2332:13:3"}]},"id":737,"implemented":true,"kind":"function","modifiers":[{"id":730,"kind":"modifierInvocation","modifierName":{"id":729,"name":"onlyInitializing","nameLocations":["2305:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2305:16:3"},"nodeType":"ModifierInvocation","src":"2305:16:3"}],"name":"__ERC1155_init_unchained","nameLocation":"2251:24:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"uri_","nameLocation":"2290:4:3","nodeType":"VariableDeclaration","scope":737,"src":"2276:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":726,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2275:20:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"2322:0:3"},"scope":1641,"src":"2242:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2037,4454],"body":{"id":767,"nodeType":"Block","src":"2505:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2534:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":750,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2554:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2633_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$2633_$","typeString":"type(contract IERC1155)"}],"id":749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2549:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$2633","typeString":"type(contract IERC1155)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2564:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2549:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2534:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2591:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":756,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2611:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2691_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$2691_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2606:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2691","typeString":"type(contract IERC1155MetadataURI)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2632:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2606:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2591:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":763,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2683:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":761,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2659:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1641_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2037,"src":"2659:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":766,"nodeType":"Return","src":"2515:180:3"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"2358:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":768,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2395:17:3","nodeType":"FunctionDefinition","overrides":{"id":744,"nodeType":"OverrideSpecifier","overrides":[{"id":742,"name":"ERC165Upgradeable","nameLocations":["2462:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"2462:17:3"},{"id":743,"name":"IERC165","nameLocations":["2481:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4455,"src":"2481:7:3"}],"src":"2453:36:3"},"parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"interfaceId","nameLocation":"2420:11:3","nodeType":"VariableDeclaration","scope":768,"src":"2413:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":739,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2413:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2412:20:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2499:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"2499:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2498:6:3"},"scope":1641,"src":"2386:316:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2690],"body":{"id":785,"nodeType":"Block","src":"3176:87:3","statements":[{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"$","nameLocation":"3209:1:3","nodeType":"VariableDeclaration","scope":785,"src":"3186:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":777,"nodeType":"UserDefinedTypeName","pathNode":{"id":776,"name":"ERC1155Storage","nameLocations":["3186:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"3186:14:3"},"referencedDeclaration":701,"src":"3186:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":779,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3213:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3186:47:3"},{"expression":{"expression":{"id":782,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"3250:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3252:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":700,"src":"3250:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":775,"id":784,"nodeType":"Return","src":"3243:13:3"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2708:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3110:3:3","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"3114:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3113:18:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"3161:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":773,"name":"string","nodeType":"ElementaryTypeName","src":"3161:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3160:15:3"},"scope":1641,"src":"3101:162:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2571],"body":{"id":809,"nodeType":"Block","src":"3384:105:3","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"$","nameLocation":"3417:1:3","nodeType":"VariableDeclaration","scope":809,"src":"3394:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":797,"nodeType":"UserDefinedTypeName","pathNode":{"id":796,"name":"ERC1155Storage","nameLocations":["3394:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"3394:14:3"},"referencedDeclaration":701,"src":"3394:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":799,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3421:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3394:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":802,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3458:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3460:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"3458:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":805,"indexExpression":{"id":804,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"3470:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":807,"indexExpression":{"id":806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3474:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":795,"id":808,"nodeType":"Return","src":"3451:31:3"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"3269:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3307:9:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"account","nameLocation":"3325:7:3","nodeType":"VariableDeclaration","scope":810,"src":"3317:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"id","nameLocation":"3342:2:3","nodeType":"VariableDeclaration","scope":810,"src":"3334:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:29:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":810,"src":"3375:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:9:3"},"scope":1641,"src":"3298:191:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2584],"body":{"id":879,"nodeType":"Block","src":"3788:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3811:6:3","memberName":"length","nodeType":"MemberAccess","src":"3802:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":825,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3821:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3825:6:3","memberName":"length","nodeType":"MemberAccess","src":"3821:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"nodeType":"IfStatement","src":"3798:121:3","trueBody":{"id":835,"nodeType":"Block","src":"3833:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":829,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3880:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3884:6:3","memberName":"length","nodeType":"MemberAccess","src":"3880:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":831,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3892:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3901:6:3","memberName":"length","nodeType":"MemberAccess","src":"3892:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":828,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"3854:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":834,"nodeType":"RevertStatement","src":"3847:61:3"}]}},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"batchBalances","nameLocation":"3946:13:3","nodeType":"VariableDeclaration","scope":879,"src":"3929:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":840,"nodeType":"ArrayTypeName","src":"3929:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":848,"initialValue":{"arguments":[{"expression":{"id":845,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3976:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:6:3","memberName":"length","nodeType":"MemberAccess","src":"3976:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3962:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3966:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ArrayTypeName","src":"3966:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3929:63:3"},{"body":{"id":875,"nodeType":"Block","src":"4049:112:3","statements":[{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":860,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4063:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":862,"indexExpression":{"id":861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4077:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4063:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":864,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4092:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4101:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3975,"src":"4092:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4092:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4147:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":868,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4124:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4128:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"4124:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":863,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"4082:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4082:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4063:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":874,"nodeType":"ExpressionStatement","src":"4063:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4023:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":854,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4027:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4036:6:3","memberName":"length","nodeType":"MemberAccess","src":"4027:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"initializationExpression":{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"i","nameLocation":"4016:1:3","nodeType":"VariableDeclaration","scope":876,"src":"4008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":852,"initialValue":{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4008:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4044:3:3","subExpression":{"id":857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4046:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":859,"nodeType":"ExpressionStatement","src":"4044:3:3"},"nodeType":"ForStatement","src":"4003:158:3"},{"expression":{"id":877,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4178:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":822,"id":878,"nodeType":"Return","src":"4171:20:3"}]},"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"3495:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":880,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"3655:14:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"accounts","nameLocation":"3696:8:3","nodeType":"VariableDeclaration","scope":880,"src":"3679:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"3679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":813,"nodeType":"ArrayTypeName","src":"3679:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"ids","nameLocation":"3731:3:3","nodeType":"VariableDeclaration","scope":880,"src":"3714:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ArrayTypeName","src":"3714:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3669:71:3"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"3770:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ArrayTypeName","src":"3770:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3769:18:3"},"scope":1641,"src":"3646:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2592],"body":{"id":895,"nodeType":"Block","src":"4308:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4337:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4351:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4361:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":888,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"4318:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"4318:52:3"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"4204:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":896,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4242:17:3","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"operator","nameLocation":"4268:8:3","nodeType":"VariableDeclaration","scope":896,"src":"4260:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"4260:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"approved","nameLocation":"4283:8:3","nodeType":"VariableDeclaration","scope":896,"src":"4278:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"4278:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4259:33:3"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"4308:0:3"},"scope":1641,"src":"4233:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2602],"body":{"id":919,"nodeType":"Block","src":"4508:120:3","statements":[{"assignments":[908],"declarations":[{"constant":false,"id":908,"mutability":"mutable","name":"$","nameLocation":"4541:1:3","nodeType":"VariableDeclaration","scope":919,"src":"4518:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":907,"nodeType":"UserDefinedTypeName","pathNode":{"id":906,"name":"ERC1155Storage","nameLocations":["4518:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"4518:14:3"},"referencedDeclaration":701,"src":"4518:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":909,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4545:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4545:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4518:47:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":912,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4584:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":698,"src":"4582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":915,"indexExpression":{"id":914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":917,"indexExpression":{"id":916,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"4612:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":905,"id":918,"nodeType":"Return","src":"4575:46:3"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"4383:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4421:16:3","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"account","nameLocation":"4446:7:3","nodeType":"VariableDeclaration","scope":920,"src":"4438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"operator","nameLocation":"4463:8:3","nodeType":"VariableDeclaration","scope":920,"src":"4455:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"4455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4437:35:3"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"4502:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":903,"name":"bool","nodeType":"ElementaryTypeName","src":"4502:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4501:6:3"},"scope":1641,"src":"4412:216:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2616],"body":{"id":963,"nodeType":"Block","src":"4776:238:3","statements":[{"assignments":[935],"declarations":[{"constant":false,"id":935,"mutability":"mutable","name":"sender","nameLocation":"4794:6:3","nodeType":"VariableDeclaration","scope":963,"src":"4786:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"4786:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":938,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"4803:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4786:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4829:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":940,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"4837:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4829:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4847:31:3","subExpression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4865:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"4871:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"4848:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4829:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"4825:129:3","trueBody":{"id":953,"nodeType":"Block","src":"4880:74:3","statements":[{"errorCall":{"arguments":[{"id":949,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"4930:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4938:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":948,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"4901:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":952,"nodeType":"RevertStatement","src":"4894:49:3"}]}},{"expression":{"arguments":[{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4981:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4987:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4991:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4995:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":960,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5002:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":955,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"4963:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"4963:44:3"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"4634:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":964,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4672:16:3","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"from","nameLocation":"4697:4:3","nodeType":"VariableDeclaration","scope":964,"src":"4689:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"to","nameLocation":"4711:2:3","nodeType":"VariableDeclaration","scope":964,"src":"4703:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"4703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"id","nameLocation":"4723:2:3","nodeType":"VariableDeclaration","scope":964,"src":"4715:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"4735:5:3","nodeType":"VariableDeclaration","scope":964,"src":"4727:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"data","nameLocation":"4755:4:3","nodeType":"VariableDeclaration","scope":964,"src":"4742:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4742:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4688:72:3"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"4776:0:3"},"scope":1641,"src":"4663:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2632],"body":{"id":1009,"nodeType":"Block","src":"5233:245:3","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"sender","nameLocation":"5251:6:3","nodeType":"VariableDeclaration","scope":1009,"src":"5243:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5260:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5260:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5243:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5286:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":986,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5294:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5286:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5304:31:3","subExpression":{"arguments":[{"id":989,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5322:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5328:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5305:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5286:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"5282:129:3","trueBody":{"id":999,"nodeType":"Block","src":"5337:74:3","statements":[{"errorCall":{"arguments":[{"id":995,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":994,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5358:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":998,"nodeType":"RevertStatement","src":"5351:49:3"}]}},{"expression":{"arguments":[{"id":1002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5443:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5449:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"5453:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1005,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"5458:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"5466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1001,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"5420:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"5420:51:3"}]},"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"5020:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"5058:21:3","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"from","nameLocation":"5097:4:3","nodeType":"VariableDeclaration","scope":1010,"src":"5089:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"5089:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"to","nameLocation":"5119:2:3","nodeType":"VariableDeclaration","scope":1010,"src":"5111:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"ids","nameLocation":"5148:3:3","nodeType":"VariableDeclaration","scope":1010,"src":"5131:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"5131:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":971,"nodeType":"ArrayTypeName","src":"5131:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"values","nameLocation":"5178:6:3","nodeType":"VariableDeclaration","scope":1010,"src":"5161:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"nodeType":"ArrayTypeName","src":"5161:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"data","nameLocation":"5207:4:3","nodeType":"VariableDeclaration","scope":1010,"src":"5194:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"5194:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5079:138:3"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"5233:0:3"},"scope":1641,"src":"5049:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1173,"nodeType":"Block","src":"6286:1237:3","statements":[{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"$","nameLocation":"6319:1:3","nodeType":"VariableDeclaration","scope":1173,"src":"6296:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"ERC1155Storage","nameLocations":["6296:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"6296:14:3"},"referencedDeclaration":701,"src":"6296:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1029,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1027,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6323:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6323:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6296:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1030,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6357:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6361:6:3","memberName":"length","nodeType":"MemberAccess","src":"6357:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1032,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6371:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6378:6:3","memberName":"length","nodeType":"MemberAccess","src":"6371:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6357:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"6353:117:3","trueBody":{"id":1042,"nodeType":"Block","src":"6386:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":1036,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6433:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6437:6:3","memberName":"length","nodeType":"MemberAccess","src":"6433:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1038,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6445:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6452:6:3","memberName":"length","nodeType":"MemberAccess","src":"6445:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6407:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1041,"nodeType":"RevertStatement","src":"6400:59:3"}]}},{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"operator","nameLocation":"6488:8:3","nodeType":"VariableDeclaration","scope":1173,"src":"6480:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"6499:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6499:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6480:31:3"},{"body":{"id":1134,"nodeType":"Block","src":"6563:656:3","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"id","nameLocation":"6585:2:3","nodeType":"VariableDeclaration","scope":1134,"src":"6577:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1066,"initialValue":{"arguments":[{"id":1064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6613:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1062,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6590:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6594:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"6590:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6577:38:3"},{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"value","nameLocation":"6637:5:3","nodeType":"VariableDeclaration","scope":1134,"src":"6629:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6629:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1073,"initialValue":{"arguments":[{"id":1071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6671:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1069,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6645:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"6645:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6645:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6629:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"6692:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6708:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6700:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6700:7:3","typeDescriptions":{}}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6692:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"6688:424:3","trueBody":{"id":1114,"nodeType":"Block","src":"6712:400:3","statements":[{"assignments":[1081],"declarations":[{"constant":false,"id":1081,"mutability":"mutable","name":"fromBalance","nameLocation":"6738:11:3","nodeType":"VariableDeclaration","scope":1114,"src":"6730:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"6730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1088,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":1082,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6752:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6754:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"6752:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1085,"indexExpression":{"id":1084,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"6764:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1087,"indexExpression":{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"6768:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6730:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"6795:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6809:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6795:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"6791:129:3","trueBody":{"id":1099,"nodeType":"Block","src":"6816:104:3","statements":[{"errorCall":{"arguments":[{"id":1093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"6872:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"6878:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6891:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"6898:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"6845:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6845:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1098,"nodeType":"RevertStatement","src":"6838:63:3"}]}},{"id":1113,"nodeType":"UncheckedBlock","src":"6937:161:3","statements":[{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7036:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7038:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"7036:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1106,"indexExpression":{"id":1103,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7048:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7036:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1107,"indexExpression":{"id":1104,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7052:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7036:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7060:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7074:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7036:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"7036:43:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7130:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7136:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"7136:7:3","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7136:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7130:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"IfStatement","src":"7126:83:3","trueBody":{"id":1132,"nodeType":"Block","src":"7148:61:3","statements":[{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1122,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"7166:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":692,"src":"7166:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1127,"indexExpression":{"id":1124,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7178:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7166:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1128,"indexExpression":{"id":1125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7182:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7166:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7189:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7166:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1131,"nodeType":"ExpressionStatement","src":"7166:28:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6542:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1054,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6546:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:3","memberName":"length","nodeType":"MemberAccess","src":"6546:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6542:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"initializationExpression":{"assignments":[1050],"declarations":[{"constant":false,"id":1050,"mutability":"mutable","name":"i","nameLocation":"6535:1:3","nodeType":"VariableDeclaration","scope":1135,"src":"6527:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1052,"initialValue":{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6539:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6527:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6558:3:3","subExpression":{"id":1057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"6560:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1059,"nodeType":"ExpressionStatement","src":"6558:3:3"},"nodeType":"ForStatement","src":"6522:697:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1136,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7233:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7237:6:3","memberName":"length","nodeType":"MemberAccess","src":"7233:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7233:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1171,"nodeType":"Block","src":"7441:76:3","statements":[{"eventCall":{"arguments":[{"id":1164,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7474:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7484:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7490:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7494:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1168,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7499:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1163,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"7460:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7460:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"EmitStatement","src":"7455:51:3"}]},"id":1172,"nodeType":"IfStatement","src":"7229:288:3","trueBody":{"id":1162,"nodeType":"Block","src":"7250:185:3","statements":[{"assignments":[1141],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"id","nameLocation":"7272:2:3","nodeType":"VariableDeclaration","scope":1162,"src":"7264:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"7264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7300:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1142,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7277:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7281:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"7277:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7264:38:3"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"7324:5:3","nodeType":"VariableDeclaration","scope":1162,"src":"7316:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7358:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1149,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7332:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"7332:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7316:44:3"},{"eventCall":{"arguments":[{"id":1155,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7394:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7404:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7410:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7414:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7418:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"7379:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7379:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"EmitStatement","src":"7374:50:3"}]}}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"5484:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6188:7:3","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"from","nameLocation":"6204:4:3","nodeType":"VariableDeclaration","scope":1174,"src":"6196:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"to","nameLocation":"6218:2:3","nodeType":"VariableDeclaration","scope":1174,"src":"6210:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"ids","nameLocation":"6239:3:3","nodeType":"VariableDeclaration","scope":1174,"src":"6222:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"nodeType":"ArrayTypeName","src":"6222:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"values","nameLocation":"6261:6:3","nodeType":"VariableDeclaration","scope":1174,"src":"6244:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6244:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ArrayTypeName","src":"6244:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6195:73:3"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"6286:0:3"},"scope":1641,"src":"6179:1344:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"8293:509:3","statements":[{"expression":{"arguments":[{"id":1191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8311:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8317:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8321:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1194,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8326:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1190,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"8303:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8303:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"8303:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8347:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:3","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8353:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8347:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"8343:453:3","trueBody":{"id":1251,"nodeType":"Block","src":"8365:431:3","statements":[{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"operator","nameLocation":"8387:8:3","nodeType":"VariableDeclaration","scope":1251,"src":"8379:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"8379:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1205,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8379:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1208,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8428:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8432:6:3","memberName":"length","nodeType":"MemberAccess","src":"8428:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8442:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8428:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1249,"nodeType":"Block","src":"8674:112:3","statements":[{"expression":{"arguments":[{"id":1241,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8733:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8743:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8749:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8753:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1245,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8758:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1246,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8766:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1238,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8692:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2845_$","typeString":"type(library ERC1155Utils)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8705:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2844,"src":"8692:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"8692:79:3"}]},"id":1250,"nodeType":"IfStatement","src":"8424:362:3","trueBody":{"id":1237,"nodeType":"Block","src":"8445:223:3","statements":[{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"id","nameLocation":"8471:2:3","nodeType":"VariableDeclaration","scope":1237,"src":"8463:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"8463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1218,"initialValue":{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8499:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1214,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"8476:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8480:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"8476:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8463:38:3"},{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"value","nameLocation":"8527:5:3","nodeType":"VariableDeclaration","scope":1237,"src":"8519:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"arguments":[{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8561:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1221,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8535:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8542:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"8535:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8519:44:3"},{"expression":{"arguments":[{"id":1229,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8617:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8627:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8633:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1232,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"8637:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8641:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8648:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1226,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8581:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2845_$","typeString":"type(library ERC1155Utils)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2770,"src":"8581:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"8581:72:3"}]}}]}}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"7529:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"8111:26:3","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"from","nameLocation":"8155:4:3","nodeType":"VariableDeclaration","scope":1254,"src":"8147:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"8147:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"8177:2:3","nodeType":"VariableDeclaration","scope":1254,"src":"8169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"ids","nameLocation":"8206:3:3","nodeType":"VariableDeclaration","scope":1254,"src":"8189:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ArrayTypeName","src":"8189:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"values","nameLocation":"8236:6:3","nodeType":"VariableDeclaration","scope":1254,"src":"8219:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8219:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ArrayTypeName","src":"8219:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"data","nameLocation":"8265:4:3","nodeType":"VariableDeclaration","scope":1254,"src":"8252:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"8252:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8137:138:3"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"8293:0:3"},"scope":1641,"src":"8102:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"9367:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9381:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"9387:7:3","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9381:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1282,"nodeType":"IfStatement","src":"9377:88:3","trueBody":{"id":1281,"nodeType":"Block","src":"9399:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9451:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9443:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"9443:7:3","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9443:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1274,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"9420:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9420:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1280,"nodeType":"RevertStatement","src":"9413:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9478:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9494:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9486:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"9486:7:3","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9486:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9478:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1297,"nodeType":"IfStatement","src":"9474:88:3","trueBody":{"id":1296,"nodeType":"Block","src":"9498:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9548:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9540:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"9540:7:3","typeDescriptions":{}}},"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1289,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9519:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9519:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1295,"nodeType":"RevertStatement","src":"9512:39:3"}]}},{"assignments":[1302,1305],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"ids","nameLocation":"9589:3:3","nodeType":"VariableDeclaration","scope":1319,"src":"9572:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"9572:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ArrayTypeName","src":"9572:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"values","nameLocation":"9611:6:3","nodeType":"VariableDeclaration","scope":1319,"src":"9594:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ArrayTypeName","src":"9594:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1310,"initialValue":{"arguments":[{"id":1307,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"9640:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"9644:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9621:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"9571:79:3"},{"expression":{"arguments":[{"id":1312,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9687:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"9693:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"9697:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1315,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9702:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"9710:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1311,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"9660:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"9660:55:3"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"8808:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"9268:17:3","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"from","nameLocation":"9294:4:3","nodeType":"VariableDeclaration","scope":1320,"src":"9286:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"to","nameLocation":"9308:2:3","nodeType":"VariableDeclaration","scope":1320,"src":"9300:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"9300:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"id","nameLocation":"9320:2:3","nodeType":"VariableDeclaration","scope":1320,"src":"9312:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"9312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"9332:5:3","nodeType":"VariableDeclaration","scope":1320,"src":"9324:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"data","nameLocation":"9352:4:3","nodeType":"VariableDeclaration","scope":1320,"src":"9339:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"9339:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9285:72:3"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"9367:0:3"},"scope":1641,"src":"9259:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"10302:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10316:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10322:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:3","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10322:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10316:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"10312:88:3","trueBody":{"id":1349,"nodeType":"Block","src":"10334:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10386:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10378:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:3","typeDescriptions":{}}},"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10378:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1342,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"10355:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10355:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1348,"nodeType":"RevertStatement","src":"10348:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10413:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10421:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:3","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10421:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10413:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"10409:88:3","trueBody":{"id":1364,"nodeType":"Block","src":"10433:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10483:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10475:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","typeDescriptions":{}}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10475:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1357,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10454:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10454:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1363,"nodeType":"RevertStatement","src":"10447:39:3"}]}},{"expression":{"arguments":[{"id":1367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"10533:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"10539:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"10543:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1370,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10548:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10556:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1366,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"10506:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10506:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"10506:55:3"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"9728:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"10132:22:3","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"from","nameLocation":"10172:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"10164:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"to","nameLocation":"10194:2:3","nodeType":"VariableDeclaration","scope":1375,"src":"10186:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"10186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"ids","nameLocation":"10223:3:3","nodeType":"VariableDeclaration","scope":1375,"src":"10206:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"10206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1327,"nodeType":"ArrayTypeName","src":"10206:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"values","nameLocation":"10253:6:3","nodeType":"VariableDeclaration","scope":1375,"src":"10236:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ArrayTypeName","src":"10236:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"data","nameLocation":"10282:4:3","nodeType":"VariableDeclaration","scope":1375,"src":"10269:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"10269:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10154:138:3"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"10302:0:3"},"scope":1641,"src":"10123:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"11446:89:3","statements":[{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"$","nameLocation":"11479:1:3","nodeType":"VariableDeclaration","scope":1393,"src":"11456:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1382,"nodeType":"UserDefinedTypeName","pathNode":{"id":1381,"name":"ERC1155Storage","nameLocations":["11456:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"11456:14:3"},"referencedDeclaration":701,"src":"11456:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"11483:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11483:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11456:47:3"},{"expression":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11513:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11515:4:3","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":700,"src":"11513:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1390,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"11522:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11513:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1392,"nodeType":"ExpressionStatement","src":"11513:15:3"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"10574:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"11399:7:3","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"newuri","nameLocation":"11421:6:3","nodeType":"VariableDeclaration","scope":1394,"src":"11407:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1377,"name":"string","nodeType":"ElementaryTypeName","src":"11407:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11406:22:3"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"11446:0:3"},"scope":1641,"src":"11390:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"11995:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12009:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12015:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"12015:7:3","typeDescriptions":{}}},"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12015:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12009:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"12005:88:3","trueBody":{"id":1419,"nodeType":"Block","src":"12027:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12079:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"12071:7:3","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1412,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"12048:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1418,"nodeType":"RevertStatement","src":"12041:41:3"}]}},{"assignments":[1425,1428],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"ids","nameLocation":"12120:3:3","nodeType":"VariableDeclaration","scope":1445,"src":"12103:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ArrayTypeName","src":"12103:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"values","nameLocation":"12142:6:3","nodeType":"VariableDeclaration","scope":1445,"src":"12125:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1427,"nodeType":"ArrayTypeName","src":"12125:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"id":1430,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"12171:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12175:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12152:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12102:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12226:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12218:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"12218:7:3","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12218:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12230:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"12234:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1441,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"12239:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1442,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"12247:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1434,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12191:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12191:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"12191:61:3"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"11541:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11922:5:3","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"to","nameLocation":"11936:2:3","nodeType":"VariableDeclaration","scope":1446,"src":"11928:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"11928:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"id","nameLocation":"11948:2:3","nodeType":"VariableDeclaration","scope":1446,"src":"11940:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"11940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"value","nameLocation":"11960:5:3","nodeType":"VariableDeclaration","scope":1446,"src":"11952:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11952:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"data","nameLocation":"11980:4:3","nodeType":"VariableDeclaration","scope":1446,"src":"11967:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1402,"name":"bytes","nodeType":"ElementaryTypeName","src":"11967:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11927:58:3"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"11995:0:3"},"scope":1641,"src":"11913:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"12797:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"12811:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12825:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12817:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"12817:7:3","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12817:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12811:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"12807:88:3","trueBody":{"id":1473,"nodeType":"Block","src":"12829:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12881:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12873:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"12873:7:3","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12873:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1466,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"12850:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1472,"nodeType":"RevertStatement","src":"12843:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12939:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12931:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"12931:7:3","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12931:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"12943:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1481,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"12947:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1482,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"12952:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"12960:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1475,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12904:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"12904:61:3"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"12265:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"12699:10:3","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"to","nameLocation":"12718:2:3","nodeType":"VariableDeclaration","scope":1487,"src":"12710:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"12710:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"ids","nameLocation":"12739:3:3","nodeType":"VariableDeclaration","scope":1487,"src":"12722:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ArrayTypeName","src":"12722:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"values","nameLocation":"12761:6:3","nodeType":"VariableDeclaration","scope":1487,"src":"12744:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ArrayTypeName","src":"12744:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"data","nameLocation":"12782:4:3","nodeType":"VariableDeclaration","scope":1487,"src":"12769:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"12769:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12709:78:3"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"12797:0:3"},"scope":1641,"src":"12690:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1536,"nodeType":"Block","src":"13331:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"13345:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"13353:7:3","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13353:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13345:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"13341:88:3","trueBody":{"id":1510,"nodeType":"Block","src":"13365:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13415:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13407:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"13407:7:3","typeDescriptions":{}}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13407:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"13386:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1509,"nodeType":"RevertStatement","src":"13379:39:3"}]}},{"assignments":[1516,1519],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"ids","nameLocation":"13456:3:3","nodeType":"VariableDeclaration","scope":1536,"src":"13439:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"13439:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1515,"nodeType":"ArrayTypeName","src":"13439:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"values","nameLocation":"13478:6:3","nodeType":"VariableDeclaration","scope":1536,"src":"13461:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13461:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1518,"nodeType":"ArrayTypeName","src":"13461:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1524,"initialValue":{"arguments":[{"id":1521,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"13507:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"13511:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"13488:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13488:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13438:79:3"},{"expression":{"arguments":[{"id":1526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"13554:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"13560:7:3","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"13572:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1532,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"13577:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13585:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1525,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"13527:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13527:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"13527:61:3"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"12978:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13275:5:3","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"from","nameLocation":"13289:4:3","nodeType":"VariableDeclaration","scope":1537,"src":"13281:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"13281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"id","nameLocation":"13303:2:3","nodeType":"VariableDeclaration","scope":1537,"src":"13295:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13295:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"13315:5:3","nodeType":"VariableDeclaration","scope":1537,"src":"13307:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"13307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13280:41:3"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"13331:0:3"},"scope":1641,"src":"13266:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"14041:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"14055:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14071:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14063:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"14063:7:3","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14063:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14055:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1563,"nodeType":"IfStatement","src":"14051:88:3","trueBody":{"id":1562,"nodeType":"Block","src":"14075:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14125:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14117:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"14117:7:3","typeDescriptions":{}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1555,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"14096:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14096:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1561,"nodeType":"RevertStatement","src":"14089:39:3"}]}},{"expression":{"arguments":[{"id":1565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"14175:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14189:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14181:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"14181:7:3","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14181:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1570,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"14193:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1571,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"14198:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14206:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1564,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"14148:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14148:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"ExpressionStatement","src":"14148:61:3"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"13601:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"13960:10:3","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"from","nameLocation":"13979:4:3","nodeType":"VariableDeclaration","scope":1576,"src":"13971:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"13971:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"ids","nameLocation":"14002:3:3","nodeType":"VariableDeclaration","scope":1576,"src":"13985:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"13985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ArrayTypeName","src":"13985:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"values","nameLocation":"14024:6:3","nodeType":"VariableDeclaration","scope":1576,"src":"14007:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"14007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1545,"nodeType":"ArrayTypeName","src":"14007:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13970:61:3"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"14041:0:3"},"scope":1641,"src":"13951:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"14528:281:3","statements":[{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"$","nameLocation":"14561:1:3","nodeType":"VariableDeclaration","scope":1623,"src":"14538:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1587,"nodeType":"UserDefinedTypeName","pathNode":{"id":1586,"name":"ERC1155Storage","nameLocations":["14538:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":701,"src":"14538:14:3"},"referencedDeclaration":701,"src":"14538:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1589,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"14565:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$701_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14538:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14599:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14619:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14611:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"14611:7:3","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14611:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14599:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"14595:94:3","trueBody":{"id":1605,"nodeType":"Block","src":"14623:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14675:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14667:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"14667:7:3","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1598,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"14644:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14644:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1604,"nodeType":"RevertStatement","src":"14637:41:3"}]}},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1607,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14698:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$701_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14700:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":698,"src":"14698:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1612,"indexExpression":{"id":1609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14698:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1613,"indexExpression":{"id":1610,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14726:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14698:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1614,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"14738:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14698:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1616,"nodeType":"ExpressionStatement","src":"14698:48:3"},{"eventCall":{"arguments":[{"id":1618,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14776:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"14783:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"14793:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1617,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14761:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1622,"nodeType":"EmitStatement","src":"14756:46:3"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"14222:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14444:18:3","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"owner","nameLocation":"14471:5:3","nodeType":"VariableDeclaration","scope":1624,"src":"14463:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"operator","nameLocation":"14486:8:3","nodeType":"VariableDeclaration","scope":1624,"src":"14478:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"14478:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"approved","nameLocation":"14501:8:3","nodeType":"VariableDeclaration","scope":1624,"src":"14496:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"14496:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14462:48:3"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"14528:0:3"},"scope":1641,"src":"14435:374:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"15083:664:3","statements":[{"AST":{"nativeSrc":"15118:623:3","nodeType":"YulBlock","src":"15118:623:3","statements":[{"nativeSrc":"15176:21:3","nodeType":"YulAssignment","src":"15176:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"15192:4:3","nodeType":"YulLiteral","src":"15192:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"15186:5:3","nodeType":"YulIdentifier","src":"15186:5:3"},"nativeSrc":"15186:11:3","nodeType":"YulFunctionCall","src":"15186:11:3"},"variableNames":[{"name":"array1","nativeSrc":"15176:6:3","nodeType":"YulIdentifier","src":"15176:6:3"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"15254:6:3","nodeType":"YulIdentifier","src":"15254:6:3"},{"kind":"number","nativeSrc":"15262:1:3","nodeType":"YulLiteral","src":"15262:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15247:6:3","nodeType":"YulIdentifier","src":"15247:6:3"},"nativeSrc":"15247:17:3","nodeType":"YulFunctionCall","src":"15247:17:3"},"nativeSrc":"15247:17:3","nodeType":"YulExpressionStatement","src":"15247:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"15385:6:3","nodeType":"YulIdentifier","src":"15385:6:3"},{"kind":"number","nativeSrc":"15393:4:3","nodeType":"YulLiteral","src":"15393:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15381:3:3","nodeType":"YulIdentifier","src":"15381:3:3"},"nativeSrc":"15381:17:3","nodeType":"YulFunctionCall","src":"15381:17:3"},{"name":"element1","nativeSrc":"15400:8:3","nodeType":"YulIdentifier","src":"15400:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15374:6:3","nodeType":"YulIdentifier","src":"15374:6:3"},"nativeSrc":"15374:35:3","nodeType":"YulFunctionCall","src":"15374:35:3"},"nativeSrc":"15374:35:3","nodeType":"YulExpressionStatement","src":"15374:35:3"},{"nativeSrc":"15500:27:3","nodeType":"YulAssignment","src":"15500:27:3","value":{"arguments":[{"name":"array1","nativeSrc":"15514:6:3","nodeType":"YulIdentifier","src":"15514:6:3"},{"kind":"number","nativeSrc":"15522:4:3","nodeType":"YulLiteral","src":"15522:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15510:3:3","nodeType":"YulIdentifier","src":"15510:3:3"},"nativeSrc":"15510:17:3","nodeType":"YulFunctionCall","src":"15510:17:3"},"variableNames":[{"name":"array2","nativeSrc":"15500:6:3","nodeType":"YulIdentifier","src":"15500:6:3"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"15547:6:3","nodeType":"YulIdentifier","src":"15547:6:3"},{"kind":"number","nativeSrc":"15555:1:3","nodeType":"YulLiteral","src":"15555:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15540:6:3","nodeType":"YulIdentifier","src":"15540:6:3"},"nativeSrc":"15540:17:3","nodeType":"YulFunctionCall","src":"15540:17:3"},"nativeSrc":"15540:17:3","nodeType":"YulExpressionStatement","src":"15540:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"15581:6:3","nodeType":"YulIdentifier","src":"15581:6:3"},{"kind":"number","nativeSrc":"15589:4:3","nodeType":"YulLiteral","src":"15589:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15577:3:3","nodeType":"YulIdentifier","src":"15577:3:3"},"nativeSrc":"15577:17:3","nodeType":"YulFunctionCall","src":"15577:17:3"},{"name":"element2","nativeSrc":"15596:8:3","nodeType":"YulIdentifier","src":"15596:8:3"}],"functionName":{"name":"mstore","nativeSrc":"15570:6:3","nodeType":"YulIdentifier","src":"15570:6:3"},"nativeSrc":"15570:35:3","nodeType":"YulFunctionCall","src":"15570:35:3"},"nativeSrc":"15570:35:3","nodeType":"YulExpressionStatement","src":"15570:35:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15707:4:3","nodeType":"YulLiteral","src":"15707:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"15717:6:3","nodeType":"YulIdentifier","src":"15717:6:3"},{"kind":"number","nativeSrc":"15725:4:3","nodeType":"YulLiteral","src":"15725:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15713:3:3","nodeType":"YulIdentifier","src":"15713:3:3"},"nativeSrc":"15713:17:3","nodeType":"YulFunctionCall","src":"15713:17:3"}],"functionName":{"name":"mstore","nativeSrc":"15700:6:3","nodeType":"YulIdentifier","src":"15700:6:3"},"nativeSrc":"15700:31:3","nodeType":"YulFunctionCall","src":"15700:31:3"},"nativeSrc":"15700:31:3","nodeType":"YulExpressionStatement","src":"15700:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15176:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15254:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15385:6:3","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"15514:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15500:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15547:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15581:6:3","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"15717:6:3","valueSize":1},{"declaration":1627,"isOffset":false,"isSlot":false,"src":"15400:8:3","valueSize":1},{"declaration":1629,"isOffset":false,"isSlot":false,"src":"15596:8:3","valueSize":1}],"flags":["memory-safe"],"id":1638,"nodeType":"InlineAssembly","src":"15093:648:3"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"14815:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"14934:18:3","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"element1","nameLocation":"14970:8:3","nodeType":"VariableDeclaration","scope":1640,"src":"14962:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"14962:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"element2","nameLocation":"14996:8:3","nodeType":"VariableDeclaration","scope":1640,"src":"14988:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"14988:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14952:58:3"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"array1","nameLocation":"15050:6:3","nodeType":"VariableDeclaration","scope":1640,"src":"15033:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"15033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ArrayTypeName","src":"15033:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"array2","nameLocation":"15075:6:3","nodeType":"VariableDeclaration","scope":1640,"src":"15058:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ArrayTypeName","src":"15058:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15032:50:3"},"scope":1641,"src":"14925:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1642,"src":"1052:14697:3","usedErrors":[211,214,2171,2176,2181,2188,2193,2198,2205],"usedEvents":[219,2530,2545,2554,2561]}],"src":"109:15641:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol","exportedSymbols":{"ERC1155BurnableUpgradeable":[1737],"ERC1155Upgradeable":[1641],"Initializable":[462]},"id":1738,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1643,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1738,"sourceUnit":1642,"src":"154:61:4","symbolAliases":[{"foreign":{"id":1644,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"162:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1738,"sourceUnit":463,"src":"216:69:4","symbolAliases":[{"foreign":{"id":1646,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"224:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1649,"name":"Initializable","nameLocations":["483:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"483:13:4"},"id":1650,"nodeType":"InheritanceSpecifier","src":"483:13:4"},{"baseName":{"id":1651,"name":"ERC1155Upgradeable","nameLocations":["498:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"498:18:4"},"id":1652,"nodeType":"InheritanceSpecifier","src":"498:18:4"}],"canonicalName":"ERC1155BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"287:147:4","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."},"fullyImplemented":true,"id":1737,"linearizedBaseContracts":[1737,1641,2206,2691,2633,2038,4455,1838,462],"name":"ERC1155BurnableUpgradeable","nameLocation":"453:26:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1657,"nodeType":"Block","src":"583:7:4","statements":[]},"id":1658,"implemented":true,"kind":"function","modifiers":[{"id":1655,"kind":"modifierInvocation","modifierName":{"id":1654,"name":"onlyInitializing","nameLocations":["566:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"566:16:4"},"nodeType":"ModifierInvocation","src":"566:16:4"}],"name":"__ERC1155Burnable_init","nameLocation":"532:22:4","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"554:2:4"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"583:0:4"},"scope":1737,"src":"523:67:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1663,"nodeType":"Block","src":"666:7:4","statements":[]},"id":1664,"implemented":true,"kind":"function","modifiers":[{"id":1661,"kind":"modifierInvocation","modifierName":{"id":1660,"name":"onlyInitializing","nameLocations":["649:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"649:16:4"},"nodeType":"ModifierInvocation","src":"649:16:4"}],"name":"__ERC1155Burnable_init_unchained","nameLocation":"605:32:4","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"637:2:4"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"666:0:4"},"scope":1737,"src":"596:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"751:208:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1673,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"765:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1674,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"776:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"776:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"765:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"792:40:4","subExpression":{"arguments":[{"id":1678,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"810:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1679,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"819:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1677,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"793:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"793:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"765:67:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1691,"nodeType":"IfStatement","src":"761:156:4","trueBody":{"id":1690,"nodeType":"Block","src":"834:83:4","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1685,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"884:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1687,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"898:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1684,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"855:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1689,"nodeType":"RevertStatement","src":"848:58:4"}]}},{"expression":{"arguments":[{"id":1693,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"933:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"942:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"946:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"927:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"927:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"927:25:4"}]},"functionSelector":"f5298aca","id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"687:4:4","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"account","nameLocation":"700:7:4","nodeType":"VariableDeclaration","scope":1699,"src":"692:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"id","nameLocation":"717:2:4","nodeType":"VariableDeclaration","scope":1699,"src":"709:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"729:5:4","nodeType":"VariableDeclaration","scope":1699,"src":"721:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:44:4"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"751:0:4"},"scope":1737,"src":"678:281:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1735,"nodeType":"Block","src":"1063:215:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1077:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1711,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1088:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1077:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1104:40:4","subExpression":{"arguments":[{"id":1715,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1122:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1716,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1131:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1131:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1714,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1105:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1077:67:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"1073:156:4","trueBody":{"id":1727,"nodeType":"Block","src":"1146:83:4","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1722,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1196:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1196:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1210:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1721,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1167:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1726,"nodeType":"RevertStatement","src":"1160:58:4"}]}},{"expression":{"arguments":[{"id":1730,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1250:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"1259:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1732,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"1264:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1729,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1239:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"1239:32:4"}]},"functionSelector":"6b20c454","id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"974:9:4","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"account","nameLocation":"992:7:4","nodeType":"VariableDeclaration","scope":1736,"src":"984:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"ids","nameLocation":"1018:3:4","nodeType":"VariableDeclaration","scope":1736,"src":"1001:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ArrayTypeName","src":"1001:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"values","nameLocation":"1040:6:4","nodeType":"VariableDeclaration","scope":1736,"src":"1023:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"nodeType":"ArrayTypeName","src":"1023:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"983:64:4"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"1063:0:4"},"scope":1737,"src":"965:313:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1738,"src":"435:845:4","usedErrors":[211,214,2171,2176,2181,2188,2193,2198,2205],"usedEvents":[219,2530,2545,2554,2561]}],"src":"128:1153:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","exportedSymbols":{"ERC1155PausableUpgradeable":[1792],"ERC1155Upgradeable":[1641],"Initializable":[462],"PausableUpgradeable":[1998]},"id":1793,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"../ERC1155Upgradeable.sol","id":1741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":1642,"src":"154:61:5","symbolAliases":[{"foreign":{"id":1740,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"162:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"../../../utils/PausableUpgradeable.sol","id":1743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":1999,"src":"216:75:5","symbolAliases":[{"foreign":{"id":1742,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"224:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1745,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1793,"sourceUnit":463,"src":"292:69:5","symbolAliases":[{"foreign":{"id":1744,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"300:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1747,"name":"Initializable","nameLocations":["1102:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1102:13:5"},"id":1748,"nodeType":"InheritanceSpecifier","src":"1102:13:5"},{"baseName":{"id":1749,"name":"ERC1155Upgradeable","nameLocations":["1117:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"1117:18:5"},"id":1750,"nodeType":"InheritanceSpecifier","src":"1117:18:5"},{"baseName":{"id":1751,"name":"PausableUpgradeable","nameLocations":["1137:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"1137:19:5"},"id":1752,"nodeType":"InheritanceSpecifier","src":"1137:19:5"}],"canonicalName":"ERC1155PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"363:690:5","text":" @dev ERC-1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1792,"linearizedBaseContracts":[1792,1998,1641,2206,2691,2633,2038,4455,1838,462],"name":"ERC1155PausableUpgradeable","nameLocation":"1072:26:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1757,"nodeType":"Block","src":"1223:7:5","statements":[]},"id":1758,"implemented":true,"kind":"function","modifiers":[{"id":1755,"kind":"modifierInvocation","modifierName":{"id":1754,"name":"onlyInitializing","nameLocations":["1206:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1206:16:5"},"nodeType":"ModifierInvocation","src":"1206:16:5"}],"name":"__ERC1155Pausable_init","nameLocation":"1172:22:5","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"1194:2:5"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[],"src":"1223:0:5"},"scope":1792,"src":"1163:67:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"1306:7:5","statements":[]},"id":1764,"implemented":true,"kind":"function","modifiers":[{"id":1761,"kind":"modifierInvocation","modifierName":{"id":1760,"name":"onlyInitializing","nameLocations":["1289:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1289:16:5"},"nodeType":"ModifierInvocation","src":"1289:16:5"}],"name":"__ERC1155Pausable_init_unchained","nameLocation":"1245:32:5","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"1277:2:5"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"1306:0:5"},"scope":1792,"src":"1236:77:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1174],"body":{"id":1790,"nodeType":"Block","src":"1614:53:5","statements":[{"expression":{"arguments":[{"id":1784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1638:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1644:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1648:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1787,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1653:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1781,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1624:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155PausableUpgradeable_$1792_$","typeString":"type(contract super ERC1155PausableUpgradeable)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1624:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1624:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"1624:36:5"}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"1318:123:5","text":" @dev See {ERC1155-_update}.\n Requirements:\n - the contract must not be paused."},"id":1791,"implemented":true,"kind":"function","modifiers":[{"id":1779,"kind":"modifierInvocation","modifierName":{"id":1778,"name":"whenNotPaused","nameLocations":["1600:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1888,"src":"1600:13:5"},"nodeType":"ModifierInvocation","src":"1600:13:5"}],"name":"_update","nameLocation":"1455:7:5","nodeType":"FunctionDefinition","overrides":{"id":1777,"nodeType":"OverrideSpecifier","overrides":[],"src":"1591:8:5"},"parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"from","nameLocation":"1480:4:5","nodeType":"VariableDeclaration","scope":1791,"src":"1472:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"to","nameLocation":"1502:2:5","nodeType":"VariableDeclaration","scope":1791,"src":"1494:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"ids","nameLocation":"1531:3:5","nodeType":"VariableDeclaration","scope":1791,"src":"1514:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ArrayTypeName","src":"1514:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"values","nameLocation":"1561:6:5","nodeType":"VariableDeclaration","scope":1791,"src":"1544:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ArrayTypeName","src":"1544:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1462:111:5"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"1614:0:5"},"scope":1792,"src":"1446:221:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1793,"src":"1054:615:5","usedErrors":[211,214,1877,1880,2171,2176,2181,2188,2193,2198,2205],"usedEvents":[219,1869,1874,2530,2545,2554,2561]}],"src":"128:1542:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1838],"Initializable":[462]},"id":1839,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1794,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1839,"sourceUnit":463,"src":"126:63:6","symbolAliases":[{"foreign":{"id":1795,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1798,"name":"Initializable","nameLocations":["728:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:6"},"id":1799,"nodeType":"InheritanceSpecifier","src":"728:13:6"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"191:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1838,"linearizedBaseContracts":[1838,462],"name":"ContextUpgradeable","nameLocation":"706:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1804,"nodeType":"Block","src":"800:7:6","statements":[]},"id":1805,"implemented":true,"kind":"function","modifiers":[{"id":1802,"kind":"modifierInvocation","modifierName":{"id":1801,"name":"onlyInitializing","nameLocations":["783:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:6"},"nodeType":"ModifierInvocation","src":"783:16:6"}],"name":"__Context_init","nameLocation":"757:14:6","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[],"src":"771:2:6"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"800:0:6"},"scope":1838,"src":"748:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1810,"nodeType":"Block","src":"875:7:6","statements":[]},"id":1811,"implemented":true,"kind":"function","modifiers":[{"id":1808,"kind":"modifierInvocation","modifierName":{"id":1807,"name":"onlyInitializing","nameLocations":["858:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:6"},"nodeType":"ModifierInvocation","src":"858:16:6"}],"name":"__Context_init_unchained","nameLocation":"822:24:6","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[],"src":"846:2:6"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"875:0:6"},"scope":1838,"src":"813:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"949:34:6","statements":[{"expression":{"expression":{"id":1816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:6","memberName":"sender","nodeType":"MemberAccess","src":"966:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1815,"id":1818,"nodeType":"Return","src":"959:17:6"}]},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:6","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"906:2:6"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"940:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:6"},"scope":1838,"src":"887:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"1056:32:6","statements":[{"expression":{"expression":{"id":1825,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:6","memberName":"data","nodeType":"MemberAccess","src":"1073:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1824,"id":1827,"nodeType":"Return","src":"1066:15:6"}]},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:6","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"1006:2:6"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"1040:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:6"},"scope":1838,"src":"989:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1836,"nodeType":"Block","src":"1166:25:6","statements":[{"expression":{"hexValue":"30","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1833,"id":1835,"nodeType":"Return","src":"1176:8:6"}]},"id":1837,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:6","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"1123:2:6"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1837,"src":"1157:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:6"},"scope":1838,"src":"1094:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1839,"src":"688:505:6","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1838],"Initializable":[462],"PausableUpgradeable":[1998]},"id":1999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1840,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1999,"sourceUnit":1839,"src":"128:67:7","symbolAliases":[{"foreign":{"id":1841,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"136:18:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1999,"sourceUnit":463,"src":"196:63:7","symbolAliases":[{"foreign":{"id":1843,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1846,"name":"Initializable","nameLocations":["742:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"742:13:7"},"id":1847,"nodeType":"InheritanceSpecifier","src":"742:13:7"},{"baseName":{"id":1848,"name":"ContextUpgradeable","nameLocations":["757:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"757:18:7"},"id":1849,"nodeType":"InheritanceSpecifier","src":"757:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"261:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1998,"linearizedBaseContracts":[1998,1838,462],"name":"PausableUpgradeable","nameLocation":"719:19:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"782:66:7","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1853,"members":[{"constant":false,"id":1852,"mutability":"mutable","name":"_paused","nameLocation":"891:7:7","nodeType":"VariableDeclaration","scope":1853,"src":"886:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1851,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:7","nodeType":"StructDefinition","scope":1998,"src":"853:52:7","visibility":"public"},{"constant":true,"id":1856,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:7","nodeType":"VariableDeclaration","scope":1998,"src":"1023:117:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:7","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1863,"nodeType":"Block","src":"1227:82:7","statements":[{"AST":{"nativeSrc":"1246:57:7","nodeType":"YulBlock","src":"1246:57:7","statements":[{"nativeSrc":"1260:33:7","nodeType":"YulAssignment","src":"1260:33:7","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:7","nodeType":"YulIdentifier","src":"1270:23:7"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:7","nodeType":"YulIdentifier","src":"1260:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1860,"isOffset":false,"isSlot":true,"src":"1260:6:7","suffix":"slot","valueSize":1},{"declaration":1856,"isOffset":false,"isSlot":false,"src":"1270:23:7","valueSize":1}],"id":1862,"nodeType":"InlineAssembly","src":"1237:66:7"}]},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:7","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1175:2:7"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"$","nameLocation":"1224:1:7","nodeType":"VariableDeclaration","scope":1864,"src":"1200:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1859,"nodeType":"UserDefinedTypeName","pathNode":{"id":1858,"name":"PausableStorage","nameLocations":["1200:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1200:15:7"},"referencedDeclaration":1853,"src":"1200:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:7"},"scope":1998,"src":"1147:162:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"1315:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1869,"name":"Paused","nameLocation":"1399:6:7","nodeType":"EventDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:7","nodeType":"VariableDeclaration","scope":1869,"src":"1406:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:7"},"src":"1393:30:7"},{"anonymous":false,"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"1429:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1874,"name":"Unpaused","nameLocation":"1510:8:7","nodeType":"EventDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:7","nodeType":"VariableDeclaration","scope":1874,"src":"1519:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:7"},"src":"1504:32:7"},{"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"1542:76:7","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1877,"name":"EnforcedPause","nameLocation":"1629:13:7","nodeType":"ErrorDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[],"src":"1642:2:7"},"src":"1623:22:7"},{"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"1651:80:7","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1880,"name":"ExpectedPause","nameLocation":"1742:13:7","nodeType":"ErrorDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"1755:2:7"},"src":"1736:22:7"},{"body":{"id":1887,"nodeType":"Block","src":"1969:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1883,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1979:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"1979:19:7"},{"id":1886,"nodeType":"PlaceholderStatement","src":"2008:1:7"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"1764:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1888,"name":"whenNotPaused","nameLocation":"1953:13:7","nodeType":"ModifierDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"1966:2:7"},"src":"1944:72:7","virtual":false,"visibility":"internal"},{"body":{"id":1895,"nodeType":"Block","src":"2216:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1891,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2226:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"2226:16:7"},{"id":1894,"nodeType":"PlaceholderStatement","src":"2252:1:7"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"2022:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1896,"name":"whenPaused","nameLocation":"2203:10:7","nodeType":"ModifierDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"2213:2:7"},"src":"2194:66:7","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"2319:7:7","statements":[]},"id":1902,"implemented":true,"kind":"function","modifiers":[{"id":1899,"kind":"modifierInvocation","modifierName":{"id":1898,"name":"onlyInitializing","nameLocations":["2302:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2302:16:7"},"nodeType":"ModifierInvocation","src":"2302:16:7"}],"name":"__Pausable_init","nameLocation":"2275:15:7","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"2290:2:7"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[],"src":"2319:0:7"},"scope":1998,"src":"2266:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"2395:7:7","statements":[]},"id":1908,"implemented":true,"kind":"function","modifiers":[{"id":1905,"kind":"modifierInvocation","modifierName":{"id":1904,"name":"onlyInitializing","nameLocations":["2378:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2378:16:7"},"nodeType":"ModifierInvocation","src":"2378:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:7","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"2366:2:7"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"2395:0:7"},"scope":1998,"src":"2332:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"2549:92:7","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"$","nameLocation":"2583:1:7","nodeType":"VariableDeclaration","scope":1923,"src":"2559:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1915,"nodeType":"UserDefinedTypeName","pathNode":{"id":1914,"name":"PausableStorage","nameLocations":["2559:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"2559:15:7"},"referencedDeclaration":1853,"src":"2559:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1917,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2587:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1853_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:7"},{"expression":{"expression":{"id":1920,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2625:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"2625:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1913,"id":1922,"nodeType":"Return","src":"2618:16:7"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"2407:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:7","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"2511:2:7"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1924,"src":"2543:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:7"},"scope":1998,"src":"2496:145:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1935,"nodeType":"Block","src":"2760:77:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1928,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2774:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"2770:61:7","trueBody":{"id":1933,"nodeType":"Block","src":"2784:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1930,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2805:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1932,"nodeType":"RevertStatement","src":"2798:22:7"}]}}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"2647:57:7","text":" @dev Throws if the contract is paused."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:7","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[],"src":"2735:2:7"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"2760:0:7"},"scope":1998,"src":"2709:128:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1948,"nodeType":"Block","src":"2957:78:7","statements":[{"condition":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1940,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"2972:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1947,"nodeType":"IfStatement","src":"2967:62:7","trueBody":{"id":1946,"nodeType":"Block","src":"2982:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1943,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3003:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1945,"nodeType":"RevertStatement","src":"2996:22:7"}]}}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"2843:61:7","text":" @dev Throws if the contract is not paused."},"id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:7","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"2932:2:7"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"2957:0:7"},"scope":1998,"src":"2909:126:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"3219:127:7","statements":[{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"$","nameLocation":"3253:1:7","nodeType":"VariableDeclaration","scope":1972,"src":"3229:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1956,"nodeType":"UserDefinedTypeName","pathNode":{"id":1955,"name":"PausableStorage","nameLocations":["3229:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3229:15:7"},"referencedDeclaration":1853,"src":"3229:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1960,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1958,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3257:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1853_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:7"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1961,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3288:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"3288:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1966,"nodeType":"ExpressionStatement","src":"3288:16:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1968,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3326:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1967,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3319:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"EmitStatement","src":"3314:25:7"}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"3041:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1973,"implemented":true,"kind":"function","modifiers":[{"id":1953,"kind":"modifierInvocation","modifierName":{"id":1952,"name":"whenNotPaused","nameLocations":["3205:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1888,"src":"3205:13:7"},"nodeType":"ModifierInvocation","src":"3205:13:7"}],"name":"_pause","nameLocation":"3179:6:7","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"3185:2:7"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"3219:0:7"},"scope":1998,"src":"3170:176:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"3526:130:7","statements":[{"assignments":[1981],"declarations":[{"constant":false,"id":1981,"mutability":"mutable","name":"$","nameLocation":"3560:1:7","nodeType":"VariableDeclaration","scope":1996,"src":"3536:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1980,"nodeType":"UserDefinedTypeName","pathNode":{"id":1979,"name":"PausableStorage","nameLocations":["3536:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3536:15:7"},"referencedDeclaration":1853,"src":"3536:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1982,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3564:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1853_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:7"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"3595:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1853_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"3595:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"ExpressionStatement","src":"3595:17:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1992,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3636:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1991,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3627:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"EmitStatement","src":"3622:27:7"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"3352:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1997,"implemented":true,"kind":"function","modifiers":[{"id":1977,"kind":"modifierInvocation","modifierName":{"id":1976,"name":"whenPaused","nameLocations":["3515:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1896,"src":"3515:10:7"},"nodeType":"ModifierInvocation","src":"3515:10:7"}],"name":"_unpause","nameLocation":"3487:8:7","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"3495:2:7"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"3526:0:7"},"scope":1998,"src":"3478:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1999,"src":"701:2957:7","usedErrors":[211,214,1877,1880],"usedEvents":[219,1869,1874]}],"src":"102:3557:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2038],"IERC165":[4455],"Initializable":[462]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2000,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":4456,"src":"140:80:8","symbolAliases":[{"foreign":{"id":2001,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":463,"src":"221:66:8","symbolAliases":[{"foreign":{"id":2003,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"229:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2006,"name":"Initializable","nameLocations":["808:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"808:13:8"},"id":2007,"nodeType":"InheritanceSpecifier","src":"808:13:8"},{"baseName":{"id":2008,"name":"IERC165","nameLocations":["823:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4455,"src":"823:7:8"},"id":2009,"nodeType":"InheritanceSpecifier","src":"823:7:8"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"289:479:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038,4455,462],"name":"ERC165Upgradeable","nameLocation":"787:17:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2014,"nodeType":"Block","src":"888:7:8","statements":[]},"id":2015,"implemented":true,"kind":"function","modifiers":[{"id":2012,"kind":"modifierInvocation","modifierName":{"id":2011,"name":"onlyInitializing","nameLocations":["871:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"871:16:8"},"nodeType":"ModifierInvocation","src":"871:16:8"}],"name":"__ERC165_init","nameLocation":"846:13:8","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"859:2:8"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"888:0:8"},"scope":2038,"src":"837:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"962:7:8","statements":[]},"id":2021,"implemented":true,"kind":"function","modifiers":[{"id":2018,"kind":"modifierInvocation","modifierName":{"id":2017,"name":"onlyInitializing","nameLocations":["945:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"945:16:8"},"nodeType":"ModifierInvocation","src":"945:16:8"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:8","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"933:2:8"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"962:0:8"},"scope":2038,"src":"901:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4454],"body":{"id":2036,"nodeType":"Block","src":"1084:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1101:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2031,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"1121:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4455_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4455_$","typeString":"type(contract IERC165)"}],"id":2030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4455","typeString":"type(contract IERC165)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2028,"id":2035,"nodeType":"Return","src":"1094:47:8"}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"974:23:8","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:8","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:8","nodeType":"VariableDeclaration","scope":2037,"src":"1029:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2023,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:8"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"1078:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2026,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:8"},"scope":2038,"src":"1002:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2039,"src":"769:381:8","usedErrors":[211,214],"usedEvents":[219]}],"src":"114:1037:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2059]},"id":2060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"134:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2059,"linearizedBaseContracts":[2059],"name":"IERC1967","nameLocation":"246:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"261:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2046,"name":"Upgraded","nameLocation":"340:8:9","nodeType":"EventDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:9","nodeType":"VariableDeclaration","scope":2046,"src":"349:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:9"},"src":"334:47:9"},{"anonymous":false,"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"387:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2053,"name":"AdminChanged","nameLocation":"465:12:9","nodeType":"EventDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:9","nodeType":"VariableDeclaration","scope":2053,"src":"478:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2051,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:9","nodeType":"VariableDeclaration","scope":2053,"src":"501:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:9"},"src":"459:60:9"},{"anonymous":false,"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"525:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2058,"name":"BeaconUpgraded","nameLocation":"595:14:9","nodeType":"EventDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:9","nodeType":"VariableDeclaration","scope":2058,"src":"610:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:9"},"src":"589:45:9"}],"scope":2060,"src":"236:400:9","usedErrors":[],"usedEvents":[2046,2053,2058]}],"src":"107:530:9"},"id":9},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2069]},"id":2070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2061,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"140:204:10","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2069,"linearizedBaseContracts":[2069],"name":"IERC1822Proxiable","nameLocation":"355:17:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"379:438:10","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2068,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:10","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"844:2:10"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2068,"src":"870:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:10"},"scope":2069,"src":"822:57:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2070,"src":"345:536:10","usedErrors":[],"usedEvents":[]}],"src":"113:769:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2206],"IERC20Errors":[2111],"IERC721Errors":[2159]},"id":2207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2071,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"138:141:11","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2111,"linearizedBaseContracts":[2111],"name":"IERC20Errors","nameLocation":"290:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"309:309:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2081,"name":"ERC20InsufficientBalance","nameLocation":"629:24:11","nodeType":"ErrorDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"sender","nameLocation":"662:6:11","nodeType":"VariableDeclaration","scope":2081,"src":"654:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"balance","nameLocation":"678:7:11","nodeType":"VariableDeclaration","scope":2081,"src":"670:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"needed","nameLocation":"695:6:11","nodeType":"VariableDeclaration","scope":2081,"src":"687:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:11"},"src":"623:80:11"},{"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"709:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2086,"name":"ERC20InvalidSender","nameLocation":"872:18:11","nodeType":"ErrorDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"sender","nameLocation":"899:6:11","nodeType":"VariableDeclaration","scope":2086,"src":"891:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:11"},"src":"866:41:11"},{"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"913:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2091,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:11","nodeType":"ErrorDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:11","nodeType":"VariableDeclaration","scope":2091,"src":"1104:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:11"},"src":"1077:45:11"},{"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"1128:345:11","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2100,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:11","nodeType":"ErrorDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"spender","nameLocation":"1519:7:11","nodeType":"VariableDeclaration","scope":2100,"src":"1511:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:11","nodeType":"VariableDeclaration","scope":2100,"src":"1528:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"needed","nameLocation":"1555:6:11","nodeType":"VariableDeclaration","scope":2100,"src":"1547:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:11"},"src":"1478:85:11"},{"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"1569:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2105,"name":"ERC20InvalidApprover","nameLocation":"1754:20:11","nodeType":"ErrorDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"approver","nameLocation":"1783:8:11","nodeType":"VariableDeclaration","scope":2105,"src":"1775:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:11"},"src":"1748:45:11"},{"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"1799:195:11","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2110,"name":"ERC20InvalidSpender","nameLocation":"2005:19:11","nodeType":"ErrorDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"spender","nameLocation":"2033:7:11","nodeType":"VariableDeclaration","scope":2110,"src":"2025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:11"},"src":"1999:43:11"}],"scope":2207,"src":"280:1764:11","usedErrors":[2081,2086,2091,2100,2105,2110],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"2046:143:11","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2159,"linearizedBaseContracts":[2159],"name":"IERC721Errors","nameLocation":"2200:13:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"2220:219:11","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2117,"name":"ERC721InvalidOwner","nameLocation":"2450:18:11","nodeType":"ErrorDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"owner","nameLocation":"2477:5:11","nodeType":"VariableDeclaration","scope":2117,"src":"2469:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:11"},"src":"2444:40:11"},{"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"2490:132:11","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2122,"name":"ERC721NonexistentToken","nameLocation":"2633:22:11","nodeType":"ErrorDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:11","nodeType":"VariableDeclaration","scope":2122,"src":"2656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:11"},"src":"2627:46:11"},{"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"2679:289:11","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2131,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:11","nodeType":"ErrorDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"sender","nameLocation":"3008:6:11","nodeType":"VariableDeclaration","scope":2131,"src":"3000:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:11","nodeType":"VariableDeclaration","scope":2131,"src":"3016:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"owner","nameLocation":"3041:5:11","nodeType":"VariableDeclaration","scope":2131,"src":"3033:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:11"},"src":"2973:75:11"},{"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"3054:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2136,"name":"ERC721InvalidSender","nameLocation":"3217:19:11","nodeType":"ErrorDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"sender","nameLocation":"3245:6:11","nodeType":"VariableDeclaration","scope":2136,"src":"3237:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:11"},"src":"3211:42:11"},{"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"3259:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2141,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:11","nodeType":"ErrorDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:11","nodeType":"VariableDeclaration","scope":2141,"src":"3451:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:11"},"src":"3423:46:11"},{"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"3475:247:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2148,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:11","nodeType":"ErrorDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"operator","nameLocation":"3768:8:11","nodeType":"VariableDeclaration","scope":2148,"src":"3760:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:11","nodeType":"VariableDeclaration","scope":2148,"src":"3778:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:11"},"src":"3727:68:11"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"3801:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2153,"name":"ERC721InvalidApprover","nameLocation":"3986:21:11","nodeType":"ErrorDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"approver","nameLocation":"4016:8:11","nodeType":"VariableDeclaration","scope":2153,"src":"4008:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:11"},"src":"3980:46:11"},{"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"4032:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2158,"name":"ERC721InvalidOperator","nameLocation":"4240:21:11","nodeType":"ErrorDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"operator","nameLocation":"4270:8:11","nodeType":"VariableDeclaration","scope":2158,"src":"4262:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:11"},"src":"4234:46:11"}],"scope":2207,"src":"2190:2092:11","usedErrors":[2117,2122,2131,2136,2141,2148,2153,2158],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"4284:145:11","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2206,"linearizedBaseContracts":[2206],"name":"IERC1155Errors","nameLocation":"4440:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"4461:361:11","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2171,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:11","nodeType":"ErrorDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"sender","nameLocation":"4868:6:11","nodeType":"VariableDeclaration","scope":2171,"src":"4860:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"balance","nameLocation":"4884:7:11","nodeType":"VariableDeclaration","scope":2171,"src":"4876:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"needed","nameLocation":"4901:6:11","nodeType":"VariableDeclaration","scope":2171,"src":"4893:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:11","nodeType":"VariableDeclaration","scope":2171,"src":"4909:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:11"},"src":"4827:99:11"},{"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"4932:152:11","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2176,"name":"ERC1155InvalidSender","nameLocation":"5095:20:11","nodeType":"ErrorDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"sender","nameLocation":"5124:6:11","nodeType":"VariableDeclaration","scope":2176,"src":"5116:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:11"},"src":"5089:43:11"},{"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"5138:159:11","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2181,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:11","nodeType":"ErrorDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:11","nodeType":"VariableDeclaration","scope":2181,"src":"5331:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:11"},"src":"5302:47:11"},{"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"5355:256:11","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2188,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:11","nodeType":"ErrorDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"operator","nameLocation":"5659:8:11","nodeType":"VariableDeclaration","scope":2188,"src":"5651:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"owner","nameLocation":"5677:5:11","nodeType":"VariableDeclaration","scope":2188,"src":"5669:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:11"},"src":"5616:68:11"},{"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"5690:174:11","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2193,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:11","nodeType":"ErrorDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"approver","nameLocation":"5906:8:11","nodeType":"VariableDeclaration","scope":2193,"src":"5898:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:11"},"src":"5869:47:11"},{"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"5922:197:11","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2198,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:11","nodeType":"ErrorDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"operator","nameLocation":"6161:8:11","nodeType":"VariableDeclaration","scope":2198,"src":"6153:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:11"},"src":"6124:47:11"},{"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"6177:280:11","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2205,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:11","nodeType":"ErrorDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:11","nodeType":"VariableDeclaration","scope":2205,"src":"6494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:11","nodeType":"VariableDeclaration","scope":2205,"src":"6513:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:11"},"src":"6462:73:11"}],"scope":2207,"src":"4430:2107:11","usedErrors":[2171,2176,2181,2188,2193,2198,2205],"usedEvents":[]}],"src":"112:6426:11"},"id":11},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3105],"ERC1967Utils":[2500],"IBeacon":[2510],"IERC1967":[2059],"StorageSlot":[4443]},"id":2501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2208,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":2511,"src":"140:46:12","symbolAliases":[{"foreign":{"id":2209,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":2060,"src":"187:55:12","symbolAliases":[{"foreign":{"id":2211,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"195:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":3106,"src":"243:48:12","symbolAliases":[{"foreign":{"id":2213,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"251:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":4444,"src":"292:56:12","symbolAliases":[{"foreign":{"id":2215,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"300:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"350:145:12","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2500,"linearizedBaseContracts":[2500],"name":"ERC1967Utils","nameLocation":"504:12:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"523:170:12","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2221,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:12","nodeType":"VariableDeclaration","scope":2500,"src":"763:114:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:12","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"884:69:12","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2226,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:12","nodeType":"ErrorDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:12","nodeType":"VariableDeclaration","scope":2226,"src":"993:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:12"},"src":"958:59:12"},{"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"1023:60:12","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2231,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:12","nodeType":"ErrorDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"admin","nameLocation":"1122:5:12","nodeType":"VariableDeclaration","scope":2231,"src":"1114:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:12"},"src":"1088:41:12"},{"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"1135:61:12","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2236,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:12","nodeType":"ErrorDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:12","nodeType":"VariableDeclaration","scope":2236,"src":"1228:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:12"},"src":"1201:43:12"},{"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"1250:82:12","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2239,"name":"ERC1967NonPayable","nameLocation":"1343:17:12","nodeType":"ErrorDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[],"src":"1360:2:12"},"src":"1337:26:12"},{"body":{"id":2251,"nodeType":"Block","src":"1502:77:12","statements":[{"expression":{"expression":{"arguments":[{"id":2247,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1546:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2245,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"1519:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"1519:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"1519:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2244,"id":2250,"nodeType":"Return","src":"1512:60:12"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"1369:67:12","text":" @dev Returns the current implementation address."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:12","nodeType":"FunctionDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[],"src":"1467:2:12"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"1493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:12"},"scope":2500,"src":"1441:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2278,"nodeType":"Block","src":"1734:218:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2258,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1748:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:12","memberName":"code","nodeType":"MemberAccess","src":"1748:22:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:12","memberName":"length","nodeType":"MemberAccess","src":"1748:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2268,"nodeType":"IfStatement","src":"1744:119:12","trueBody":{"id":2267,"nodeType":"Block","src":"1784:79:12","statements":[{"errorCall":{"arguments":[{"id":2264,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1834:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2263,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1805:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2266,"nodeType":"RevertStatement","src":"1798:54:12"}]}},{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2272,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1899:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2269,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"1872:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"1872:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"1872:53:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2275,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1928:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2277,"nodeType":"ExpressionStatement","src":"1872:73:12"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"1585:81:12","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:12","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:12","nodeType":"VariableDeclaration","scope":2279,"src":"1699:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:12"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"1734:0:12"},"scope":2500,"src":"1671:281:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2314,"nodeType":"Block","src":"2345:263:12","statements":[{"expression":{"arguments":[{"id":2288,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2374:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2287,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2355:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"2355:37:12"},{"eventCall":{"arguments":[{"id":2294,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2425:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2291,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2407:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2059_$","typeString":"type(contract IERC1967)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:12","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2046,"src":"2407:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"EmitStatement","src":"2402:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2297,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"2458:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:12","memberName":"length","nodeType":"MemberAccess","src":"2458:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2312,"nodeType":"Block","src":"2559:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2309,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2573:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"2573:18:12"}]},"id":2313,"nodeType":"IfStatement","src":"2454:148:12","trueBody":{"id":2308,"nodeType":"Block","src":"2475:78:12","statements":[{"expression":{"arguments":[{"id":2304,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2518:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"2537:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2301,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3105_$","typeString":"type(library Address)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3022,"src":"2489:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2307,"nodeType":"ExpressionStatement","src":"2489:53:12"}]}}]},"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"1958:301:12","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:12","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:12","nodeType":"VariableDeclaration","scope":2315,"src":"2290:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"data","nameLocation":"2330:4:12","nodeType":"VariableDeclaration","scope":2315,"src":"2317:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2283,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:12"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"2345:0:12"},"scope":2500,"src":"2264:344:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2614:145:12","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2319,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:12","nodeType":"VariableDeclaration","scope":2500,"src":"2829:105:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:12","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"3339:68:12","statements":[{"expression":{"expression":{"arguments":[{"id":2327,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"3383:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2325,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3356:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"3356:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"3356:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2324,"id":2330,"nodeType":"Return","src":"3349:51:12"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"2941:341:12","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:12","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"3304:2:12"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"3330:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:12"},"scope":2500,"src":"3287:120:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"3535:172:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3549:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:12","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"IfStatement","src":"3545:91:12","trueBody":{"id":2351,"nodeType":"Block","src":"3573:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:12","typeDescriptions":{}}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2344,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3594:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2350,"nodeType":"RevertStatement","src":"3587:38:12"}]}},{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2356,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"3672:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2353,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3645:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"3645:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"3645:44:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2359,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3692:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2361,"nodeType":"ExpressionStatement","src":"3645:55:12"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"3413:72:12","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:12","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:12","nodeType":"VariableDeclaration","scope":2363,"src":"3509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:12"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"3535:0:12"},"scope":2500,"src":"3490:217:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2381,"nodeType":"Block","src":"3875:94:12","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2372,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"3912:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2374,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3924:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2369,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3890:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2059_$","typeString":"type(contract IERC1967)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:12","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2053,"src":"3890:21:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2376,"nodeType":"EmitStatement","src":"3885:48:12"},{"expression":{"arguments":[{"id":2378,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3953:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2377,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3943:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"ExpressionStatement","src":"3943:19:12"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"3713:109:12","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:12","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:12","nodeType":"VariableDeclaration","scope":2382,"src":"3848:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:12"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[],"src":"3875:0:12"},"scope":2500,"src":"3827:142:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"3975:201:12","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2386,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:12","nodeType":"VariableDeclaration","scope":2500,"src":"4246:106:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:12","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"4468:69:12","statements":[{"expression":{"expression":{"arguments":[{"id":2394,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"4512:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2392,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"4485:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"4485:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"4485:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2391,"id":2397,"nodeType":"Return","src":"4478:52:12"}]},"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"4359:51:12","text":" @dev Returns the current beacon."},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:12","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"4433:2:12"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"4459:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:12"},"scope":2500,"src":"4415:122:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"4667:390:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2405,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"4681:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:12","memberName":"code","nodeType":"MemberAccess","src":"4681:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:12","memberName":"length","nodeType":"MemberAccess","src":"4681:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"IfStatement","src":"4677:95:12","trueBody":{"id":2414,"nodeType":"Block","src":"4709:63:12","statements":[{"errorCall":{"arguments":[{"id":2411,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"4751:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2410,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"4730:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2413,"nodeType":"RevertStatement","src":"4723:38:12"}]}},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2419,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"4809:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2416,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"4782:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4443_$","typeString":"type(library StorageSlot)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"4782:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"4782:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2422,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"4830:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2424,"nodeType":"ExpressionStatement","src":"4782:57:12"},{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:12","nodeType":"VariableDeclaration","scope":2444,"src":"4850:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2428,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"4889:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2427,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"4881:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2510_$","typeString":"type(contract IBeacon)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2510","typeString":"contract IBeacon"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"4881:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2433,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4930:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:12","memberName":"code","nodeType":"MemberAccess","src":"4930:25:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:12","memberName":"length","nodeType":"MemberAccess","src":"4930:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"nodeType":"IfStatement","src":"4926:125:12","trueBody":{"id":2442,"nodeType":"Block","src":"4969:82:12","statements":[{"errorCall":{"arguments":[{"id":2439,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5019:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2438,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"4990:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2441,"nodeType":"RevertStatement","src":"4983:57:12"}]}}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"4543:72:12","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:12","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:12","nodeType":"VariableDeclaration","scope":2445,"src":"4640:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:12"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"4667:0:12"},"scope":2500,"src":"4620:437:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2484,"nodeType":"Block","src":"5661:263:12","statements":[{"expression":{"arguments":[{"id":2454,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5682:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2453,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"5671:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"ExpressionStatement","src":"5671:21:12"},{"eventCall":{"arguments":[{"id":2460,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5731:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2457,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"5707:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2059_$","typeString":"type(contract IERC1967)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:12","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2058,"src":"5707:23:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2462,"nodeType":"EmitStatement","src":"5702:39:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5756:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:12","memberName":"length","nodeType":"MemberAccess","src":"5756:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2482,"nodeType":"Block","src":"5875:43:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2479,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5889:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"ExpressionStatement","src":"5889:18:12"}]},"id":2483,"nodeType":"IfStatement","src":"5752:166:12","trueBody":{"id":2478,"nodeType":"Block","src":"5773:96:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2471,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5824:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2470,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"5816:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2510_$","typeString":"type(contract IBeacon)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2510","typeString":"contract IBeacon"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"5816:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2475,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5853:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2467,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5787:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3105_$","typeString":"type(library Address)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3022,"src":"5787:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2477,"nodeType":"ExpressionStatement","src":"5787:71:12"}]}}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"5063:514:12","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:12","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:12","nodeType":"VariableDeclaration","scope":2485,"src":"5614:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"data","nameLocation":"5646:4:12","nodeType":"VariableDeclaration","scope":2485,"src":"5633:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:12"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"5661:0:12"},"scope":2500,"src":"5582:342:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"6149:86:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:12","memberName":"value","nodeType":"MemberAccess","src":"6163:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2497,"nodeType":"IfStatement","src":"6159:70:12","trueBody":{"id":2496,"nodeType":"Block","src":"6178:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2493,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"6199:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2495,"nodeType":"RevertStatement","src":"6192:26:12"}]}}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"5930:178:12","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:12","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[],"src":"6138:2:12"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"6149:0:12"},"scope":2500,"src":"6113:122:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2501,"src":"496:5741:12","usedErrors":[2226,2231,2236,2239],"usedEvents":[]}],"src":"114:6124:12"},"id":12},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2510]},"id":2511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2502,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"135:79:13","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2510,"linearizedBaseContracts":[2510],"name":"IBeacon","nameLocation":"225:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"239:168:13","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2509,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:13","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[],"src":"435:2:13"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"461:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:13"},"scope":2510,"src":"412:58:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2511,"src":"215:257:13","usedErrors":[],"usedEvents":[]}],"src":"108:365:13"},"id":13},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[2633],"IERC165":[4455]},"id":2634,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2512,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2634,"sourceUnit":4456,"src":"136:62:14","symbolAliases":[{"foreign":{"id":2513,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"144:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2516,"name":"IERC165","nameLocations":["359:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4455,"src":"359:7:14"},"id":2517,"nodeType":"InheritanceSpecifier","src":"359:7:14"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"200:136:14","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":2633,"linearizedBaseContracts":[2633,4455],"name":"IERC1155","nameLocation":"347:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"373:125:14","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":2530,"name":"TransferSingle","nameLocation":"509:14:14","nodeType":"EventDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:14","nodeType":"VariableDeclaration","scope":2530,"src":"524:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2522,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:14","nodeType":"VariableDeclaration","scope":2530,"src":"550:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:14","nodeType":"VariableDeclaration","scope":2530,"src":"572:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2526,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:14","nodeType":"VariableDeclaration","scope":2530,"src":"592:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:14","nodeType":"VariableDeclaration","scope":2530,"src":"604:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:14"},"src":"503:116:14"},{"anonymous":false,"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"625:144:14","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":2545,"name":"TransferBatch","nameLocation":"780:13:14","nodeType":"EventDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:14","nodeType":"VariableDeclaration","scope":2545,"src":"803:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2532,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2535,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:14","nodeType":"VariableDeclaration","scope":2545,"src":"837:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2537,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:14","nodeType":"VariableDeclaration","scope":2545,"src":"867:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2540,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:14","nodeType":"VariableDeclaration","scope":2545,"src":"895:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ArrayTypeName","src":"895:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2543,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:14","nodeType":"VariableDeclaration","scope":2545,"src":"918:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ArrayTypeName","src":"918:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:14"},"src":"774:167:14"},{"anonymous":false,"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"947:147:14","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2554,"name":"ApprovalForAll","nameLocation":"1105:14:14","nodeType":"EventDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:14","nodeType":"VariableDeclaration","scope":2554,"src":"1120:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2550,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:14","nodeType":"VariableDeclaration","scope":2554,"src":"1145:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2552,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:14","nodeType":"VariableDeclaration","scope":2554,"src":"1171:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2551,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:14"},"src":"1099:87:14"},{"anonymous":false,"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"1192:343:14","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":2561,"name":"URI","nameLocation":"1546:3:14","nodeType":"EventDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:14","nodeType":"VariableDeclaration","scope":2561,"src":"1550:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2556,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2559,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:14","nodeType":"VariableDeclaration","scope":2561,"src":"1564:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:14"},"src":"1540:44:14"},{"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"1590:90:14","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":2571,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:14","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"account","nameLocation":"1712:7:14","nodeType":"VariableDeclaration","scope":2571,"src":"1704:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"id","nameLocation":"1729:2:14","nodeType":"VariableDeclaration","scope":2571,"src":"1721:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:14"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"1756:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:14"},"scope":2633,"src":"1685:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"1771:188:14","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":2584,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:14","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:14","nodeType":"VariableDeclaration","scope":2584,"src":"1997:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2574,"nodeType":"ArrayTypeName","src":"1997:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"ids","nameLocation":"2053:3:14","nodeType":"VariableDeclaration","scope":2584,"src":"2034:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ArrayTypeName","src":"2034:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:14"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"2086:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2581,"nodeType":"ArrayTypeName","src":"2086:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:14"},"scope":2633,"src":"1964:140:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"2110:254:14","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":2592,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:14","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"operator","nameLocation":"2404:8:14","nodeType":"VariableDeclaration","scope":2592,"src":"2396:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"approved","nameLocation":"2419:8:14","nodeType":"VariableDeclaration","scope":2592,"src":"2414:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2588,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:14"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"2437:0:14"},"scope":2633,"src":"2369:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"2444:135:14","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":2602,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:14","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"account","nameLocation":"2618:7:14","nodeType":"VariableDeclaration","scope":2602,"src":"2610:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"operator","nameLocation":"2635:8:14","nodeType":"VariableDeclaration","scope":2602,"src":"2627:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:14"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"2668:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2599,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:14"},"scope":2633,"src":"2584:90:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"2680:927:14","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":2616,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:14","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"from","nameLocation":"3646:4:14","nodeType":"VariableDeclaration","scope":2616,"src":"3638:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"to","nameLocation":"3660:2:14","nodeType":"VariableDeclaration","scope":2616,"src":"3652:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"id","nameLocation":"3672:2:14","nodeType":"VariableDeclaration","scope":2616,"src":"3664:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"value","nameLocation":"3684:5:14","nodeType":"VariableDeclaration","scope":2616,"src":"3676:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"data","nameLocation":"3706:4:14","nodeType":"VariableDeclaration","scope":2616,"src":"3691:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:14"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[],"src":"3720:0:14"},"scope":2633,"src":"3612:109:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"3727:831:14","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":2632,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:14","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"from","nameLocation":"4611:4:14","nodeType":"VariableDeclaration","scope":2632,"src":"4603:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"to","nameLocation":"4633:2:14","nodeType":"VariableDeclaration","scope":2632,"src":"4625:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"ids","nameLocation":"4664:3:14","nodeType":"VariableDeclaration","scope":2632,"src":"4645:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ArrayTypeName","src":"4645:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"values","nameLocation":"4696:6:14","nodeType":"VariableDeclaration","scope":2632,"src":"4677:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"nodeType":"ArrayTypeName","src":"4677:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"data","nameLocation":"4727:4:14","nodeType":"VariableDeclaration","scope":2632,"src":"4712:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:14"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"4746:0:14"},"scope":2633,"src":"4563:184:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2634,"src":"337:4412:14","usedErrors":[],"usedEvents":[2530,2545,2554,2561]}],"src":"110:4640:14"},"id":14},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[2675],"IERC165":[4455]},"id":2676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2635,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2676,"sourceUnit":4456,"src":"144:62:15","symbolAliases":[{"foreign":{"id":2636,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"152:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2639,"name":"IERC165","nameLocations":["357:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4455,"src":"357:7:15"},"id":2640,"nodeType":"InheritanceSpecifier","src":"357:7:15"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"208:118:15","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":2675,"linearizedBaseContracts":[2675,4455],"name":"IERC1155Receiver","nameLocation":"337:16:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"371:827:15","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":2656,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:15","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"operator","nameLocation":"1247:8:15","nodeType":"VariableDeclaration","scope":2656,"src":"1239:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"from","nameLocation":"1273:4:15","nodeType":"VariableDeclaration","scope":2656,"src":"1265:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"id","nameLocation":"1295:2:15","nodeType":"VariableDeclaration","scope":2656,"src":"1287:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"value","nameLocation":"1315:5:15","nodeType":"VariableDeclaration","scope":2656,"src":"1307:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"data","nameLocation":"1345:4:15","nodeType":"VariableDeclaration","scope":2656,"src":"1330:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:15"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"1374:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2653,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:15"},"scope":2675,"src":"1203:179:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"1388:995:15","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":2674,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:15","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"operator","nameLocation":"2437:8:15","nodeType":"VariableDeclaration","scope":2674,"src":"2429:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"from","nameLocation":"2463:4:15","nodeType":"VariableDeclaration","scope":2674,"src":"2455:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"ids","nameLocation":"2496:3:15","nodeType":"VariableDeclaration","scope":2674,"src":"2477:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2663,"nodeType":"ArrayTypeName","src":"2477:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"values","nameLocation":"2528:6:15","nodeType":"VariableDeclaration","scope":2674,"src":"2509:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2666,"nodeType":"ArrayTypeName","src":"2509:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"data","nameLocation":"2559:4:15","nodeType":"VariableDeclaration","scope":2674,"src":"2544:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2668,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:15"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"2588:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2671,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:15"},"scope":2675,"src":"2388:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2676,"src":"327:2271:15","usedErrors":[],"usedEvents":[]}],"src":"118:2481:15"},"id":15},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[2633],"IERC1155MetadataURI":[2691]},"id":2692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2677,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":2679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2692,"sourceUnit":2634,"src":"158:41:16","symbolAliases":[{"foreign":{"id":2678,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"166:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2681,"name":"IERC1155","nameLocations":["399:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"399:8:16"},"id":2682,"nodeType":"InheritanceSpecifier","src":"399:8:16"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"201:164:16","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":2691,"linearizedBaseContracts":[2691,2633,4455],"name":"IERC1155MetadataURI","nameLocation":"376:19:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"414:192:16","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":2690,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:16","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"id","nameLocation":"632:2:16","nodeType":"VariableDeclaration","scope":2690,"src":"624:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:16"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"659:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:16"},"scope":2691,"src":"611:63:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2692,"src":"366:310:16","usedErrors":[],"usedEvents":[2530,2545,2554,2561]}],"src":"132:545:16"},"id":16},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[2845],"IERC1155Errors":[2206],"IERC1155Receiver":[2675]},"id":2846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2693,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":2695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2846,"sourceUnit":2676,"src":"146:57:17","symbolAliases":[{"foreign":{"id":2694,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"154:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2846,"sourceUnit":2207,"src":"204:70:17","symbolAliases":[{"foreign":{"id":2696,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"212:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"276:162:17","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":2845,"linearizedBaseContracts":[2845],"name":"ERC1155Utils","nameLocation":"447:12:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2769,"nodeType":"Block","src":"1191:776:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1205:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:17","memberName":"code","nodeType":"MemberAccess","src":"1205:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:17","memberName":"length","nodeType":"MemberAccess","src":"1205:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2768,"nodeType":"IfStatement","src":"1201:760:17","trueBody":{"id":2767,"nodeType":"Block","src":"1225:736:17","statements":[{"clauses":[{"block":{"id":2745,"nodeType":"Block","src":"1341:221:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2732,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"1363:8:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2733,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1375:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2675_$","typeString":"type(contract IERC1155Receiver)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:17","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"1375:34:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:17","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2744,"nodeType":"IfStatement","src":"1359:189:17","trueBody":{"id":2743,"nodeType":"Block","src":"1420:128:17","statements":[{"errorCall":{"arguments":[{"id":2740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1526:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2737,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"1488:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2206_$","typeString":"type(contract IERC1155Errors)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"1488:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2742,"nodeType":"RevertStatement","src":"1481:48:17"}]}}]},"errorName":"","id":2746,"nodeType":"TryCatchClause","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"response","nameLocation":"1331:8:17","nodeType":"VariableDeclaration","scope":2746,"src":"1324:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2729,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:17"},"src":"1315:247:17"},{"block":{"id":2764,"nodeType":"Block","src":"1591:360:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2750,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1613:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:17","memberName":"length","nodeType":"MemberAccess","src":"1613:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2762,"nodeType":"Block","src":"1784:153:17","statements":[{"AST":{"nativeSrc":"1831:88:17","nodeType":"YulBlock","src":"1831:88:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:17","nodeType":"YulIdentifier","src":"1868:6:17"},{"kind":"number","nativeSrc":"1876:4:17","nodeType":"YulLiteral","src":"1876:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:17","nodeType":"YulIdentifier","src":"1864:3:17"},"nativeSrc":"1864:17:17","nodeType":"YulFunctionCall","src":"1864:17:17"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:17","nodeType":"YulIdentifier","src":"1889:6:17"}],"functionName":{"name":"mload","nativeSrc":"1883:5:17","nodeType":"YulIdentifier","src":"1883:5:17"},"nativeSrc":"1883:13:17","nodeType":"YulFunctionCall","src":"1883:13:17"}],"functionName":{"name":"revert","nativeSrc":"1857:6:17","nodeType":"YulIdentifier","src":"1857:6:17"},"nativeSrc":"1857:40:17","nodeType":"YulFunctionCall","src":"1857:40:17"},"nativeSrc":"1857:40:17","nodeType":"YulExpressionStatement","src":"1857:40:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2748,"isOffset":false,"isSlot":false,"src":"1868:6:17","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"1889:6:17","valueSize":1}],"flags":["memory-safe"],"id":2761,"nodeType":"InlineAssembly","src":"1806:113:17"}]},"id":2763,"nodeType":"IfStatement","src":"1609:328:17","trueBody":{"id":2760,"nodeType":"Block","src":"1633:145:17","statements":[{"errorCall":{"arguments":[{"id":2757,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1756:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2754,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"1718:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2206_$","typeString":"type(contract IERC1155Errors)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"1718:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2759,"nodeType":"RevertStatement","src":"1711:48:17"}]}}]},"errorName":"","id":2765,"nodeType":"TryCatchClause","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"reason","nameLocation":"1583:6:17","nodeType":"VariableDeclaration","scope":2765,"src":"1570:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2747,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:17"},"src":"1563:388:17"}],"externalCall":{"arguments":[{"id":2723,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1282:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1292:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2725,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"1298:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"1302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2727,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"1309:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1260:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2719,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1243:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2675_$","typeString":"type(contract IERC1155Receiver)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2675","typeString":"contract IERC1155Receiver"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:17","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"1243:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2766,"nodeType":"TryStatement","src":"1239:712:17"}]}}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"466:535:17","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:17","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"operator","nameLocation":"1055:8:17","nodeType":"VariableDeclaration","scope":2770,"src":"1047:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"from","nameLocation":"1081:4:17","nodeType":"VariableDeclaration","scope":2770,"src":"1073:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"to","nameLocation":"1103:2:17","nodeType":"VariableDeclaration","scope":2770,"src":"1095:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"id","nameLocation":"1123:2:17","nodeType":"VariableDeclaration","scope":2770,"src":"1115:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"value","nameLocation":"1143:5:17","nodeType":"VariableDeclaration","scope":2770,"src":"1135:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"data","nameLocation":"1171:4:17","nodeType":"VariableDeclaration","scope":2770,"src":"1158:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:17"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"1191:0:17"},"scope":2845,"src":"1006:961:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"2733:818:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2747:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:17","memberName":"code","nodeType":"MemberAccess","src":"2747:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:17","memberName":"length","nodeType":"MemberAccess","src":"2747:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"2743:802:17","trueBody":{"id":2841,"nodeType":"Block","src":"2767:778:17","statements":[{"clauses":[{"block":{"id":2819,"nodeType":"Block","src":"2920:226:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"2942:8:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2807,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2954:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2675_$","typeString":"type(contract IERC1155Receiver)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:17","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"2954:39:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:17","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"2938:194:17","trueBody":{"id":2817,"nodeType":"Block","src":"3004:128:17","statements":[{"errorCall":{"arguments":[{"id":2814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"3110:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2811,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"3072:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2206_$","typeString":"type(contract IERC1155Errors)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"3072:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2816,"nodeType":"RevertStatement","src":"3065:48:17"}]}}]},"errorName":"","id":2820,"nodeType":"TryCatchClause","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"response","nameLocation":"2897:8:17","nodeType":"VariableDeclaration","scope":2820,"src":"2890:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2803,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:17"},"src":"2864:282:17"},{"block":{"id":2838,"nodeType":"Block","src":"3175:360:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2824,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"3197:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:17","memberName":"length","nodeType":"MemberAccess","src":"3197:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2836,"nodeType":"Block","src":"3368:153:17","statements":[{"AST":{"nativeSrc":"3415:88:17","nodeType":"YulBlock","src":"3415:88:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:17","nodeType":"YulIdentifier","src":"3452:6:17"},{"kind":"number","nativeSrc":"3460:4:17","nodeType":"YulLiteral","src":"3460:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:17","nodeType":"YulIdentifier","src":"3448:3:17"},"nativeSrc":"3448:17:17","nodeType":"YulFunctionCall","src":"3448:17:17"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:17","nodeType":"YulIdentifier","src":"3473:6:17"}],"functionName":{"name":"mload","nativeSrc":"3467:5:17","nodeType":"YulIdentifier","src":"3467:5:17"},"nativeSrc":"3467:13:17","nodeType":"YulFunctionCall","src":"3467:13:17"}],"functionName":{"name":"revert","nativeSrc":"3441:6:17","nodeType":"YulIdentifier","src":"3441:6:17"},"nativeSrc":"3441:40:17","nodeType":"YulFunctionCall","src":"3441:40:17"},"nativeSrc":"3441:40:17","nodeType":"YulExpressionStatement","src":"3441:40:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2822,"isOffset":false,"isSlot":false,"src":"3452:6:17","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"3473:6:17","valueSize":1}],"flags":["memory-safe"],"id":2835,"nodeType":"InlineAssembly","src":"3390:113:17"}]},"id":2837,"nodeType":"IfStatement","src":"3193:328:17","trueBody":{"id":2834,"nodeType":"Block","src":"3217:145:17","statements":[{"errorCall":{"arguments":[{"id":2831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"3340:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2828,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"3302:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2206_$","typeString":"type(contract IERC1155Errors)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:17","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"3302:37:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2833,"nodeType":"RevertStatement","src":"3295:48:17"}]}}]},"errorName":"","id":2839,"nodeType":"TryCatchClause","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"reason","nameLocation":"3167:6:17","nodeType":"VariableDeclaration","scope":2839,"src":"3154:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2821,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:17"},"src":"3147:388:17"}],"externalCall":{"arguments":[{"id":2797,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2829:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2798,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2839:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2799,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2845:3:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2800,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2850:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2801,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2858:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2802:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2793,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2785:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2675_$","typeString":"type(contract IERC1155Receiver)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$2675","typeString":"contract IERC1155Receiver"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:17","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"2785:43:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2840,"nodeType":"TryStatement","src":"2781:754:17"}]}}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"1973:545:17","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:17","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"operator","nameLocation":"2577:8:17","nodeType":"VariableDeclaration","scope":2844,"src":"2569:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"from","nameLocation":"2603:4:17","nodeType":"VariableDeclaration","scope":2844,"src":"2595:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"to","nameLocation":"2625:2:17","nodeType":"VariableDeclaration","scope":2844,"src":"2617:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"ids","nameLocation":"2654:3:17","nodeType":"VariableDeclaration","scope":2844,"src":"2637:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ArrayTypeName","src":"2637:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"values","nameLocation":"2684:6:17","nodeType":"VariableDeclaration","scope":2844,"src":"2667:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ArrayTypeName","src":"2667:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"data","nameLocation":"2713:4:17","nodeType":"VariableDeclaration","scope":2844,"src":"2700:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2784,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:17"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"2733:0:17"},"scope":2845,"src":"2523:1028:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2846,"src":"439:3114:17","usedErrors":[],"usedEvents":[]}],"src":"120:3434:17"},"id":17},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3105],"Errors":[4137]},"id":3106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2847,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":2849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3106,"sourceUnit":4138,"src":"127:36:18","symbolAliases":[{"foreign":{"id":2848,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"135:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"165:67:18","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3105,"linearizedBaseContracts":[3105],"name":"Address","nameLocation":"241:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"255:75:18","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2855,"name":"AddressEmptyCode","nameLocation":"341:16:18","nodeType":"ErrorDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"target","nameLocation":"366:6:18","nodeType":"VariableDeclaration","scope":2855,"src":"358:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:18"},"src":"335:39:18"},{"body":{"id":2902,"nodeType":"Block","src":"1361:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2865,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:18","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2868,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1399:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2882,"nodeType":"IfStatement","src":"1371:125:18","trueBody":{"id":2881,"nodeType":"Block","src":"1407:89:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2875,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:18","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2878,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1478:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2870,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"1428:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4137_$","typeString":"type(library Errors)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4125,"src":"1428:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2880,"nodeType":"RevertStatement","src":"1421:64:18"}]}},{"assignments":[2884,2886],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"success","nameLocation":"1512:7:18","nodeType":"VariableDeclaration","scope":2902,"src":"1507:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2883,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:18","nodeType":"VariableDeclaration","scope":2902,"src":"1521:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2885,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"hexValue":"","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2887,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1548:9:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:18","memberName":"call","nodeType":"MemberAccess","src":"1548:14:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2889,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1570:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:18"},{"condition":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:18","subExpression":{"id":2894,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"1596:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"1591:58:18","trueBody":{"id":2900,"nodeType":"Block","src":"1605:44:18","statements":[{"expression":{"arguments":[{"id":2897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1627:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2896,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"1619:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2899,"nodeType":"ExpressionStatement","src":"1619:19:18"}]}}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"380:905:18","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2903,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:18","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:18","nodeType":"VariableDeclaration","scope":2903,"src":"1309:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"amount","nameLocation":"1344:6:18","nodeType":"VariableDeclaration","scope":2903,"src":"1336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:18"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[],"src":"1361:0:18"},"scope":3105,"src":"1290:365:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"2589:62:18","statements":[{"expression":{"arguments":[{"id":2914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2628:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2636:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2913,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2606:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2912,"id":2918,"nodeType":"Return","src":"2599:45:18"}]},"documentation":{"id":2904,"nodeType":"StructuredDocumentation","src":"1661:834:18","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:18","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"target","nameLocation":"2530:6:18","nodeType":"VariableDeclaration","scope":2920,"src":"2522:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"data","nameLocation":"2551:4:18","nodeType":"VariableDeclaration","scope":2920,"src":"2538:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2907,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:18"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2920,"src":"2575:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:18"},"scope":3105,"src":"2500:151:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2969,"nodeType":"Block","src":"3088:294:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2934,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:18","typeDescriptions":{}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"nodeType":"IfStatement","src":"3098:123:18","trueBody":{"id":2950,"nodeType":"Block","src":"3133:88:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2944,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3105","typeString":"library Address"}],"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2942,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:18","typeDescriptions":{}}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:18","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3204:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2939,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3154:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4137_$","typeString":"type(library Errors)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4125,"src":"3154:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2949,"nodeType":"RevertStatement","src":"3147:63:18"}]}},{"assignments":[2953,2955],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"success","nameLocation":"3236:7:18","nodeType":"VariableDeclaration","scope":2969,"src":"3231:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2952,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:18","nodeType":"VariableDeclaration","scope":2969,"src":"3245:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2962,"initialValue":{"arguments":[{"id":2960,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3298:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3272:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:18","memberName":"call","nodeType":"MemberAccess","src":"3272:11:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3291:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:18"},{"expression":{"arguments":[{"id":2964,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3347:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2965,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"3355:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2966,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"3364:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2963,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3320:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2931,"id":2968,"nodeType":"Return","src":"3313:62:18"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"2657:313:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:18","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"target","nameLocation":"3014:6:18","nodeType":"VariableDeclaration","scope":2970,"src":"3006:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"data","nameLocation":"3035:4:18","nodeType":"VariableDeclaration","scope":2970,"src":"3022:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2924,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"value","nameLocation":"3049:5:18","nodeType":"VariableDeclaration","scope":2970,"src":"3041:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:18"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"3074:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2929,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:18"},"scope":3105,"src":"2975:407:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"3621:154:18","statements":[{"assignments":[2981,2983],"declarations":[{"constant":false,"id":2981,"mutability":"mutable","name":"success","nameLocation":"3637:7:18","nodeType":"VariableDeclaration","scope":2995,"src":"3632:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2980,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:18","nodeType":"VariableDeclaration","scope":2995,"src":"3646:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2982,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2988,"initialValue":{"arguments":[{"id":2986,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"3691:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"3673:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:18"},{"expression":{"arguments":[{"id":2990,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"3740:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"3748:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2992,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"3757:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2989,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3713:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2979,"id":2994,"nodeType":"Return","src":"3706:62:18"}]},"documentation":{"id":2971,"nodeType":"StructuredDocumentation","src":"3388:128:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:18","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"target","nameLocation":"3557:6:18","nodeType":"VariableDeclaration","scope":2996,"src":"3549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"data","nameLocation":"3578:4:18","nodeType":"VariableDeclaration","scope":2996,"src":"3565:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:18"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"3607:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2977,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:18"},"scope":3105,"src":"3521:254:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3021,"nodeType":"Block","src":"4013:156:18","statements":[{"assignments":[3007,3009],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"success","nameLocation":"4029:7:18","nodeType":"VariableDeclaration","scope":3021,"src":"4024:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3006,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:18","nodeType":"VariableDeclaration","scope":3021,"src":"4038:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3008,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3014,"initialValue":{"arguments":[{"id":3012,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"4085:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3010,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4065:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:18","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:18","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:18"},{"expression":{"arguments":[{"id":3016,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4134:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3017,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"4142:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3018,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"4151:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3015,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4107:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3005,"id":3020,"nodeType":"Return","src":"4100:62:18"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"3781:130:18","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3022,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:18","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"target","nameLocation":"3954:6:18","nodeType":"VariableDeclaration","scope":3022,"src":"3946:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"data","nameLocation":"3975:4:18","nodeType":"VariableDeclaration","scope":3022,"src":"3962:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:18"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3022,"src":"3999:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:18"},"scope":3105,"src":"3916:253:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3061,"nodeType":"Block","src":"4595:424:18","statements":[{"condition":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:18","subExpression":{"id":3034,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"4610:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3059,"nodeType":"Block","src":"4669:344:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3041,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4857:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:18","memberName":"length","nodeType":"MemberAccess","src":"4857:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"4883:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:18","memberName":"code","nodeType":"MemberAccess","src":"4883:11:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:18","memberName":"length","nodeType":"MemberAccess","src":"4883:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3056,"nodeType":"IfStatement","src":"4853:119:18","trueBody":{"id":3055,"nodeType":"Block","src":"4908:64:18","statements":[{"errorCall":{"arguments":[{"id":3052,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"4950:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3051,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"4933:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3054,"nodeType":"RevertStatement","src":"4926:31:18"}]}},{"expression":{"id":3057,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4992:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3033,"id":3058,"nodeType":"Return","src":"4985:17:18"}]},"id":3060,"nodeType":"IfStatement","src":"4605:408:18","trueBody":{"id":3040,"nodeType":"Block","src":"4619:44:18","statements":[{"expression":{"arguments":[{"id":3037,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4641:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3036,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"4633:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"ExpressionStatement","src":"4633:19:18"}]}}]},"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"4175:257:18","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:18","nodeType":"FunctionDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"target","nameLocation":"4490:6:18","nodeType":"VariableDeclaration","scope":3062,"src":"4482:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"success","nameLocation":"4511:7:18","nodeType":"VariableDeclaration","scope":3062,"src":"4506:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:18","nodeType":"VariableDeclaration","scope":3062,"src":"4528:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:18"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3062,"src":"4581:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3031,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:18"},"scope":3105,"src":"4437:582:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"5323:122:18","statements":[{"condition":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:18","subExpression":{"id":3072,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"5338:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3081,"nodeType":"Block","src":"5397:42:18","statements":[{"expression":{"id":3079,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"5418:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3071,"id":3080,"nodeType":"Return","src":"5411:17:18"}]},"id":3082,"nodeType":"IfStatement","src":"5333:106:18","trueBody":{"id":3078,"nodeType":"Block","src":"5347:44:18","statements":[{"expression":{"arguments":[{"id":3075,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"5369:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3074,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5361:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"ExpressionStatement","src":"5361:19:18"}]}}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"5025:191:18","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:18","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"success","nameLocation":"5252:7:18","nodeType":"VariableDeclaration","scope":3084,"src":"5247:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3064,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:18","nodeType":"VariableDeclaration","scope":3084,"src":"5261:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3066,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:18"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"5309:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3069,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:18"},"scope":3105,"src":"5221:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3103,"nodeType":"Block","src":"5614:379:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3090,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5690:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:18","memberName":"length","nodeType":"MemberAccess","src":"5690:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3101,"nodeType":"Block","src":"5936:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3096,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"5957:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4137_$","typeString":"type(library Errors)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:18","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":4128,"src":"5957:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3100,"nodeType":"RevertStatement","src":"5950:26:18"}]},"id":3102,"nodeType":"IfStatement","src":"5686:301:18","trueBody":{"id":3095,"nodeType":"Block","src":"5713:217:18","statements":[{"AST":{"nativeSrc":"5840:80:18","nodeType":"YulBlock","src":"5840:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:18","nodeType":"YulIdentifier","src":"5869:10:18"},{"kind":"number","nativeSrc":"5881:4:18","nodeType":"YulLiteral","src":"5881:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:18","nodeType":"YulIdentifier","src":"5865:3:18"},"nativeSrc":"5865:21:18","nodeType":"YulFunctionCall","src":"5865:21:18"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:18","nodeType":"YulIdentifier","src":"5894:10:18"}],"functionName":{"name":"mload","nativeSrc":"5888:5:18","nodeType":"YulIdentifier","src":"5888:5:18"},"nativeSrc":"5888:17:18","nodeType":"YulFunctionCall","src":"5888:17:18"}],"functionName":{"name":"revert","nativeSrc":"5858:6:18","nodeType":"YulIdentifier","src":"5858:6:18"},"nativeSrc":"5858:48:18","nodeType":"YulFunctionCall","src":"5858:48:18"},"nativeSrc":"5858:48:18","nodeType":"YulExpressionStatement","src":"5858:48:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3087,"isOffset":false,"isSlot":false,"src":"5869:10:18","valueSize":1},{"declaration":3087,"isOffset":false,"isSlot":false,"src":"5894:10:18","valueSize":1}],"flags":["memory-safe"],"id":3094,"nodeType":"InlineAssembly","src":"5815:105:18"}]}}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"5451:103:18","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:18","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:18","nodeType":"VariableDeclaration","scope":3104,"src":"5576:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3086,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:18"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"5614:0:18"},"scope":3105,"src":"5559:434:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3106,"src":"233:5762:18","usedErrors":[2855],"usedEvents":[]}],"src":"101:5895:18"},"id":18},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4083],"Comparators":[4115],"Math":[6076],"SlotDerivation":[4319],"StorageSlot":[4443]},"id":4084,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3107,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4084,"sourceUnit":4116,"src":"209:46:19","symbolAliases":[{"foreign":{"id":3108,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"217:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4084,"sourceUnit":4320,"src":"256:52:19","symbolAliases":[{"foreign":{"id":3110,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"264:14:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3113,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4084,"sourceUnit":4444,"src":"309:46:19","symbolAliases":[{"foreign":{"id":3112,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"317:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4084,"sourceUnit":6077,"src":"356:37:19","symbolAliases":[{"foreign":{"id":3114,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"364:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"395:63:19","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4083,"linearizedBaseContracts":[4083],"name":"Arrays","nameLocation":"467:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3119,"libraryName":{"id":3117,"name":"SlotDerivation","nameLocations":["486:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4319,"src":"486:14:19"},"nodeType":"UsingForDirective","src":"480:33:19","typeName":{"id":3118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3122,"libraryName":{"id":3120,"name":"StorageSlot","nameLocations":["524:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4443,"src":"524:11:19"},"nodeType":"UsingForDirective","src":"518:30:19","typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3154,"nodeType":"Block","src":"1628:83:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3144,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"1656:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3143,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"1649:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3147,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"1669:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3146,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1664:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3149,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"1677:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3142,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"1638:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"1638:44:19"},{"expression":{"id":3152,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"1699:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3141,"id":3153,"nodeType":"Return","src":"1692:12:19"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"554:915:19","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:19","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"array","nameLocation":"1514:5:19","nodeType":"VariableDeclaration","scope":3155,"src":"1497:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ArrayTypeName","src":"1497:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"comp","nameLocation":"1576:4:19","nodeType":"VariableDeclaration","scope":3155,"src":"1529:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3135,"nodeType":"FunctionTypeName","parameterTypes":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"1538:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"1547:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:19"},"returnParameterTypes":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"1570:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3132,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:19"},"src":"1529:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:19"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"1610:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ArrayTypeName","src":"1610:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:19"},"scope":4083,"src":"1474:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3173,"nodeType":"Block","src":"1894:66:19","statements":[{"expression":{"arguments":[{"id":3166,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"1909:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3167,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"1916:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4115_$","typeString":"type(library Comparators)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4100,"src":"1916:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3165,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3155,3174,3206,3227,3259,3280],"referencedDeclaration":3155,"src":"1904:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3170,"nodeType":"ExpressionStatement","src":"1904:27:19"},{"expression":{"id":3171,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"1948:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3164,"id":3172,"nodeType":"Return","src":"1941:12:19"}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"1717:93:19","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:19","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"array","nameLocation":"1846:5:19","nodeType":"VariableDeclaration","scope":3174,"src":"1829:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3158,"nodeType":"ArrayTypeName","src":"1829:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:19"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"1876:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3162,"nodeType":"ArrayTypeName","src":"1876:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:19"},"scope":4083,"src":"1815:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"3040:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3196,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3195,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3431,3443],"referencedDeclaration":3431,"src":"3055:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3199,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3102:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3198,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3469,3495],"referencedDeclaration":3469,"src":"3083:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3194,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3155,3174,3206,3227,3259,3280],"referencedDeclaration":3155,"src":"3050:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3202,"nodeType":"ExpressionStatement","src":"3050:58:19"},{"expression":{"id":3203,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3125:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3193,"id":3204,"nodeType":"Return","src":"3118:12:19"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"1966:915:19","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:19","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"array","nameLocation":"2926:5:19","nodeType":"VariableDeclaration","scope":3206,"src":"2909:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3177,"nodeType":"ArrayTypeName","src":"2909:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"comp","nameLocation":"2988:4:19","nodeType":"VariableDeclaration","scope":3206,"src":"2941:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3187,"nodeType":"FunctionTypeName","parameterTypes":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"2950:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3179,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"2959:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:19"},"returnParameterTypes":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"2982:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3184,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:19"},"src":"2941:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:19"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"3022:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3191,"nodeType":"ArrayTypeName","src":"3022:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:19"},"scope":4083,"src":"2886:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"3320:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3218,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3355:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3217,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3431,3443],"referencedDeclaration":3431,"src":"3335:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3220,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"3363:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4115_$","typeString":"type(library Comparators)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4100,"src":"3363:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3216,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3155,3174,3206,3227,3259,3280],"referencedDeclaration":3155,"src":"3330:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3223,"nodeType":"ExpressionStatement","src":"3330:48:19"},{"expression":{"id":3224,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3395:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3215,"id":3225,"nodeType":"Return","src":"3388:12:19"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"3143:93:19","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:19","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"array","nameLocation":"3272:5:19","nodeType":"VariableDeclaration","scope":3227,"src":"3255:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3209,"nodeType":"ArrayTypeName","src":"3255:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:19"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3227,"src":"3302:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3213,"nodeType":"ArrayTypeName","src":"3302:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:19"},"scope":4083,"src":"3241:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3258,"nodeType":"Block","src":"4487:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3249,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3248,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3431,3443],"referencedDeclaration":3443,"src":"4502:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3252,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"4549:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3251,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3469,3495],"referencedDeclaration":3495,"src":"4530:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3247,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3155,3174,3206,3227,3259,3280],"referencedDeclaration":3155,"src":"4497:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3255,"nodeType":"ExpressionStatement","src":"4497:58:19"},{"expression":{"id":3256,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4572:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3246,"id":3257,"nodeType":"Return","src":"4565:12:19"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"3413:915:19","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:19","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"array","nameLocation":"4373:5:19","nodeType":"VariableDeclaration","scope":3259,"src":"4356:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3230,"nodeType":"ArrayTypeName","src":"4356:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"comp","nameLocation":"4435:4:19","nodeType":"VariableDeclaration","scope":3259,"src":"4388:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3240,"nodeType":"FunctionTypeName","parameterTypes":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3240,"src":"4397:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3240,"src":"4406:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:19"},"returnParameterTypes":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3240,"src":"4429:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3237,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:19"},"src":"4388:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:19"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3259,"src":"4469:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3244,"nodeType":"ArrayTypeName","src":"4469:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:19"},"scope":4083,"src":"4333:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"4767:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3271,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4802:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3270,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3431,3443],"referencedDeclaration":3443,"src":"4782:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3273,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4810:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4115_$","typeString":"type(library Comparators)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4100,"src":"4810:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3269,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3155,3174,3206,3227,3259,3280],"referencedDeclaration":3155,"src":"4777:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3276,"nodeType":"ExpressionStatement","src":"4777:48:19"},{"expression":{"id":3277,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4842:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3268,"id":3278,"nodeType":"Return","src":"4835:12:19"}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"4590:93:19","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:19","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"array","nameLocation":"4719:5:19","nodeType":"VariableDeclaration","scope":3280,"src":"4702:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3262,"nodeType":"ArrayTypeName","src":"4702:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:19"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3280,"src":"4749:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3266,"nodeType":"ArrayTypeName","src":"4749:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:19"},"scope":4083,"src":"4688:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"5470:889:19","statements":[{"id":3366,"nodeType":"UncheckedBlock","src":"5480:873:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5508:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3299,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"nodeType":"IfStatement","src":"5504:31:19","trueBody":{"functionReturnParameters":3297,"id":3303,"nodeType":"Return","src":"5528:7:19"}},{"assignments":[3306],"declarations":[{"constant":false,"id":3306,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:19","nodeType":"VariableDeclaration","scope":3366,"src":"5591:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3310,"initialValue":{"arguments":[{"id":3308,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5614:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3307,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"5607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:19"},{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"pos","nameLocation":"5715:3:19","nodeType":"VariableDeclaration","scope":3366,"src":"5707:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3314,"initialValue":{"id":3313,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:19"},{"body":{"id":3345,"nodeType":"Block","src":"5795:331:19","statements":[{"condition":{"arguments":[{"arguments":[{"id":3330,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"5829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"5822:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3332,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5817:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"nodeType":"IfStatement","src":"5813:299:19","trueBody":{"id":3343,"nodeType":"Block","src":"5842:270:19","statements":[{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3334,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6046:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"6046:11:19"},{"expression":{"arguments":[{"id":3339,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6085:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3340,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6090:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3338,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"6079:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"ExpressionStatement","src":"6079:14:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"5773:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3322,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5778:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3346,"initializationExpression":{"assignments":[3316],"declarations":[{"constant":false,"id":3316,"mutability":"mutable","name":"it","nameLocation":"5754:2:19","nodeType":"VariableDeclaration","scope":3346,"src":"5746:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3320,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5759:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"5783:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"5783:10:19"},"nodeType":"ForStatement","src":"5741:385:19"},{"expression":{"arguments":[{"id":3348,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"6146:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3349,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6153:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3347,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"6140:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"ExpressionStatement","src":"6140:17:19"},{"expression":{"arguments":[{"id":3353,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"6207:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3354,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6214:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3355,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6219:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3352,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"6196:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3357,"nodeType":"ExpressionStatement","src":"6196:28:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6284:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3362,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"6296:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6301:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3358,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"6273:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"6273:33:19"}]}]},"documentation":{"id":3281,"nodeType":"StructuredDocumentation","src":"4860:491:19","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:19","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"begin","nameLocation":"5384:5:19","nodeType":"VariableDeclaration","scope":3368,"src":"5376:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"end","nameLocation":"5399:3:19","nodeType":"VariableDeclaration","scope":3368,"src":"5391:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"comp","nameLocation":"5451:4:19","nodeType":"VariableDeclaration","scope":3368,"src":"5404:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3294,"nodeType":"FunctionTypeName","parameterTypes":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"5413:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"5422:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:19"},"returnParameterTypes":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"5445:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3291,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:19"},"src":"5404:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:19"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[],"src":"5470:0:19"},"scope":4083,"src":"5356:1003:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3378,"nodeType":"Block","src":"6532:88:19","statements":[{"AST":{"nativeSrc":"6567:47:19","nodeType":"YulBlock","src":"6567:47:19","statements":[{"nativeSrc":"6581:23:19","nodeType":"YulAssignment","src":"6581:23:19","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:19","nodeType":"YulIdentifier","src":"6592:5:19"},{"kind":"number","nativeSrc":"6599:4:19","nodeType":"YulLiteral","src":"6599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:19","nodeType":"YulIdentifier","src":"6588:3:19"},"nativeSrc":"6588:16:19","nodeType":"YulFunctionCall","src":"6588:16:19"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:19","nodeType":"YulIdentifier","src":"6581:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3372,"isOffset":false,"isSlot":false,"src":"6592:5:19","valueSize":1},{"declaration":3375,"isOffset":false,"isSlot":false,"src":"6581:3:19","valueSize":1}],"flags":["memory-safe"],"id":3377,"nodeType":"InlineAssembly","src":"6542:72:19"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"6365:87:19","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3379,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:19","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"array","nameLocation":"6490:5:19","nodeType":"VariableDeclaration","scope":3379,"src":"6473:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3371,"nodeType":"ArrayTypeName","src":"6473:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:19"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:19","nodeType":"VariableDeclaration","scope":3379,"src":"6519:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:19"},"scope":4083,"src":"6457:163:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3398,"nodeType":"Block","src":"6892:93:19","statements":[{"id":3397,"nodeType":"UncheckedBlock","src":"6902:77:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3389,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6940:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3388,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6933:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3391,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6949:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:19","memberName":"length","nodeType":"MemberAccess","src":"6949:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3387,"id":3396,"nodeType":"Return","src":"6926:42:19"}]}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"6626:188:19","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:19","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"array","nameLocation":"6850:5:19","nodeType":"VariableDeclaration","scope":3399,"src":"6833:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3382,"nodeType":"ArrayTypeName","src":"6833:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:19"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:19","nodeType":"VariableDeclaration","scope":3399,"src":"6879:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:19"},"scope":4083,"src":"6819:166:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3408,"nodeType":"Block","src":"7136:68:19","statements":[{"AST":{"nativeSrc":"7155:43:19","nodeType":"YulBlock","src":"7155:43:19","statements":[{"nativeSrc":"7169:19:19","nodeType":"YulAssignment","src":"7169:19:19","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:19","nodeType":"YulIdentifier","src":"7184:3:19"}],"functionName":{"name":"mload","nativeSrc":"7178:5:19","nodeType":"YulIdentifier","src":"7178:5:19"},"nativeSrc":"7178:10:19","nodeType":"YulFunctionCall","src":"7178:10:19"},"variableNames":[{"name":"value","nativeSrc":"7169:5:19","nodeType":"YulIdentifier","src":"7169:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3402,"isOffset":false,"isSlot":false,"src":"7184:3:19","valueSize":1},{"declaration":3405,"isOffset":false,"isSlot":false,"src":"7169:5:19","valueSize":1}],"id":3407,"nodeType":"InlineAssembly","src":"7146:52:19"}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"6991:74:19","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:19","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:19","nodeType":"VariableDeclaration","scope":3409,"src":"7086:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:19"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"7129:5:19","nodeType":"VariableDeclaration","scope":3409,"src":"7121:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:19"},"scope":4083,"src":"7070:134:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3418,"nodeType":"Block","src":"7348:178:19","statements":[{"AST":{"nativeSrc":"7367:153:19","nodeType":"YulBlock","src":"7367:153:19","statements":[{"nativeSrc":"7381:25:19","nodeType":"YulVariableDeclaration","src":"7381:25:19","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:19","nodeType":"YulIdentifier","src":"7401:4:19"}],"functionName":{"name":"mload","nativeSrc":"7395:5:19","nodeType":"YulIdentifier","src":"7395:5:19"},"nativeSrc":"7395:11:19","nodeType":"YulFunctionCall","src":"7395:11:19"},"variables":[{"name":"value1","nativeSrc":"7385:6:19","nodeType":"YulTypedName","src":"7385:6:19","type":""}]},{"nativeSrc":"7419:25:19","nodeType":"YulVariableDeclaration","src":"7419:25:19","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:19","nodeType":"YulIdentifier","src":"7439:4:19"}],"functionName":{"name":"mload","nativeSrc":"7433:5:19","nodeType":"YulIdentifier","src":"7433:5:19"},"nativeSrc":"7433:11:19","nodeType":"YulFunctionCall","src":"7433:11:19"},"variables":[{"name":"value2","nativeSrc":"7423:6:19","nodeType":"YulTypedName","src":"7423:6:19","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:19","nodeType":"YulIdentifier","src":"7464:4:19"},{"name":"value2","nativeSrc":"7470:6:19","nodeType":"YulIdentifier","src":"7470:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:19","nodeType":"YulIdentifier","src":"7457:6:19"},"nativeSrc":"7457:20:19","nodeType":"YulFunctionCall","src":"7457:20:19"},"nativeSrc":"7457:20:19","nodeType":"YulExpressionStatement","src":"7457:20:19"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:19","nodeType":"YulIdentifier","src":"7497:4:19"},{"name":"value1","nativeSrc":"7503:6:19","nodeType":"YulIdentifier","src":"7503:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:19","nodeType":"YulIdentifier","src":"7490:6:19"},"nativeSrc":"7490:20:19","nodeType":"YulFunctionCall","src":"7490:20:19"},"nativeSrc":"7490:20:19","nodeType":"YulExpressionStatement","src":"7490:20:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3412,"isOffset":false,"isSlot":false,"src":"7401:4:19","valueSize":1},{"declaration":3412,"isOffset":false,"isSlot":false,"src":"7464:4:19","valueSize":1},{"declaration":3414,"isOffset":false,"isSlot":false,"src":"7439:4:19","valueSize":1},{"declaration":3414,"isOffset":false,"isSlot":false,"src":"7497:4:19","valueSize":1}],"id":3417,"nodeType":"InlineAssembly","src":"7358:162:19"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"7210:77:19","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:19","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:19","nodeType":"VariableDeclaration","scope":3419,"src":"7307:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:19","nodeType":"VariableDeclaration","scope":3419,"src":"7321:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:19"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"7348:0:19"},"scope":4083,"src":"7292:234:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3430,"nodeType":"Block","src":"7713:64:19","statements":[{"AST":{"nativeSrc":"7732:39:19","nodeType":"YulBlock","src":"7732:39:19","statements":[{"nativeSrc":"7746:15:19","nodeType":"YulAssignment","src":"7746:15:19","value":{"name":"input","nativeSrc":"7756:5:19","nodeType":"YulIdentifier","src":"7756:5:19"},"variableNames":[{"name":"output","nativeSrc":"7746:6:19","nodeType":"YulIdentifier","src":"7746:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3423,"isOffset":false,"isSlot":false,"src":"7756:5:19","valueSize":1},{"declaration":3427,"isOffset":false,"isSlot":false,"src":"7746:6:19","valueSize":1}],"id":3429,"nodeType":"InlineAssembly","src":"7723:48:19"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"7532:76:19","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:19","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"input","nameLocation":"7659:5:19","nodeType":"VariableDeclaration","scope":3431,"src":"7642:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3422,"nodeType":"ArrayTypeName","src":"7642:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:19"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"output","nameLocation":"7705:6:19","nodeType":"VariableDeclaration","scope":3431,"src":"7688:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ArrayTypeName","src":"7688:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:19"},"scope":4083,"src":"7613:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3442,"nodeType":"Block","src":"7964:64:19","statements":[{"AST":{"nativeSrc":"7983:39:19","nodeType":"YulBlock","src":"7983:39:19","statements":[{"nativeSrc":"7997:15:19","nodeType":"YulAssignment","src":"7997:15:19","value":{"name":"input","nativeSrc":"8007:5:19","nodeType":"YulIdentifier","src":"8007:5:19"},"variableNames":[{"name":"output","nativeSrc":"7997:6:19","nodeType":"YulIdentifier","src":"7997:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3435,"isOffset":false,"isSlot":false,"src":"8007:5:19","valueSize":1},{"declaration":3439,"isOffset":false,"isSlot":false,"src":"7997:6:19","valueSize":1}],"id":3441,"nodeType":"InlineAssembly","src":"7974:48:19"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"7783:76:19","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:19","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"input","nameLocation":"7910:5:19","nodeType":"VariableDeclaration","scope":3443,"src":"7893:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3434,"nodeType":"ArrayTypeName","src":"7893:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:19"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"output","nameLocation":"7956:6:19","nodeType":"VariableDeclaration","scope":3443,"src":"7939:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ArrayTypeName","src":"7939:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:19"},"scope":4083,"src":"7864:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3468,"nodeType":"Block","src":"8290:64:19","statements":[{"AST":{"nativeSrc":"8309:39:19","nodeType":"YulBlock","src":"8309:39:19","statements":[{"nativeSrc":"8323:15:19","nodeType":"YulAssignment","src":"8323:15:19","value":{"name":"input","nativeSrc":"8333:5:19","nodeType":"YulIdentifier","src":"8333:5:19"},"variableNames":[{"name":"output","nativeSrc":"8323:6:19","nodeType":"YulIdentifier","src":"8323:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3454,"isOffset":false,"isSlot":false,"src":"8333:5:19","valueSize":1},{"declaration":3465,"isOffset":false,"isSlot":false,"src":"8323:6:19","valueSize":1}],"id":3467,"nodeType":"InlineAssembly","src":"8300:48:19"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"8034:78:19","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:19","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"input","nameLocation":"8201:5:19","nodeType":"VariableDeclaration","scope":3469,"src":"8154:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3453,"nodeType":"FunctionTypeName","parameterTypes":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"8163:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"8172:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:19"},"returnParameterTypes":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"8195:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3450,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:19"},"src":"8154:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:19"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"output","nameLocation":"8282:6:19","nodeType":"VariableDeclaration","scope":3469,"src":"8235:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3464,"nodeType":"FunctionTypeName","parameterTypes":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"8244:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"8253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:19"},"returnParameterTypes":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"8276:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3461,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:19"},"src":"8235:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:19"},"scope":4083,"src":"8117:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3494,"nodeType":"Block","src":"8616:64:19","statements":[{"AST":{"nativeSrc":"8635:39:19","nodeType":"YulBlock","src":"8635:39:19","statements":[{"nativeSrc":"8649:15:19","nodeType":"YulAssignment","src":"8649:15:19","value":{"name":"input","nativeSrc":"8659:5:19","nodeType":"YulIdentifier","src":"8659:5:19"},"variableNames":[{"name":"output","nativeSrc":"8649:6:19","nodeType":"YulIdentifier","src":"8649:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3480,"isOffset":false,"isSlot":false,"src":"8659:5:19","valueSize":1},{"declaration":3491,"isOffset":false,"isSlot":false,"src":"8649:6:19","valueSize":1}],"id":3493,"nodeType":"InlineAssembly","src":"8626:48:19"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"8360:78:19","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:19","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"input","nameLocation":"8527:5:19","nodeType":"VariableDeclaration","scope":3495,"src":"8480:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3479,"nodeType":"FunctionTypeName","parameterTypes":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"8489:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"8498:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:19"},"returnParameterTypes":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"8521:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3476,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:19"},"src":"8480:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:19"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"output","nameLocation":"8608:6:19","nodeType":"VariableDeclaration","scope":3495,"src":"8561:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3490,"nodeType":"FunctionTypeName","parameterTypes":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"8570:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"8579:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:19"},"returnParameterTypes":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"8602:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3487,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:19"},"src":"8561:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:19"},"scope":4083,"src":"8443:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3577,"nodeType":"Block","src":"9405:834:19","statements":[{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"low","nameLocation":"9423:3:19","nodeType":"VariableDeclaration","scope":3577,"src":"9415:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3509,"initialValue":{"hexValue":"30","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:19"},{"assignments":[3511],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"high","nameLocation":"9448:4:19","nodeType":"VariableDeclaration","scope":3577,"src":"9440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"expression":{"id":3512,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"9455:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:19","memberName":"length","nodeType":"MemberAccess","src":"9455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9482:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3521,"nodeType":"IfStatement","src":"9478:48:19","trueBody":{"id":3520,"nodeType":"Block","src":"9493:33:19","statements":[{"expression":{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3505,"id":3519,"nodeType":"Return","src":"9507:8:19"}]}},{"body":{"id":3553,"nodeType":"Block","src":"9555:423:19","statements":[{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"mid","nameLocation":"9577:3:19","nodeType":"VariableDeclaration","scope":3553,"src":"9569:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3532,"initialValue":{"arguments":[{"id":3529,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"9596:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3530,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9601:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3527,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"9583:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"9583:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3534,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"9844:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3535,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"9851:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3858,3884,3910,3936,3962],"referencedDeclaration":3910,"src":"9831:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4334_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"9831:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3538,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"9864:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3551,"nodeType":"Block","src":"9922:46:19","statements":[{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"9940:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"9946:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"9940:13:19"}]},"id":3552,"nodeType":"IfStatement","src":"9827:141:19","trueBody":{"id":3544,"nodeType":"Block","src":"9873:43:19","statements":[{"expression":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3540,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9891:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3541,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"9898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ExpressionStatement","src":"9891:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"9543:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3523,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9549:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3554,"nodeType":"WhileStatement","src":"9536:442:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10095:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3559,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"10119:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10126:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3558,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3858,3884,3910,3936,3962],"referencedDeclaration":3910,"src":"10106:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4334_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"10106:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3565,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10144:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3575,"nodeType":"Block","src":"10198:35:19","statements":[{"expression":{"id":3573,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10219:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3505,"id":3574,"nodeType":"Return","src":"10212:10:19"}]},"id":3576,"nodeType":"IfStatement","src":"10091:142:19","trueBody":{"id":3572,"nodeType":"Block","src":"10153:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10174:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3505,"id":3571,"nodeType":"Return","src":"10167:14:19"}]}}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"8686:616:19","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3578,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:19","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"array","nameLocation":"9349:5:19","nodeType":"VariableDeclaration","scope":3578,"src":"9331:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3498,"nodeType":"ArrayTypeName","src":"9331:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"element","nameLocation":"9364:7:19","nodeType":"VariableDeclaration","scope":3578,"src":"9356:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:19"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3578,"src":"9396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:19"},"scope":4083,"src":"9307:932:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"10756:709:19","statements":[{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"low","nameLocation":"10774:3:19","nodeType":"VariableDeclaration","scope":3641,"src":"10766:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3592,"initialValue":{"hexValue":"30","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:19"},{"assignments":[3594],"declarations":[{"constant":false,"id":3594,"mutability":"mutable","name":"high","nameLocation":"10799:4:19","nodeType":"VariableDeclaration","scope":3641,"src":"10791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3597,"initialValue":{"expression":{"id":3595,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"10806:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:19","memberName":"length","nodeType":"MemberAccess","src":"10806:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"10833:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"IfStatement","src":"10829:48:19","trueBody":{"id":3603,"nodeType":"Block","src":"10844:33:19","statements":[{"expression":{"hexValue":"30","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3588,"id":3602,"nodeType":"Return","src":"10858:8:19"}]}},{"body":{"id":3637,"nodeType":"Block","src":"10906:532:19","statements":[{"assignments":[3609],"declarations":[{"constant":false,"id":3609,"mutability":"mutable","name":"mid","nameLocation":"10928:3:19","nodeType":"VariableDeclaration","scope":3637,"src":"10920:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3615,"initialValue":{"arguments":[{"id":3612,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10947:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3613,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"10952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3610,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"10934:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"10934:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3617,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11195:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3618,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"11202:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3858,3884,3910,3936,3962],"referencedDeclaration":3910,"src":"11182:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4334_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"11182:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3621,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"11215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3635,"nodeType":"Block","src":"11385:43:19","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"11403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3632,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"11410:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"11403:10:19"}]},"id":3636,"nodeType":"IfStatement","src":"11178:250:19","trueBody":{"id":3630,"nodeType":"Block","src":"11224:155:19","statements":[{"id":3629,"nodeType":"UncheckedBlock","src":"11301:64:19","statements":[{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"11333:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"11339:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3628,"nodeType":"ExpressionStatement","src":"11333:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10894:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3606,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"10900:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3638,"nodeType":"WhileStatement","src":"10887:551:19"},{"expression":{"id":3639,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"11455:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3588,"id":3640,"nodeType":"Return","src":"11448:10:19"}]},"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"10245:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:19","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"array","nameLocation":"10700:5:19","nodeType":"VariableDeclaration","scope":3642,"src":"10682:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ArrayTypeName","src":"10682:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"element","nameLocation":"10715:7:19","nodeType":"VariableDeclaration","scope":3642,"src":"10707:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:19"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"10747:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:19"},"scope":4083,"src":"10662:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"11982:709:19","statements":[{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"low","nameLocation":"12000:3:19","nodeType":"VariableDeclaration","scope":3705,"src":"11992:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3656,"initialValue":{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:19"},{"assignments":[3658],"declarations":[{"constant":false,"id":3658,"mutability":"mutable","name":"high","nameLocation":"12025:4:19","nodeType":"VariableDeclaration","scope":3705,"src":"12017:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"expression":{"id":3659,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"12032:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:19","memberName":"length","nodeType":"MemberAccess","src":"12032:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12059:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"12055:48:19","trueBody":{"id":3667,"nodeType":"Block","src":"12070:33:19","statements":[{"expression":{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3652,"id":3666,"nodeType":"Return","src":"12084:8:19"}]}},{"body":{"id":3701,"nodeType":"Block","src":"12132:532:19","statements":[{"assignments":[3673],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"mid","nameLocation":"12154:3:19","nodeType":"VariableDeclaration","scope":3701,"src":"12146:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3679,"initialValue":{"arguments":[{"id":3676,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"12173:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3677,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12178:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3674,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"12160:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"12160:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3681,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"12421:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3682,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12428:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3680,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3858,3884,3910,3936,3962],"referencedDeclaration":3910,"src":"12408:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4334_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4333,"src":"12408:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3685,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"12441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3699,"nodeType":"Block","src":"12499:155:19","statements":[{"id":3698,"nodeType":"UncheckedBlock","src":"12576:64:19","statements":[{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3692,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"12608:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12614:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"12608:13:19"}]}]},"id":3700,"nodeType":"IfStatement","src":"12404:250:19","trueBody":{"id":3691,"nodeType":"Block","src":"12450:43:19","statements":[{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12468:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3688,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"12475:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3690,"nodeType":"ExpressionStatement","src":"12468:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"12120:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3670,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"12126:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"WhileStatement","src":"12113:551:19"},{"expression":{"id":3703,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"12681:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3652,"id":3704,"nodeType":"Return","src":"12674:10:19"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"11471:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:19","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"array","nameLocation":"11926:5:19","nodeType":"VariableDeclaration","scope":3706,"src":"11908:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ArrayTypeName","src":"11908:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"element","nameLocation":"11941:7:19","nodeType":"VariableDeclaration","scope":3706,"src":"11933:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:19"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"11973:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:19"},"scope":4083,"src":"11888:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"12875:709:19","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"low","nameLocation":"12893:3:19","nodeType":"VariableDeclaration","scope":3768,"src":"12885:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3720,"initialValue":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:19"},{"assignments":[3722],"declarations":[{"constant":false,"id":3722,"mutability":"mutable","name":"high","nameLocation":"12918:4:19","nodeType":"VariableDeclaration","scope":3768,"src":"12910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3725,"initialValue":{"expression":{"id":3723,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"12925:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:19","memberName":"length","nodeType":"MemberAccess","src":"12925:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"12952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"IfStatement","src":"12948:48:19","trueBody":{"id":3731,"nodeType":"Block","src":"12963:33:19","statements":[{"expression":{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3716,"id":3730,"nodeType":"Return","src":"12977:8:19"}]}},{"body":{"id":3764,"nodeType":"Block","src":"13025:532:19","statements":[{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"mid","nameLocation":"13047:3:19","nodeType":"VariableDeclaration","scope":3764,"src":"13039:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3743,"initialValue":{"arguments":[{"id":3740,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"13066:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3741,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"13071:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3738,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"13053:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"13053:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3745,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"13320:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3746,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"13327:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3744,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3975,3988,4001,4014,4027],"referencedDeclaration":4001,"src":"13301:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3748,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"13334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3762,"nodeType":"Block","src":"13504:43:19","statements":[{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"13522:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3759,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"13529:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"13522:10:19"}]},"id":3763,"nodeType":"IfStatement","src":"13297:250:19","trueBody":{"id":3757,"nodeType":"Block","src":"13343:155:19","statements":[{"id":3756,"nodeType":"UncheckedBlock","src":"13420:64:19","statements":[{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"13452:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"13458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"13452:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"13013:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3734,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"13019:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"WhileStatement","src":"13006:551:19"},{"expression":{"id":3766,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"13574:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3767,"nodeType":"Return","src":"13567:10:19"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"12697:74:19","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:19","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"array","nameLocation":"12819:5:19","nodeType":"VariableDeclaration","scope":3769,"src":"12802:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ArrayTypeName","src":"12802:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"element","nameLocation":"12834:7:19","nodeType":"VariableDeclaration","scope":3769,"src":"12826:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:19"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"12866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:19"},"scope":4083,"src":"12776:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3831,"nodeType":"Block","src":"13768:709:19","statements":[{"assignments":[3781],"declarations":[{"constant":false,"id":3781,"mutability":"mutable","name":"low","nameLocation":"13786:3:19","nodeType":"VariableDeclaration","scope":3831,"src":"13778:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3783,"initialValue":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:19"},{"assignments":[3785],"declarations":[{"constant":false,"id":3785,"mutability":"mutable","name":"high","nameLocation":"13811:4:19","nodeType":"VariableDeclaration","scope":3831,"src":"13803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3788,"initialValue":{"expression":{"id":3786,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"13818:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:19","memberName":"length","nodeType":"MemberAccess","src":"13818:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"13845:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"13841:48:19","trueBody":{"id":3794,"nodeType":"Block","src":"13856:33:19","statements":[{"expression":{"hexValue":"30","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3779,"id":3793,"nodeType":"Return","src":"13870:8:19"}]}},{"body":{"id":3827,"nodeType":"Block","src":"13918:532:19","statements":[{"assignments":[3800],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"mid","nameLocation":"13940:3:19","nodeType":"VariableDeclaration","scope":3827,"src":"13932:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3806,"initialValue":{"arguments":[{"id":3803,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"13959:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3804,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"13964:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3801,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"13946:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4805,"src":"13946:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3808,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"14213:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3809,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"14220:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3807,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3975,3988,4001,4014,4027],"referencedDeclaration":4001,"src":"14194:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3811,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"14227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3825,"nodeType":"Block","src":"14285:155:19","statements":[{"id":3824,"nodeType":"UncheckedBlock","src":"14362:64:19","statements":[{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"14394:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"14400:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"14394:13:19"}]}]},"id":3826,"nodeType":"IfStatement","src":"14190:250:19","trueBody":{"id":3817,"nodeType":"Block","src":"14236:43:19","statements":[{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"14254:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3814,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"14261:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"14254:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"13906:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3797,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"13912:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3828,"nodeType":"WhileStatement","src":"13899:551:19"},{"expression":{"id":3829,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"14467:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3779,"id":3830,"nodeType":"Return","src":"14460:10:19"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"13590:74:19","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3832,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:19","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"array","nameLocation":"13712:5:19","nodeType":"VariableDeclaration","scope":3832,"src":"13695:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ArrayTypeName","src":"13695:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"element","nameLocation":"13727:7:19","nodeType":"VariableDeclaration","scope":3832,"src":"13719:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:19"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3832,"src":"13759:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:19"},"scope":4083,"src":"13669:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3857,"nodeType":"Block","src":"14793:167:19","statements":[{"assignments":[3845],"declarations":[{"constant":false,"id":3845,"mutability":"mutable","name":"slot","nameLocation":"14811:4:19","nodeType":"VariableDeclaration","scope":3857,"src":"14803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3846,"nodeType":"VariableDeclarationStatement","src":"14803:12:19"},{"AST":{"nativeSrc":"14850:40:19","nodeType":"YulBlock","src":"14850:40:19","statements":[{"nativeSrc":"14864:16:19","nodeType":"YulAssignment","src":"14864:16:19","value":{"name":"arr.slot","nativeSrc":"14872:8:19","nodeType":"YulIdentifier","src":"14872:8:19"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:19","nodeType":"YulIdentifier","src":"14864:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3836,"isOffset":false,"isSlot":true,"src":"14872:8:19","suffix":"slot","valueSize":1},{"declaration":3845,"isOffset":false,"isSlot":false,"src":"14864:4:19","valueSize":1}],"flags":["memory-safe"],"id":3847,"nodeType":"InlineAssembly","src":"14825:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3852,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"14932:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3848,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14906:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"14906:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"14906:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:19","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"14906:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4325_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3843,"id":3856,"nodeType":"Return","src":"14899:54:19"}]},"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"14483:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:19","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"arr","nameLocation":"14719:3:19","nodeType":"VariableDeclaration","scope":3858,"src":"14701:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3834,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3835,"nodeType":"ArrayTypeName","src":"14701:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"pos","nameLocation":"14732:3:19","nodeType":"VariableDeclaration","scope":3858,"src":"14724:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:19"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"14760:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3841,"nodeType":"UserDefinedTypeName","pathNode":{"id":3840,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:19","14772:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4325,"src":"14760:23:19"},"referencedDeclaration":4325,"src":"14760:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:19"},"scope":4083,"src":"14679:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"15276:167:19","statements":[{"assignments":[3871],"declarations":[{"constant":false,"id":3871,"mutability":"mutable","name":"slot","nameLocation":"15294:4:19","nodeType":"VariableDeclaration","scope":3883,"src":"15286:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3872,"nodeType":"VariableDeclarationStatement","src":"15286:12:19"},{"AST":{"nativeSrc":"15333:40:19","nodeType":"YulBlock","src":"15333:40:19","statements":[{"nativeSrc":"15347:16:19","nodeType":"YulAssignment","src":"15347:16:19","value":{"name":"arr.slot","nativeSrc":"15355:8:19","nodeType":"YulIdentifier","src":"15355:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:19","nodeType":"YulIdentifier","src":"15347:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3862,"isOffset":false,"isSlot":true,"src":"15355:8:19","suffix":"slot","valueSize":1},{"declaration":3871,"isOffset":false,"isSlot":false,"src":"15347:4:19","valueSize":1}],"flags":["memory-safe"],"id":3873,"nodeType":"InlineAssembly","src":"15308:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3878,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"15415:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3874,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15389:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"15389:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"15389:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:19","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"15389:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4331_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4331_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3869,"id":3882,"nodeType":"Return","src":"15382:54:19"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"14966:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:19","nodeType":"FunctionDefinition","parameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"arr","nameLocation":"15202:3:19","nodeType":"VariableDeclaration","scope":3884,"src":"15184:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3861,"nodeType":"ArrayTypeName","src":"15184:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"pos","nameLocation":"15215:3:19","nodeType":"VariableDeclaration","scope":3884,"src":"15207:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:19"},"returnParameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"15243:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4331_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3867,"nodeType":"UserDefinedTypeName","pathNode":{"id":3866,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:19","15255:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4331,"src":"15243:23:19"},"referencedDeclaration":4331,"src":"15243:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4331_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:19"},"scope":4083,"src":"15162:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3909,"nodeType":"Block","src":"15759:167:19","statements":[{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"slot","nameLocation":"15777:4:19","nodeType":"VariableDeclaration","scope":3909,"src":"15769:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3898,"nodeType":"VariableDeclarationStatement","src":"15769:12:19"},{"AST":{"nativeSrc":"15816:40:19","nodeType":"YulBlock","src":"15816:40:19","statements":[{"nativeSrc":"15830:16:19","nodeType":"YulAssignment","src":"15830:16:19","value":{"name":"arr.slot","nativeSrc":"15838:8:19","nodeType":"YulIdentifier","src":"15838:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:19","nodeType":"YulIdentifier","src":"15830:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3888,"isOffset":false,"isSlot":true,"src":"15838:8:19","suffix":"slot","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"15830:4:19","valueSize":1}],"flags":["memory-safe"],"id":3899,"nodeType":"InlineAssembly","src":"15791:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3904,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3900,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"15872:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"15872:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"15872:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:19","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4387,"src":"15872:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4334_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3895,"id":3908,"nodeType":"Return","src":"15865:54:19"}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"15449:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:19","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"arr","nameLocation":"15685:3:19","nodeType":"VariableDeclaration","scope":3910,"src":"15667:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3887,"nodeType":"ArrayTypeName","src":"15667:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"pos","nameLocation":"15698:3:19","nodeType":"VariableDeclaration","scope":3910,"src":"15690:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:19"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3910,"src":"15726:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3893,"nodeType":"UserDefinedTypeName","pathNode":{"id":3892,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:19","15738:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"15726:23:19"},"referencedDeclaration":4334,"src":"15726:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:19"},"scope":4083,"src":"15645:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3935,"nodeType":"Block","src":"16238:165:19","statements":[{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"slot","nameLocation":"16256:4:19","nodeType":"VariableDeclaration","scope":3935,"src":"16248:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3924,"nodeType":"VariableDeclarationStatement","src":"16248:12:19"},{"AST":{"nativeSrc":"16295:40:19","nodeType":"YulBlock","src":"16295:40:19","statements":[{"nativeSrc":"16309:16:19","nodeType":"YulAssignment","src":"16309:16:19","value":{"name":"arr.slot","nativeSrc":"16317:8:19","nodeType":"YulIdentifier","src":"16317:8:19"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:19","nodeType":"YulIdentifier","src":"16309:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3914,"isOffset":false,"isSlot":true,"src":"16317:8:19","suffix":"slot","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"16309:4:19","valueSize":1}],"flags":["memory-safe"],"id":3925,"nodeType":"InlineAssembly","src":"16270:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3930,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"16377:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3926,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"16351:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"16351:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"16351:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:19","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":4431,"src":"16351:43:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4343_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":3921,"id":3934,"nodeType":"Return","src":"16344:52:19"}]},"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"15932:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3936,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:19","nodeType":"FunctionDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"arr","nameLocation":"16166:3:19","nodeType":"VariableDeclaration","scope":3936,"src":"16150:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3912,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3913,"nodeType":"ArrayTypeName","src":"16150:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"pos","nameLocation":"16179:3:19","nodeType":"VariableDeclaration","scope":3936,"src":"16171:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:19"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3936,"src":"16207:29:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3919,"nodeType":"UserDefinedTypeName","pathNode":{"id":3918,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:19","16219:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4343,"src":"16207:21:19"},"referencedDeclaration":4343,"src":"16207:21:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:19"},"scope":4083,"src":"16128:275:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"16717:166:19","statements":[{"assignments":[3949],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"slot","nameLocation":"16735:4:19","nodeType":"VariableDeclaration","scope":3961,"src":"16727:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3950,"nodeType":"VariableDeclarationStatement","src":"16727:12:19"},{"AST":{"nativeSrc":"16774:40:19","nodeType":"YulBlock","src":"16774:40:19","statements":[{"nativeSrc":"16788:16:19","nodeType":"YulAssignment","src":"16788:16:19","value":{"name":"arr.slot","nativeSrc":"16796:8:19","nodeType":"YulIdentifier","src":"16796:8:19"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:19","nodeType":"YulIdentifier","src":"16788:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3940,"isOffset":false,"isSlot":true,"src":"16796:8:19","suffix":"slot","valueSize":1},{"declaration":3949,"isOffset":false,"isSlot":false,"src":"16788:4:19","valueSize":1}],"flags":["memory-safe"],"id":3951,"nodeType":"InlineAssembly","src":"16749:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3956,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"16856:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3952,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"16830:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"16830:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"16830:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4409,"src":"16830:44:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4340_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":3947,"id":3960,"nodeType":"Return","src":"16823:53:19"}]},"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"16409:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:19","nodeType":"FunctionDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"arr","nameLocation":"16644:3:19","nodeType":"VariableDeclaration","scope":3962,"src":"16627:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3938,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3939,"nodeType":"ArrayTypeName","src":"16627:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"pos","nameLocation":"16657:3:19","nodeType":"VariableDeclaration","scope":3962,"src":"16649:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:19"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"16685:30:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3945,"nodeType":"UserDefinedTypeName","pathNode":{"id":3944,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:19","16697:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4340,"src":"16685:22:19"},"referencedDeclaration":4340,"src":"16685:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:19"},"scope":4083,"src":"16605:278:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"17184:98:19","statements":[{"AST":{"nativeSrc":"17203:73:19","nodeType":"YulBlock","src":"17203:73:19","statements":[{"nativeSrc":"17217:49:19","nodeType":"YulAssignment","src":"17217:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:19","nodeType":"YulIdentifier","src":"17238:3:19"},{"kind":"number","nativeSrc":"17243:4:19","nodeType":"YulLiteral","src":"17243:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:19","nodeType":"YulIdentifier","src":"17234:3:19"},"nativeSrc":"17234:14:19","nodeType":"YulFunctionCall","src":"17234:14:19"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:19","nodeType":"YulIdentifier","src":"17254:3:19"},{"kind":"number","nativeSrc":"17259:4:19","nodeType":"YulLiteral","src":"17259:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:19","nodeType":"YulIdentifier","src":"17250:3:19"},"nativeSrc":"17250:14:19","nodeType":"YulFunctionCall","src":"17250:14:19"}],"functionName":{"name":"add","nativeSrc":"17230:3:19","nodeType":"YulIdentifier","src":"17230:3:19"},"nativeSrc":"17230:35:19","nodeType":"YulFunctionCall","src":"17230:35:19"}],"functionName":{"name":"mload","nativeSrc":"17224:5:19","nodeType":"YulIdentifier","src":"17224:5:19"},"nativeSrc":"17224:42:19","nodeType":"YulFunctionCall","src":"17224:42:19"},"variableNames":[{"name":"res","nativeSrc":"17217:3:19","nodeType":"YulIdentifier","src":"17217:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3966,"isOffset":false,"isSlot":false,"src":"17238:3:19","valueSize":1},{"declaration":3968,"isOffset":false,"isSlot":false,"src":"17254:3:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"17217:3:19","valueSize":1}],"id":3973,"nodeType":"InlineAssembly","src":"17194:82:19"}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"16889:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:19","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"arr","nameLocation":"17130:3:19","nodeType":"VariableDeclaration","scope":3975,"src":"17113:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3965,"nodeType":"ArrayTypeName","src":"17113:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"pos","nameLocation":"17143:3:19","nodeType":"VariableDeclaration","scope":3975,"src":"17135:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:19"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"res","nameLocation":"17179:3:19","nodeType":"VariableDeclaration","scope":3975,"src":"17171:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3970,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:19"},"scope":4083,"src":"17085:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3987,"nodeType":"Block","src":"17583:98:19","statements":[{"AST":{"nativeSrc":"17602:73:19","nodeType":"YulBlock","src":"17602:73:19","statements":[{"nativeSrc":"17616:49:19","nodeType":"YulAssignment","src":"17616:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:19","nodeType":"YulIdentifier","src":"17637:3:19"},{"kind":"number","nativeSrc":"17642:4:19","nodeType":"YulLiteral","src":"17642:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:19","nodeType":"YulIdentifier","src":"17633:3:19"},"nativeSrc":"17633:14:19","nodeType":"YulFunctionCall","src":"17633:14:19"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:19","nodeType":"YulIdentifier","src":"17653:3:19"},{"kind":"number","nativeSrc":"17658:4:19","nodeType":"YulLiteral","src":"17658:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:19","nodeType":"YulIdentifier","src":"17649:3:19"},"nativeSrc":"17649:14:19","nodeType":"YulFunctionCall","src":"17649:14:19"}],"functionName":{"name":"add","nativeSrc":"17629:3:19","nodeType":"YulIdentifier","src":"17629:3:19"},"nativeSrc":"17629:35:19","nodeType":"YulFunctionCall","src":"17629:35:19"}],"functionName":{"name":"mload","nativeSrc":"17623:5:19","nodeType":"YulIdentifier","src":"17623:5:19"},"nativeSrc":"17623:42:19","nodeType":"YulFunctionCall","src":"17623:42:19"},"variableNames":[{"name":"res","nativeSrc":"17616:3:19","nodeType":"YulIdentifier","src":"17616:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3979,"isOffset":false,"isSlot":false,"src":"17637:3:19","valueSize":1},{"declaration":3981,"isOffset":false,"isSlot":false,"src":"17653:3:19","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"17616:3:19","valueSize":1}],"id":3986,"nodeType":"InlineAssembly","src":"17593:82:19"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"17288:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:19","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"arr","nameLocation":"17529:3:19","nodeType":"VariableDeclaration","scope":3988,"src":"17512:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3978,"nodeType":"ArrayTypeName","src":"17512:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"pos","nameLocation":"17542:3:19","nodeType":"VariableDeclaration","scope":3988,"src":"17534:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:19"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"res","nameLocation":"17578:3:19","nodeType":"VariableDeclaration","scope":3988,"src":"17570:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:19"},"scope":4083,"src":"17484:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"17982:98:19","statements":[{"AST":{"nativeSrc":"18001:73:19","nodeType":"YulBlock","src":"18001:73:19","statements":[{"nativeSrc":"18015:49:19","nodeType":"YulAssignment","src":"18015:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:19","nodeType":"YulIdentifier","src":"18036:3:19"},{"kind":"number","nativeSrc":"18041:4:19","nodeType":"YulLiteral","src":"18041:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:19","nodeType":"YulIdentifier","src":"18032:3:19"},"nativeSrc":"18032:14:19","nodeType":"YulFunctionCall","src":"18032:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:19","nodeType":"YulIdentifier","src":"18052:3:19"},{"kind":"number","nativeSrc":"18057:4:19","nodeType":"YulLiteral","src":"18057:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:19","nodeType":"YulIdentifier","src":"18048:3:19"},"nativeSrc":"18048:14:19","nodeType":"YulFunctionCall","src":"18048:14:19"}],"functionName":{"name":"add","nativeSrc":"18028:3:19","nodeType":"YulIdentifier","src":"18028:3:19"},"nativeSrc":"18028:35:19","nodeType":"YulFunctionCall","src":"18028:35:19"}],"functionName":{"name":"mload","nativeSrc":"18022:5:19","nodeType":"YulIdentifier","src":"18022:5:19"},"nativeSrc":"18022:42:19","nodeType":"YulFunctionCall","src":"18022:42:19"},"variableNames":[{"name":"res","nativeSrc":"18015:3:19","nodeType":"YulIdentifier","src":"18015:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3992,"isOffset":false,"isSlot":false,"src":"18036:3:19","valueSize":1},{"declaration":3994,"isOffset":false,"isSlot":false,"src":"18052:3:19","valueSize":1},{"declaration":3997,"isOffset":false,"isSlot":false,"src":"18015:3:19","valueSize":1}],"id":3999,"nodeType":"InlineAssembly","src":"17992:82:19"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"17687:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:19","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"arr","nameLocation":"17928:3:19","nodeType":"VariableDeclaration","scope":4001,"src":"17911:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ArrayTypeName","src":"17911:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"pos","nameLocation":"17941:3:19","nodeType":"VariableDeclaration","scope":4001,"src":"17933:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:19"},"returnParameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"res","nameLocation":"17977:3:19","nodeType":"VariableDeclaration","scope":4001,"src":"17969:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:19"},"scope":4083,"src":"17883:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4013,"nodeType":"Block","src":"18384:98:19","statements":[{"AST":{"nativeSrc":"18403:73:19","nodeType":"YulBlock","src":"18403:73:19","statements":[{"nativeSrc":"18417:49:19","nodeType":"YulAssignment","src":"18417:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:19","nodeType":"YulIdentifier","src":"18438:3:19"},{"kind":"number","nativeSrc":"18443:4:19","nodeType":"YulLiteral","src":"18443:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:19","nodeType":"YulIdentifier","src":"18434:3:19"},"nativeSrc":"18434:14:19","nodeType":"YulFunctionCall","src":"18434:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:19","nodeType":"YulIdentifier","src":"18454:3:19"},{"kind":"number","nativeSrc":"18459:4:19","nodeType":"YulLiteral","src":"18459:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:19","nodeType":"YulIdentifier","src":"18450:3:19"},"nativeSrc":"18450:14:19","nodeType":"YulFunctionCall","src":"18450:14:19"}],"functionName":{"name":"add","nativeSrc":"18430:3:19","nodeType":"YulIdentifier","src":"18430:3:19"},"nativeSrc":"18430:35:19","nodeType":"YulFunctionCall","src":"18430:35:19"}],"functionName":{"name":"mload","nativeSrc":"18424:5:19","nodeType":"YulIdentifier","src":"18424:5:19"},"nativeSrc":"18424:42:19","nodeType":"YulFunctionCall","src":"18424:42:19"},"variableNames":[{"name":"res","nativeSrc":"18417:3:19","nodeType":"YulIdentifier","src":"18417:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4005,"isOffset":false,"isSlot":false,"src":"18438:3:19","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"18454:3:19","valueSize":1},{"declaration":4010,"isOffset":false,"isSlot":false,"src":"18417:3:19","valueSize":1}],"id":4012,"nodeType":"InlineAssembly","src":"18394:82:19"}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"18086:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4014,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:19","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"arr","nameLocation":"18325:3:19","nodeType":"VariableDeclaration","scope":4014,"src":"18310:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4003,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4004,"nodeType":"ArrayTypeName","src":"18310:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"pos","nameLocation":"18338:3:19","nodeType":"VariableDeclaration","scope":4014,"src":"18330:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:19"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"res","nameLocation":"18379:3:19","nodeType":"VariableDeclaration","scope":4014,"src":"18366:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4009,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:19"},"scope":4083,"src":"18282:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"18788:98:19","statements":[{"AST":{"nativeSrc":"18807:73:19","nodeType":"YulBlock","src":"18807:73:19","statements":[{"nativeSrc":"18821:49:19","nodeType":"YulAssignment","src":"18821:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:19","nodeType":"YulIdentifier","src":"18842:3:19"},{"kind":"number","nativeSrc":"18847:4:19","nodeType":"YulLiteral","src":"18847:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:19","nodeType":"YulIdentifier","src":"18838:3:19"},"nativeSrc":"18838:14:19","nodeType":"YulFunctionCall","src":"18838:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:19","nodeType":"YulIdentifier","src":"18858:3:19"},{"kind":"number","nativeSrc":"18863:4:19","nodeType":"YulLiteral","src":"18863:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:19","nodeType":"YulIdentifier","src":"18854:3:19"},"nativeSrc":"18854:14:19","nodeType":"YulFunctionCall","src":"18854:14:19"}],"functionName":{"name":"add","nativeSrc":"18834:3:19","nodeType":"YulIdentifier","src":"18834:3:19"},"nativeSrc":"18834:35:19","nodeType":"YulFunctionCall","src":"18834:35:19"}],"functionName":{"name":"mload","nativeSrc":"18828:5:19","nodeType":"YulIdentifier","src":"18828:5:19"},"nativeSrc":"18828:42:19","nodeType":"YulFunctionCall","src":"18828:42:19"},"variableNames":[{"name":"res","nativeSrc":"18821:3:19","nodeType":"YulIdentifier","src":"18821:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4018,"isOffset":false,"isSlot":false,"src":"18842:3:19","valueSize":1},{"declaration":4020,"isOffset":false,"isSlot":false,"src":"18858:3:19","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":false,"src":"18821:3:19","valueSize":1}],"id":4025,"nodeType":"InlineAssembly","src":"18798:82:19"}]},"documentation":{"id":4015,"nodeType":"StructuredDocumentation","src":"18488:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:19","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"arr","nameLocation":"18728:3:19","nodeType":"VariableDeclaration","scope":4027,"src":"18712:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4016,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4017,"nodeType":"ArrayTypeName","src":"18712:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4020,"mutability":"mutable","name":"pos","nameLocation":"18741:3:19","nodeType":"VariableDeclaration","scope":4027,"src":"18733:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:19"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"res","nameLocation":"18783:3:19","nodeType":"VariableDeclaration","scope":4027,"src":"18769:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4022,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:19"},"scope":4083,"src":"18684:202:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4037,"nodeType":"Block","src":"19202:88:19","statements":[{"AST":{"nativeSrc":"19237:47:19","nodeType":"YulBlock","src":"19237:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:19","nodeType":"YulIdentifier","src":"19258:10:19"},{"name":"len","nativeSrc":"19270:3:19","nodeType":"YulIdentifier","src":"19270:3:19"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:19","nodeType":"YulIdentifier","src":"19251:6:19"},"nativeSrc":"19251:23:19","nodeType":"YulFunctionCall","src":"19251:23:19"},"nativeSrc":"19251:23:19","nodeType":"YulExpressionStatement","src":"19251:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4031,"isOffset":false,"isSlot":true,"src":"19258:10:19","suffix":"slot","valueSize":1},{"declaration":4033,"isOffset":false,"isSlot":false,"src":"19270:3:19","valueSize":1}],"flags":["memory-safe"],"id":4036,"nodeType":"InlineAssembly","src":"19212:72:19"}]},"documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"18892:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4038,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:19","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"array","nameLocation":"19173:5:19","nodeType":"VariableDeclaration","scope":4038,"src":"19155:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4029,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4030,"nodeType":"ArrayTypeName","src":"19155:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"len","nameLocation":"19188:3:19","nodeType":"VariableDeclaration","scope":4038,"src":"19180:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:19"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[],"src":"19202:0:19"},"scope":4083,"src":"19130:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"19606:88:19","statements":[{"AST":{"nativeSrc":"19641:47:19","nodeType":"YulBlock","src":"19641:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:19","nodeType":"YulIdentifier","src":"19662:10:19"},{"name":"len","nativeSrc":"19674:3:19","nodeType":"YulIdentifier","src":"19674:3:19"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:19","nodeType":"YulIdentifier","src":"19655:6:19"},"nativeSrc":"19655:23:19","nodeType":"YulFunctionCall","src":"19655:23:19"},"nativeSrc":"19655:23:19","nodeType":"YulExpressionStatement","src":"19655:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4042,"isOffset":false,"isSlot":true,"src":"19662:10:19","suffix":"slot","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"19674:3:19","valueSize":1}],"flags":["memory-safe"],"id":4047,"nodeType":"InlineAssembly","src":"19616:72:19"}]},"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"19296:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:19","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"array","nameLocation":"19577:5:19","nodeType":"VariableDeclaration","scope":4049,"src":"19559:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4041,"nodeType":"ArrayTypeName","src":"19559:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"len","nameLocation":"19592:3:19","nodeType":"VariableDeclaration","scope":4049,"src":"19584:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:19"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[],"src":"19606:0:19"},"scope":4083,"src":"19534:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4059,"nodeType":"Block","src":"20010:88:19","statements":[{"AST":{"nativeSrc":"20045:47:19","nodeType":"YulBlock","src":"20045:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:19","nodeType":"YulIdentifier","src":"20066:10:19"},{"name":"len","nativeSrc":"20078:3:19","nodeType":"YulIdentifier","src":"20078:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:19","nodeType":"YulIdentifier","src":"20059:6:19"},"nativeSrc":"20059:23:19","nodeType":"YulFunctionCall","src":"20059:23:19"},"nativeSrc":"20059:23:19","nodeType":"YulExpressionStatement","src":"20059:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4053,"isOffset":false,"isSlot":true,"src":"20066:10:19","suffix":"slot","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"20078:3:19","valueSize":1}],"flags":["memory-safe"],"id":4058,"nodeType":"InlineAssembly","src":"20020:72:19"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"19700:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4060,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:19","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"array","nameLocation":"19981:5:19","nodeType":"VariableDeclaration","scope":4060,"src":"19963:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ArrayTypeName","src":"19963:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"len","nameLocation":"19996:3:19","nodeType":"VariableDeclaration","scope":4060,"src":"19988:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:19"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"20010:0:19"},"scope":4083,"src":"19938:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4070,"nodeType":"Block","src":"20412:88:19","statements":[{"AST":{"nativeSrc":"20447:47:19","nodeType":"YulBlock","src":"20447:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:19","nodeType":"YulIdentifier","src":"20468:10:19"},{"name":"len","nativeSrc":"20480:3:19","nodeType":"YulIdentifier","src":"20480:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:19","nodeType":"YulIdentifier","src":"20461:6:19"},"nativeSrc":"20461:23:19","nodeType":"YulFunctionCall","src":"20461:23:19"},"nativeSrc":"20461:23:19","nodeType":"YulExpressionStatement","src":"20461:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4064,"isOffset":false,"isSlot":true,"src":"20468:10:19","suffix":"slot","valueSize":1},{"declaration":4066,"isOffset":false,"isSlot":false,"src":"20480:3:19","valueSize":1}],"flags":["memory-safe"],"id":4069,"nodeType":"InlineAssembly","src":"20422:72:19"}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"20104:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4071,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:19","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"array","nameLocation":"20383:5:19","nodeType":"VariableDeclaration","scope":4071,"src":"20367:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4062,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4063,"nodeType":"ArrayTypeName","src":"20367:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"len","nameLocation":"20398:3:19","nodeType":"VariableDeclaration","scope":4071,"src":"20390:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:19"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[],"src":"20412:0:19"},"scope":4083,"src":"20342:158:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4081,"nodeType":"Block","src":"20815:88:19","statements":[{"AST":{"nativeSrc":"20850:47:19","nodeType":"YulBlock","src":"20850:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:19","nodeType":"YulIdentifier","src":"20871:10:19"},{"name":"len","nativeSrc":"20883:3:19","nodeType":"YulIdentifier","src":"20883:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:19","nodeType":"YulIdentifier","src":"20864:6:19"},"nativeSrc":"20864:23:19","nodeType":"YulFunctionCall","src":"20864:23:19"},"nativeSrc":"20864:23:19","nodeType":"YulExpressionStatement","src":"20864:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4075,"isOffset":false,"isSlot":true,"src":"20871:10:19","suffix":"slot","valueSize":1},{"declaration":4077,"isOffset":false,"isSlot":false,"src":"20883:3:19","valueSize":1}],"flags":["memory-safe"],"id":4080,"nodeType":"InlineAssembly","src":"20825:72:19"}]},"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"20506:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4082,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:19","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"array","nameLocation":"20786:5:19","nodeType":"VariableDeclaration","scope":4082,"src":"20769:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4073,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4074,"nodeType":"ArrayTypeName","src":"20769:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4077,"mutability":"mutable","name":"len","nameLocation":"20801:3:19","nodeType":"VariableDeclaration","scope":4082,"src":"20793:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:19"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[],"src":"20815:0:19"},"scope":4083,"src":"20744:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4084,"src":"459:20446:19","usedErrors":[],"usedEvents":[]}],"src":"183:20723:19"},"id":19},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4115]},"id":4116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4085,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"131:92:20","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4115,"linearizedBaseContracts":[4115],"name":"Comparators","nameLocation":"232:11:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4099,"nodeType":"Block","src":"313:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"334:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4094,"id":4098,"nodeType":"Return","src":"323:12:20"}]},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:20","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"a","nameLocation":"270:1:20","nodeType":"VariableDeclaration","scope":4100,"src":"262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"b","nameLocation":"281:1:20","nodeType":"VariableDeclaration","scope":4100,"src":"273:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:20"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"307:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4092,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:20"},"scope":4115,"src":"250:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"411:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"428:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4110,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"432:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4108,"id":4112,"nodeType":"Return","src":"421:12:20"}]},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:20","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"a","nameLocation":"368:1:20","nodeType":"VariableDeclaration","scope":4114,"src":"360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"b","nameLocation":"379:1:20","nodeType":"VariableDeclaration","scope":4114,"src":"371:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:20"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4114,"src":"405:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4106,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:20"},"scope":4115,"src":"348:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4116,"src":"224:218:20","usedErrors":[],"usedEvents":[]}],"src":"105:338:20"},"id":20},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[4137]},"id":4138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4117,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"126:284:21","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":4137,"linearizedBaseContracts":[4137],"name":"Errors","nameLocation":"419:6:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"432:94:21","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":4125,"name":"InsufficientBalance","nameLocation":"537:19:21","nodeType":"ErrorDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"balance","nameLocation":"565:7:21","nodeType":"VariableDeclaration","scope":4125,"src":"557:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4123,"mutability":"mutable","name":"needed","nameLocation":"582:6:21","nodeType":"VariableDeclaration","scope":4125,"src":"574:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:21"},"src":"531:59:21"},{"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"596:89:21","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":4128,"name":"FailedCall","nameLocation":"696:10:21","nodeType":"ErrorDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[],"src":"706:2:21"},"src":"690:19:21"},{"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"715:46:21","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":4131,"name":"FailedDeployment","nameLocation":"772:16:21","nodeType":"ErrorDefinition","parameters":{"id":4130,"nodeType":"ParameterList","parameters":[],"src":"788:2:21"},"src":"766:25:21"},{"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"797:58:21","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":4136,"name":"MissingPrecompile","nameLocation":"866:17:21","nodeType":"ErrorDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4136,"src":"884:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4133,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:21"},"src":"860:33:21"}],"scope":4138,"src":"411:484:21","usedErrors":[4125,4128,4131,4136],"usedEvents":[]}],"src":"100:796:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4189]},"id":4190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4139,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"125:489:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4189,"linearizedBaseContracts":[4189],"name":"Panic","nameLocation":"665:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"677:36:22","text":"@dev generic / unspecified error"},"id":4144,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:22","nodeType":"VariableDeclaration","scope":4189,"src":"718:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"764:37:22","text":"@dev used by the assert() builtin"},"id":4148,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:22","nodeType":"VariableDeclaration","scope":4189,"src":"806:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"851:41:22","text":"@dev arithmetic underflow or overflow"},"id":4152,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:22","nodeType":"VariableDeclaration","scope":4189,"src":"897:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"950:35:22","text":"@dev division or modulo by zero"},"id":4156,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:22","nodeType":"VariableDeclaration","scope":4189,"src":"990:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4157,"nodeType":"StructuredDocumentation","src":"1045:30:22","text":"@dev enum conversion error"},"id":4160,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:22","nodeType":"VariableDeclaration","scope":4189,"src":"1080:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"1140:36:22","text":"@dev invalid encoding in storage"},"id":4164,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:22","nodeType":"VariableDeclaration","scope":4189,"src":"1181:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"1242:24:22","text":"@dev empty array pop"},"id":4168,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:22","nodeType":"VariableDeclaration","scope":4189,"src":"1271:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"1325:35:22","text":"@dev array out of bounds access"},"id":4172,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:22","nodeType":"VariableDeclaration","scope":4189,"src":"1365:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"1423:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":4176,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:22","nodeType":"VariableDeclaration","scope":4189,"src":"1493:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"1546:42:22","text":"@dev calling invalid internal function"},"id":4180,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:22","nodeType":"VariableDeclaration","scope":4189,"src":"1593:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"1819:151:22","statements":[{"AST":{"nativeSrc":"1854:110:22","nodeType":"YulBlock","src":"1854:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:22","nodeType":"YulLiteral","src":"1875:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:22","nodeType":"YulLiteral","src":"1881:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:22","nodeType":"YulIdentifier","src":"1868:6:22"},"nativeSrc":"1868:24:22","nodeType":"YulFunctionCall","src":"1868:24:22"},"nativeSrc":"1868:24:22","nodeType":"YulExpressionStatement","src":"1868:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:22","nodeType":"YulLiteral","src":"1912:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:22","nodeType":"YulIdentifier","src":"1918:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:22","nodeType":"YulIdentifier","src":"1905:6:22"},"nativeSrc":"1905:18:22","nodeType":"YulFunctionCall","src":"1905:18:22"},"nativeSrc":"1905:18:22","nodeType":"YulExpressionStatement","src":"1905:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:22","nodeType":"YulLiteral","src":"1943:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:22","nodeType":"YulLiteral","src":"1949:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:22","nodeType":"YulIdentifier","src":"1936:6:22"},"nativeSrc":"1936:18:22","nodeType":"YulFunctionCall","src":"1936:18:22"},"nativeSrc":"1936:18:22","nodeType":"YulExpressionStatement","src":"1936:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4183,"isOffset":false,"isSlot":false,"src":"1918:4:22","valueSize":1}],"flags":["memory-safe"],"id":4186,"nodeType":"InlineAssembly","src":"1829:135:22"}]},"documentation":{"id":4181,"nodeType":"StructuredDocumentation","src":"1658:113:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:22","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"code","nameLocation":"1799:4:22","nodeType":"VariableDeclaration","scope":4188,"src":"1791:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:22"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[],"src":"1819:0:22"},"scope":4189,"src":"1776:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4190,"src":"657:1315:22","usedErrors":[],"usedEvents":[]}],"src":"99:1874:22"},"id":22},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4319]},"id":4320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4191,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"225:1373:23","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4319,"linearizedBaseContracts":[4319],"name":"SlotDerivation","nameLocation":"1607:14:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4201,"nodeType":"Block","src":"1790:194:23","statements":[{"AST":{"nativeSrc":"1825:153:23","nodeType":"YulBlock","src":"1825:153:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:23","nodeType":"YulLiteral","src":"1846:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:23","nodeType":"YulIdentifier","src":"1870:9:23"},{"kind":"number","nativeSrc":"1881:4:23","nodeType":"YulLiteral","src":"1881:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:23","nodeType":"YulIdentifier","src":"1866:3:23"},"nativeSrc":"1866:20:23","nodeType":"YulFunctionCall","src":"1866:20:23"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:23","nodeType":"YulIdentifier","src":"1894:9:23"}],"functionName":{"name":"mload","nativeSrc":"1888:5:23","nodeType":"YulIdentifier","src":"1888:5:23"},"nativeSrc":"1888:16:23","nodeType":"YulFunctionCall","src":"1888:16:23"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:23","nodeType":"YulIdentifier","src":"1856:9:23"},"nativeSrc":"1856:49:23","nodeType":"YulFunctionCall","src":"1856:49:23"},{"kind":"number","nativeSrc":"1907:1:23","nodeType":"YulLiteral","src":"1907:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:23","nodeType":"YulIdentifier","src":"1852:3:23"},"nativeSrc":"1852:57:23","nodeType":"YulFunctionCall","src":"1852:57:23"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:23","nodeType":"YulIdentifier","src":"1839:6:23"},"nativeSrc":"1839:71:23","nodeType":"YulFunctionCall","src":"1839:71:23"},"nativeSrc":"1839:71:23","nodeType":"YulExpressionStatement","src":"1839:71:23"},{"nativeSrc":"1923:45:23","nodeType":"YulAssignment","src":"1923:45:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:23","nodeType":"YulLiteral","src":"1945:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:23","nodeType":"YulLiteral","src":"1951:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:23","nodeType":"YulIdentifier","src":"1935:9:23"},"nativeSrc":"1935:21:23","nodeType":"YulFunctionCall","src":"1935:21:23"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:23","nodeType":"YulLiteral","src":"1962:4:23","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:23","nodeType":"YulIdentifier","src":"1958:3:23"},"nativeSrc":"1958:9:23","nodeType":"YulFunctionCall","src":"1958:9:23"}],"functionName":{"name":"and","nativeSrc":"1931:3:23","nodeType":"YulIdentifier","src":"1931:3:23"},"nativeSrc":"1931:37:23","nodeType":"YulFunctionCall","src":"1931:37:23"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:23","nodeType":"YulIdentifier","src":"1923:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4195,"isOffset":false,"isSlot":false,"src":"1870:9:23","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"1894:9:23","valueSize":1},{"declaration":4198,"isOffset":false,"isSlot":false,"src":"1923:4:23","valueSize":1}],"flags":["memory-safe"],"id":4200,"nodeType":"InlineAssembly","src":"1800:178:23"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"1628:74:23","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:23","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:23","nodeType":"VariableDeclaration","scope":4202,"src":"1728:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4194,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:23"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"slot","nameLocation":"1784:4:23","nodeType":"VariableDeclaration","scope":4202,"src":"1776:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:23"},"scope":4319,"src":"1707:277:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"2176:86:23","statements":[{"id":4222,"nodeType":"UncheckedBlock","src":"2186:70:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4216,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"2233:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:23","typeDescriptions":{}}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4218,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"2241:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:23","typeDescriptions":{}}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4211,"id":4221,"nodeType":"Return","src":"2210:35:23"}]}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"1990:99:23","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:23","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"slot","nameLocation":"2118:4:23","nodeType":"VariableDeclaration","scope":4224,"src":"2110:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"pos","nameLocation":"2132:3:23","nodeType":"VariableDeclaration","scope":4224,"src":"2124:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:23"},"returnParameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"result","nameLocation":"2168:6:23","nodeType":"VariableDeclaration","scope":4224,"src":"2160:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:23"},"scope":4319,"src":"2094:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4233,"nodeType":"Block","src":"2465:127:23","statements":[{"AST":{"nativeSrc":"2500:86:23","nodeType":"YulBlock","src":"2500:86:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:23","nodeType":"YulLiteral","src":"2521:4:23","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:23","nodeType":"YulIdentifier","src":"2527:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:23","nodeType":"YulIdentifier","src":"2514:6:23"},"nativeSrc":"2514:18:23","nodeType":"YulFunctionCall","src":"2514:18:23"},"nativeSrc":"2514:18:23","nodeType":"YulExpressionStatement","src":"2514:18:23"},{"nativeSrc":"2545:31:23","nodeType":"YulAssignment","src":"2545:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:23","nodeType":"YulLiteral","src":"2565:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:23","nodeType":"YulLiteral","src":"2571:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:23","nodeType":"YulIdentifier","src":"2555:9:23"},"nativeSrc":"2555:21:23","nodeType":"YulFunctionCall","src":"2555:21:23"},"variableNames":[{"name":"result","nativeSrc":"2545:6:23","nodeType":"YulIdentifier","src":"2545:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4230,"isOffset":false,"isSlot":false,"src":"2545:6:23","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"2527:4:23","valueSize":1}],"flags":["memory-safe"],"id":4232,"nodeType":"InlineAssembly","src":"2475:111:23"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"2268:118:23","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4234,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:23","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"slot","nameLocation":"2420:4:23","nodeType":"VariableDeclaration","scope":4234,"src":"2412:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:23"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"result","nameLocation":"2457:6:23","nodeType":"VariableDeclaration","scope":4234,"src":"2449:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:23"},"scope":4319,"src":"2391:201:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"2770:179:23","statements":[{"AST":{"nativeSrc":"2805:138:23","nodeType":"YulBlock","src":"2805:138:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:23","nodeType":"YulLiteral","src":"2826:4:23","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:23","nodeType":"YulIdentifier","src":"2836:3:23"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:23","nodeType":"YulLiteral","src":"2845:2:23","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:23","nodeType":"YulLiteral","src":"2853:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:23","nodeType":"YulIdentifier","src":"2849:3:23"},"nativeSrc":"2849:6:23","nodeType":"YulFunctionCall","src":"2849:6:23"}],"functionName":{"name":"shr","nativeSrc":"2841:3:23","nodeType":"YulIdentifier","src":"2841:3:23"},"nativeSrc":"2841:15:23","nodeType":"YulFunctionCall","src":"2841:15:23"}],"functionName":{"name":"and","nativeSrc":"2832:3:23","nodeType":"YulIdentifier","src":"2832:3:23"},"nativeSrc":"2832:25:23","nodeType":"YulFunctionCall","src":"2832:25:23"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:23","nodeType":"YulIdentifier","src":"2819:6:23"},"nativeSrc":"2819:39:23","nodeType":"YulFunctionCall","src":"2819:39:23"},"nativeSrc":"2819:39:23","nodeType":"YulExpressionStatement","src":"2819:39:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:23","nodeType":"YulLiteral","src":"2878:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:23","nodeType":"YulIdentifier","src":"2884:4:23"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:23","nodeType":"YulIdentifier","src":"2871:6:23"},"nativeSrc":"2871:18:23","nodeType":"YulFunctionCall","src":"2871:18:23"},"nativeSrc":"2871:18:23","nodeType":"YulExpressionStatement","src":"2871:18:23"},{"nativeSrc":"2902:31:23","nodeType":"YulAssignment","src":"2902:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:23","nodeType":"YulLiteral","src":"2922:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:23","nodeType":"YulLiteral","src":"2928:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:23","nodeType":"YulIdentifier","src":"2912:9:23"},"nativeSrc":"2912:21:23","nodeType":"YulFunctionCall","src":"2912:21:23"},"variableNames":[{"name":"result","nativeSrc":"2902:6:23","nodeType":"YulIdentifier","src":"2902:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4239,"isOffset":false,"isSlot":false,"src":"2836:3:23","valueSize":1},{"declaration":4242,"isOffset":false,"isSlot":false,"src":"2902:6:23","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"2884:4:23","valueSize":1}],"flags":["memory-safe"],"id":4244,"nodeType":"InlineAssembly","src":"2780:163:23"}]},"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"2598:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:23","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"slot","nameLocation":"2712:4:23","nodeType":"VariableDeclaration","scope":4246,"src":"2704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"key","nameLocation":"2726:3:23","nodeType":"VariableDeclaration","scope":4246,"src":"2718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4238,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:23"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"2762:6:23","nodeType":"VariableDeclaration","scope":4246,"src":"2754:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:23"},"scope":4319,"src":"2681:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4257,"nodeType":"Block","src":"3124:173:23","statements":[{"AST":{"nativeSrc":"3159:132:23","nodeType":"YulBlock","src":"3159:132:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:23","nodeType":"YulLiteral","src":"3180:4:23","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:23","nodeType":"YulIdentifier","src":"3200:3:23"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:23","nodeType":"YulIdentifier","src":"3193:6:23"},"nativeSrc":"3193:11:23","nodeType":"YulFunctionCall","src":"3193:11:23"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:23","nodeType":"YulIdentifier","src":"3186:6:23"},"nativeSrc":"3186:19:23","nodeType":"YulFunctionCall","src":"3186:19:23"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:23","nodeType":"YulIdentifier","src":"3173:6:23"},"nativeSrc":"3173:33:23","nodeType":"YulFunctionCall","src":"3173:33:23"},"nativeSrc":"3173:33:23","nodeType":"YulExpressionStatement","src":"3173:33:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:23","nodeType":"YulLiteral","src":"3226:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:23","nodeType":"YulIdentifier","src":"3232:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:23","nodeType":"YulIdentifier","src":"3219:6:23"},"nativeSrc":"3219:18:23","nodeType":"YulFunctionCall","src":"3219:18:23"},"nativeSrc":"3219:18:23","nodeType":"YulExpressionStatement","src":"3219:18:23"},{"nativeSrc":"3250:31:23","nodeType":"YulAssignment","src":"3250:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:23","nodeType":"YulLiteral","src":"3270:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:23","nodeType":"YulLiteral","src":"3276:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:23","nodeType":"YulIdentifier","src":"3260:9:23"},"nativeSrc":"3260:21:23","nodeType":"YulFunctionCall","src":"3260:21:23"},"variableNames":[{"name":"result","nativeSrc":"3250:6:23","nodeType":"YulIdentifier","src":"3250:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4251,"isOffset":false,"isSlot":false,"src":"3200:3:23","valueSize":1},{"declaration":4254,"isOffset":false,"isSlot":false,"src":"3250:6:23","valueSize":1},{"declaration":4249,"isOffset":false,"isSlot":false,"src":"3232:4:23","valueSize":1}],"flags":["memory-safe"],"id":4256,"nodeType":"InlineAssembly","src":"3134:157:23"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"2955:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:23","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"slot","nameLocation":"3069:4:23","nodeType":"VariableDeclaration","scope":4258,"src":"3061:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"key","nameLocation":"3080:3:23","nodeType":"VariableDeclaration","scope":4258,"src":"3075:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4250,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:23"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"result","nameLocation":"3116:6:23","nodeType":"VariableDeclaration","scope":4258,"src":"3108:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:23"},"scope":4319,"src":"3038:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4269,"nodeType":"Block","src":"3475:157:23","statements":[{"AST":{"nativeSrc":"3510:116:23","nodeType":"YulBlock","src":"3510:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:23","nodeType":"YulLiteral","src":"3531:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:23","nodeType":"YulIdentifier","src":"3537:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:23","nodeType":"YulIdentifier","src":"3524:6:23"},"nativeSrc":"3524:17:23","nodeType":"YulFunctionCall","src":"3524:17:23"},"nativeSrc":"3524:17:23","nodeType":"YulExpressionStatement","src":"3524:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:23","nodeType":"YulLiteral","src":"3561:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:23","nodeType":"YulIdentifier","src":"3567:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:23","nodeType":"YulIdentifier","src":"3554:6:23"},"nativeSrc":"3554:18:23","nodeType":"YulFunctionCall","src":"3554:18:23"},"nativeSrc":"3554:18:23","nodeType":"YulExpressionStatement","src":"3554:18:23"},{"nativeSrc":"3585:31:23","nodeType":"YulAssignment","src":"3585:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:23","nodeType":"YulLiteral","src":"3605:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:23","nodeType":"YulLiteral","src":"3611:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:23","nodeType":"YulIdentifier","src":"3595:9:23"},"nativeSrc":"3595:21:23","nodeType":"YulFunctionCall","src":"3595:21:23"},"variableNames":[{"name":"result","nativeSrc":"3585:6:23","nodeType":"YulIdentifier","src":"3585:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4263,"isOffset":false,"isSlot":false,"src":"3537:3:23","valueSize":1},{"declaration":4266,"isOffset":false,"isSlot":false,"src":"3585:6:23","valueSize":1},{"declaration":4261,"isOffset":false,"isSlot":false,"src":"3567:4:23","valueSize":1}],"flags":["memory-safe"],"id":4268,"nodeType":"InlineAssembly","src":"3485:141:23"}]},"documentation":{"id":4259,"nodeType":"StructuredDocumentation","src":"3303:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:23","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"slot","nameLocation":"3417:4:23","nodeType":"VariableDeclaration","scope":4270,"src":"3409:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"key","nameLocation":"3431:3:23","nodeType":"VariableDeclaration","scope":4270,"src":"3423:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:23"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"result","nameLocation":"3467:6:23","nodeType":"VariableDeclaration","scope":4270,"src":"3459:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:23"},"scope":4319,"src":"3386:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4281,"nodeType":"Block","src":"3810:157:23","statements":[{"AST":{"nativeSrc":"3845:116:23","nodeType":"YulBlock","src":"3845:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:23","nodeType":"YulLiteral","src":"3866:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:23","nodeType":"YulIdentifier","src":"3872:3:23"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:23","nodeType":"YulIdentifier","src":"3859:6:23"},"nativeSrc":"3859:17:23","nodeType":"YulFunctionCall","src":"3859:17:23"},"nativeSrc":"3859:17:23","nodeType":"YulExpressionStatement","src":"3859:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:23","nodeType":"YulLiteral","src":"3896:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:23","nodeType":"YulIdentifier","src":"3902:4:23"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:23","nodeType":"YulIdentifier","src":"3889:6:23"},"nativeSrc":"3889:18:23","nodeType":"YulFunctionCall","src":"3889:18:23"},"nativeSrc":"3889:18:23","nodeType":"YulExpressionStatement","src":"3889:18:23"},{"nativeSrc":"3920:31:23","nodeType":"YulAssignment","src":"3920:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:23","nodeType":"YulLiteral","src":"3940:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:23","nodeType":"YulLiteral","src":"3946:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:23","nodeType":"YulIdentifier","src":"3930:9:23"},"nativeSrc":"3930:21:23","nodeType":"YulFunctionCall","src":"3930:21:23"},"variableNames":[{"name":"result","nativeSrc":"3920:6:23","nodeType":"YulIdentifier","src":"3920:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4275,"isOffset":false,"isSlot":false,"src":"3872:3:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3920:6:23","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"3902:4:23","valueSize":1}],"flags":["memory-safe"],"id":4280,"nodeType":"InlineAssembly","src":"3820:141:23"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"3638:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:23","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"slot","nameLocation":"3752:4:23","nodeType":"VariableDeclaration","scope":4282,"src":"3744:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"key","nameLocation":"3766:3:23","nodeType":"VariableDeclaration","scope":4282,"src":"3758:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:23"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"result","nameLocation":"3802:6:23","nodeType":"VariableDeclaration","scope":4282,"src":"3794:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:23"},"scope":4319,"src":"3721:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4293,"nodeType":"Block","src":"4144:157:23","statements":[{"AST":{"nativeSrc":"4179:116:23","nodeType":"YulBlock","src":"4179:116:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:23","nodeType":"YulLiteral","src":"4200:4:23","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:23","nodeType":"YulIdentifier","src":"4206:3:23"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:23","nodeType":"YulIdentifier","src":"4193:6:23"},"nativeSrc":"4193:17:23","nodeType":"YulFunctionCall","src":"4193:17:23"},"nativeSrc":"4193:17:23","nodeType":"YulExpressionStatement","src":"4193:17:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:23","nodeType":"YulLiteral","src":"4230:4:23","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:23","nodeType":"YulIdentifier","src":"4236:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:23","nodeType":"YulIdentifier","src":"4223:6:23"},"nativeSrc":"4223:18:23","nodeType":"YulFunctionCall","src":"4223:18:23"},"nativeSrc":"4223:18:23","nodeType":"YulExpressionStatement","src":"4223:18:23"},{"nativeSrc":"4254:31:23","nodeType":"YulAssignment","src":"4254:31:23","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:23","nodeType":"YulLiteral","src":"4274:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:23","nodeType":"YulLiteral","src":"4280:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:23","nodeType":"YulIdentifier","src":"4264:9:23"},"nativeSrc":"4264:21:23","nodeType":"YulFunctionCall","src":"4264:21:23"},"variableNames":[{"name":"result","nativeSrc":"4254:6:23","nodeType":"YulIdentifier","src":"4254:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4287,"isOffset":false,"isSlot":false,"src":"4206:3:23","valueSize":1},{"declaration":4290,"isOffset":false,"isSlot":false,"src":"4254:6:23","valueSize":1},{"declaration":4285,"isOffset":false,"isSlot":false,"src":"4236:4:23","valueSize":1}],"flags":["memory-safe"],"id":4292,"nodeType":"InlineAssembly","src":"4154:141:23"}]},"documentation":{"id":4283,"nodeType":"StructuredDocumentation","src":"3973:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:23","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"slot","nameLocation":"4087:4:23","nodeType":"VariableDeclaration","scope":4294,"src":"4079:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"key","nameLocation":"4100:3:23","nodeType":"VariableDeclaration","scope":4294,"src":"4093:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4286,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:23"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"result","nameLocation":"4136:6:23","nodeType":"VariableDeclaration","scope":4294,"src":"4128:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:23"},"scope":4319,"src":"4056:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"4485:326:23","statements":[{"AST":{"nativeSrc":"4520:285:23","nodeType":"YulBlock","src":"4520:285:23","statements":[{"nativeSrc":"4534:24:23","nodeType":"YulVariableDeclaration","src":"4534:24:23","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:23","nodeType":"YulIdentifier","src":"4554:3:23"}],"functionName":{"name":"mload","nativeSrc":"4548:5:23","nodeType":"YulIdentifier","src":"4548:5:23"},"nativeSrc":"4548:10:23","nodeType":"YulFunctionCall","src":"4548:10:23"},"variables":[{"name":"length","nativeSrc":"4538:6:23","nodeType":"YulTypedName","src":"4538:6:23","type":""}]},{"nativeSrc":"4571:27:23","nodeType":"YulVariableDeclaration","src":"4571:27:23","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:23","nodeType":"YulIdentifier","src":"4588:3:23"},{"kind":"number","nativeSrc":"4593:4:23","nodeType":"YulLiteral","src":"4593:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:23","nodeType":"YulIdentifier","src":"4584:3:23"},"nativeSrc":"4584:14:23","nodeType":"YulFunctionCall","src":"4584:14:23"},"variables":[{"name":"begin","nativeSrc":"4575:5:23","nodeType":"YulTypedName","src":"4575:5:23","type":""}]},{"nativeSrc":"4611:29:23","nodeType":"YulVariableDeclaration","src":"4611:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:23","nodeType":"YulIdentifier","src":"4626:5:23"},{"name":"length","nativeSrc":"4633:6:23","nodeType":"YulIdentifier","src":"4633:6:23"}],"functionName":{"name":"add","nativeSrc":"4622:3:23","nodeType":"YulIdentifier","src":"4622:3:23"},"nativeSrc":"4622:18:23","nodeType":"YulFunctionCall","src":"4622:18:23"},"variables":[{"name":"end","nativeSrc":"4615:3:23","nodeType":"YulTypedName","src":"4615:3:23","type":""}]},{"nativeSrc":"4653:23:23","nodeType":"YulVariableDeclaration","src":"4653:23:23","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:23","nodeType":"YulIdentifier","src":"4672:3:23"}],"functionName":{"name":"mload","nativeSrc":"4666:5:23","nodeType":"YulIdentifier","src":"4666:5:23"},"nativeSrc":"4666:10:23","nodeType":"YulFunctionCall","src":"4666:10:23"},"variables":[{"name":"cache","nativeSrc":"4657:5:23","nodeType":"YulTypedName","src":"4657:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:23","nodeType":"YulIdentifier","src":"4696:3:23"},{"name":"slot","nativeSrc":"4701:4:23","nodeType":"YulIdentifier","src":"4701:4:23"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:23","nodeType":"YulIdentifier","src":"4689:6:23"},"nativeSrc":"4689:17:23","nodeType":"YulFunctionCall","src":"4689:17:23"},"nativeSrc":"4689:17:23","nodeType":"YulExpressionStatement","src":"4689:17:23"},{"nativeSrc":"4719:45:23","nodeType":"YulAssignment","src":"4719:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:23","nodeType":"YulIdentifier","src":"4739:5:23"},{"arguments":[{"name":"length","nativeSrc":"4750:6:23","nodeType":"YulIdentifier","src":"4750:6:23"},{"kind":"number","nativeSrc":"4758:4:23","nodeType":"YulLiteral","src":"4758:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:23","nodeType":"YulIdentifier","src":"4746:3:23"},"nativeSrc":"4746:17:23","nodeType":"YulFunctionCall","src":"4746:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:23","nodeType":"YulIdentifier","src":"4729:9:23"},"nativeSrc":"4729:35:23","nodeType":"YulFunctionCall","src":"4729:35:23"},"variableNames":[{"name":"result","nativeSrc":"4719:6:23","nodeType":"YulIdentifier","src":"4719:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:23","nodeType":"YulIdentifier","src":"4784:3:23"},{"name":"cache","nativeSrc":"4789:5:23","nodeType":"YulIdentifier","src":"4789:5:23"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:23","nodeType":"YulIdentifier","src":"4777:6:23"},"nativeSrc":"4777:18:23","nodeType":"YulFunctionCall","src":"4777:18:23"},"nativeSrc":"4777:18:23","nodeType":"YulExpressionStatement","src":"4777:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4299,"isOffset":false,"isSlot":false,"src":"4554:3:23","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"4588:3:23","valueSize":1},{"declaration":4302,"isOffset":false,"isSlot":false,"src":"4719:6:23","valueSize":1},{"declaration":4297,"isOffset":false,"isSlot":false,"src":"4701:4:23","valueSize":1}],"flags":["memory-safe"],"id":4304,"nodeType":"InlineAssembly","src":"4495:310:23"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"4307:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:23","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"slot","nameLocation":"4421:4:23","nodeType":"VariableDeclaration","scope":4306,"src":"4413:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"key","nameLocation":"4441:3:23","nodeType":"VariableDeclaration","scope":4306,"src":"4427:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4298,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:23"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"result","nameLocation":"4477:6:23","nodeType":"VariableDeclaration","scope":4306,"src":"4469:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:23"},"scope":4319,"src":"4390:421:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"4994:326:23","statements":[{"AST":{"nativeSrc":"5029:285:23","nodeType":"YulBlock","src":"5029:285:23","statements":[{"nativeSrc":"5043:24:23","nodeType":"YulVariableDeclaration","src":"5043:24:23","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:23","nodeType":"YulIdentifier","src":"5063:3:23"}],"functionName":{"name":"mload","nativeSrc":"5057:5:23","nodeType":"YulIdentifier","src":"5057:5:23"},"nativeSrc":"5057:10:23","nodeType":"YulFunctionCall","src":"5057:10:23"},"variables":[{"name":"length","nativeSrc":"5047:6:23","nodeType":"YulTypedName","src":"5047:6:23","type":""}]},{"nativeSrc":"5080:27:23","nodeType":"YulVariableDeclaration","src":"5080:27:23","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:23","nodeType":"YulIdentifier","src":"5097:3:23"},{"kind":"number","nativeSrc":"5102:4:23","nodeType":"YulLiteral","src":"5102:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:23","nodeType":"YulIdentifier","src":"5093:3:23"},"nativeSrc":"5093:14:23","nodeType":"YulFunctionCall","src":"5093:14:23"},"variables":[{"name":"begin","nativeSrc":"5084:5:23","nodeType":"YulTypedName","src":"5084:5:23","type":""}]},{"nativeSrc":"5120:29:23","nodeType":"YulVariableDeclaration","src":"5120:29:23","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:23","nodeType":"YulIdentifier","src":"5135:5:23"},{"name":"length","nativeSrc":"5142:6:23","nodeType":"YulIdentifier","src":"5142:6:23"}],"functionName":{"name":"add","nativeSrc":"5131:3:23","nodeType":"YulIdentifier","src":"5131:3:23"},"nativeSrc":"5131:18:23","nodeType":"YulFunctionCall","src":"5131:18:23"},"variables":[{"name":"end","nativeSrc":"5124:3:23","nodeType":"YulTypedName","src":"5124:3:23","type":""}]},{"nativeSrc":"5162:23:23","nodeType":"YulVariableDeclaration","src":"5162:23:23","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:23","nodeType":"YulIdentifier","src":"5181:3:23"}],"functionName":{"name":"mload","nativeSrc":"5175:5:23","nodeType":"YulIdentifier","src":"5175:5:23"},"nativeSrc":"5175:10:23","nodeType":"YulFunctionCall","src":"5175:10:23"},"variables":[{"name":"cache","nativeSrc":"5166:5:23","nodeType":"YulTypedName","src":"5166:5:23","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:23","nodeType":"YulIdentifier","src":"5205:3:23"},{"name":"slot","nativeSrc":"5210:4:23","nodeType":"YulIdentifier","src":"5210:4:23"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:23","nodeType":"YulIdentifier","src":"5198:6:23"},"nativeSrc":"5198:17:23","nodeType":"YulFunctionCall","src":"5198:17:23"},"nativeSrc":"5198:17:23","nodeType":"YulExpressionStatement","src":"5198:17:23"},{"nativeSrc":"5228:45:23","nodeType":"YulAssignment","src":"5228:45:23","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:23","nodeType":"YulIdentifier","src":"5248:5:23"},{"arguments":[{"name":"length","nativeSrc":"5259:6:23","nodeType":"YulIdentifier","src":"5259:6:23"},{"kind":"number","nativeSrc":"5267:4:23","nodeType":"YulLiteral","src":"5267:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:23","nodeType":"YulIdentifier","src":"5255:3:23"},"nativeSrc":"5255:17:23","nodeType":"YulFunctionCall","src":"5255:17:23"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:23","nodeType":"YulIdentifier","src":"5238:9:23"},"nativeSrc":"5238:35:23","nodeType":"YulFunctionCall","src":"5238:35:23"},"variableNames":[{"name":"result","nativeSrc":"5228:6:23","nodeType":"YulIdentifier","src":"5228:6:23"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:23","nodeType":"YulIdentifier","src":"5293:3:23"},{"name":"cache","nativeSrc":"5298:5:23","nodeType":"YulIdentifier","src":"5298:5:23"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:23","nodeType":"YulIdentifier","src":"5286:6:23"},"nativeSrc":"5286:18:23","nodeType":"YulFunctionCall","src":"5286:18:23"},"nativeSrc":"5286:18:23","nodeType":"YulExpressionStatement","src":"5286:18:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4311,"isOffset":false,"isSlot":false,"src":"5063:3:23","valueSize":1},{"declaration":4311,"isOffset":false,"isSlot":false,"src":"5097:3:23","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"5228:6:23","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"5210:4:23","valueSize":1}],"flags":["memory-safe"],"id":4316,"nodeType":"InlineAssembly","src":"5004:310:23"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"4817:78:23","text":" @dev Derive the location of a mapping element from the key."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:23","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"slot","nameLocation":"4931:4:23","nodeType":"VariableDeclaration","scope":4318,"src":"4923:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"key","nameLocation":"4950:3:23","nodeType":"VariableDeclaration","scope":4318,"src":"4937:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4310,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:23"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"result","nameLocation":"4986:6:23","nodeType":"VariableDeclaration","scope":4318,"src":"4978:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:23"},"scope":4319,"src":"4900:420:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4320,"src":"1599:3723:23","usedErrors":[],"usedEvents":[]}],"src":"199:5124:23"},"id":23},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4443]},"id":4444,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4321,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"219:1187:24","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4443,"linearizedBaseContracts":[4443],"name":"StorageSlot","nameLocation":"1415:11:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4325,"members":[{"constant":false,"id":4324,"mutability":"mutable","name":"value","nameLocation":"1470:5:24","nodeType":"VariableDeclaration","scope":4325,"src":"1462:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:24","nodeType":"StructDefinition","scope":4443,"src":"1433:49:24","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4328,"members":[{"constant":false,"id":4327,"mutability":"mutable","name":"value","nameLocation":"1522:5:24","nodeType":"VariableDeclaration","scope":4328,"src":"1517:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4326,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:24","nodeType":"StructDefinition","scope":4443,"src":"1488:46:24","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4331,"members":[{"constant":false,"id":4330,"mutability":"mutable","name":"value","nameLocation":"1577:5:24","nodeType":"VariableDeclaration","scope":4331,"src":"1569:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:24","nodeType":"StructDefinition","scope":4443,"src":"1540:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4334,"members":[{"constant":false,"id":4333,"mutability":"mutable","name":"value","nameLocation":"1632:5:24","nodeType":"VariableDeclaration","scope":4334,"src":"1624:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:24","nodeType":"StructDefinition","scope":4443,"src":"1595:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4337,"members":[{"constant":false,"id":4336,"mutability":"mutable","name":"value","nameLocation":"1685:5:24","nodeType":"VariableDeclaration","scope":4337,"src":"1678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4335,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:24","nodeType":"StructDefinition","scope":4443,"src":"1650:47:24","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4340,"members":[{"constant":false,"id":4339,"mutability":"mutable","name":"value","nameLocation":"1738:5:24","nodeType":"VariableDeclaration","scope":4340,"src":"1731:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4338,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:24","nodeType":"StructDefinition","scope":4443,"src":"1703:47:24","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4343,"members":[{"constant":false,"id":4342,"mutability":"mutable","name":"value","nameLocation":"1789:5:24","nodeType":"VariableDeclaration","scope":4343,"src":"1783:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:24","nodeType":"StructDefinition","scope":4443,"src":"1756:45:24","visibility":"public"},{"body":{"id":4353,"nodeType":"Block","src":"1983:79:24","statements":[{"AST":{"nativeSrc":"2018:38:24","nodeType":"YulBlock","src":"2018:38:24","statements":[{"nativeSrc":"2032:14:24","nodeType":"YulAssignment","src":"2032:14:24","value":{"name":"slot","nativeSrc":"2042:4:24","nodeType":"YulIdentifier","src":"2042:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:24","nodeType":"YulIdentifier","src":"2032:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4350,"isOffset":false,"isSlot":true,"src":"2032:6:24","suffix":"slot","valueSize":1},{"declaration":4346,"isOffset":false,"isSlot":false,"src":"2042:4:24","valueSize":1}],"flags":["memory-safe"],"id":4352,"nodeType":"InlineAssembly","src":"1993:63:24"}]},"documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"1807:87:24","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:24","nodeType":"FunctionDefinition","parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"slot","nameLocation":"1931:4:24","nodeType":"VariableDeclaration","scope":4354,"src":"1923:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:24"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"r","nameLocation":"1980:1:24","nodeType":"VariableDeclaration","scope":4354,"src":"1960:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4349,"nodeType":"UserDefinedTypeName","pathNode":{"id":4348,"name":"AddressSlot","nameLocations":["1960:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4325,"src":"1960:11:24"},"referencedDeclaration":4325,"src":"1960:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4325_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:24"},"scope":4443,"src":"1899:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"2243:79:24","statements":[{"AST":{"nativeSrc":"2278:38:24","nodeType":"YulBlock","src":"2278:38:24","statements":[{"nativeSrc":"2292:14:24","nodeType":"YulAssignment","src":"2292:14:24","value":{"name":"slot","nativeSrc":"2302:4:24","nodeType":"YulIdentifier","src":"2302:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:24","nodeType":"YulIdentifier","src":"2292:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4361,"isOffset":false,"isSlot":true,"src":"2292:6:24","suffix":"slot","valueSize":1},{"declaration":4357,"isOffset":false,"isSlot":false,"src":"2302:4:24","valueSize":1}],"flags":["memory-safe"],"id":4363,"nodeType":"InlineAssembly","src":"2253:63:24"}]},"documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"2068:86:24","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:24","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"slot","nameLocation":"2191:4:24","nodeType":"VariableDeclaration","scope":4365,"src":"2183:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:24"},"returnParameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"r","nameLocation":"2240:1:24","nodeType":"VariableDeclaration","scope":4365,"src":"2220:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4328_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4360,"nodeType":"UserDefinedTypeName","pathNode":{"id":4359,"name":"BooleanSlot","nameLocations":["2220:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"2220:11:24"},"referencedDeclaration":4328,"src":"2220:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4328_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:24"},"scope":4443,"src":"2159:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"2503:79:24","statements":[{"AST":{"nativeSrc":"2538:38:24","nodeType":"YulBlock","src":"2538:38:24","statements":[{"nativeSrc":"2552:14:24","nodeType":"YulAssignment","src":"2552:14:24","value":{"name":"slot","nativeSrc":"2562:4:24","nodeType":"YulIdentifier","src":"2562:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:24","nodeType":"YulIdentifier","src":"2552:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4372,"isOffset":false,"isSlot":true,"src":"2552:6:24","suffix":"slot","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"2562:4:24","valueSize":1}],"flags":["memory-safe"],"id":4374,"nodeType":"InlineAssembly","src":"2513:63:24"}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"2328:86:24","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:24","nodeType":"FunctionDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"slot","nameLocation":"2451:4:24","nodeType":"VariableDeclaration","scope":4376,"src":"2443:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:24"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"r","nameLocation":"2500:1:24","nodeType":"VariableDeclaration","scope":4376,"src":"2480:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4331_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4371,"nodeType":"UserDefinedTypeName","pathNode":{"id":4370,"name":"Bytes32Slot","nameLocations":["2480:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4331,"src":"2480:11:24"},"referencedDeclaration":4331,"src":"2480:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4331_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:24"},"scope":4443,"src":"2419:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4386,"nodeType":"Block","src":"2763:79:24","statements":[{"AST":{"nativeSrc":"2798:38:24","nodeType":"YulBlock","src":"2798:38:24","statements":[{"nativeSrc":"2812:14:24","nodeType":"YulAssignment","src":"2812:14:24","value":{"name":"slot","nativeSrc":"2822:4:24","nodeType":"YulIdentifier","src":"2822:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:24","nodeType":"YulIdentifier","src":"2812:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4383,"isOffset":false,"isSlot":true,"src":"2812:6:24","suffix":"slot","valueSize":1},{"declaration":4379,"isOffset":false,"isSlot":false,"src":"2822:4:24","valueSize":1}],"flags":["memory-safe"],"id":4385,"nodeType":"InlineAssembly","src":"2773:63:24"}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"2588:86:24","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4387,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:24","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"slot","nameLocation":"2711:4:24","nodeType":"VariableDeclaration","scope":4387,"src":"2703:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:24"},"returnParameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"r","nameLocation":"2760:1:24","nodeType":"VariableDeclaration","scope":4387,"src":"2740:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4382,"nodeType":"UserDefinedTypeName","pathNode":{"id":4381,"name":"Uint256Slot","nameLocations":["2740:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"2740:11:24"},"referencedDeclaration":4334,"src":"2740:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4334_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:24"},"scope":4443,"src":"2679:163:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4397,"nodeType":"Block","src":"3020:79:24","statements":[{"AST":{"nativeSrc":"3055:38:24","nodeType":"YulBlock","src":"3055:38:24","statements":[{"nativeSrc":"3069:14:24","nodeType":"YulAssignment","src":"3069:14:24","value":{"name":"slot","nativeSrc":"3079:4:24","nodeType":"YulIdentifier","src":"3079:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:24","nodeType":"YulIdentifier","src":"3069:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4394,"isOffset":false,"isSlot":true,"src":"3069:6:24","suffix":"slot","valueSize":1},{"declaration":4390,"isOffset":false,"isSlot":false,"src":"3079:4:24","valueSize":1}],"flags":["memory-safe"],"id":4396,"nodeType":"InlineAssembly","src":"3030:63:24"}]},"documentation":{"id":4388,"nodeType":"StructuredDocumentation","src":"2848:85:24","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:24","nodeType":"FunctionDefinition","parameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"slot","nameLocation":"2969:4:24","nodeType":"VariableDeclaration","scope":4398,"src":"2961:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:24"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"r","nameLocation":"3017:1:24","nodeType":"VariableDeclaration","scope":4398,"src":"2998:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4337_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4393,"nodeType":"UserDefinedTypeName","pathNode":{"id":4392,"name":"Int256Slot","nameLocations":["2998:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4337,"src":"2998:10:24"},"referencedDeclaration":4337,"src":"2998:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4337_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:24"},"scope":4443,"src":"2938:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4408,"nodeType":"Block","src":"3277:79:24","statements":[{"AST":{"nativeSrc":"3312:38:24","nodeType":"YulBlock","src":"3312:38:24","statements":[{"nativeSrc":"3326:14:24","nodeType":"YulAssignment","src":"3326:14:24","value":{"name":"slot","nativeSrc":"3336:4:24","nodeType":"YulIdentifier","src":"3336:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:24","nodeType":"YulIdentifier","src":"3326:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4405,"isOffset":false,"isSlot":true,"src":"3326:6:24","suffix":"slot","valueSize":1},{"declaration":4401,"isOffset":false,"isSlot":false,"src":"3336:4:24","valueSize":1}],"flags":["memory-safe"],"id":4407,"nodeType":"InlineAssembly","src":"3287:63:24"}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"3105:85:24","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:24","nodeType":"FunctionDefinition","parameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"slot","nameLocation":"3226:4:24","nodeType":"VariableDeclaration","scope":4409,"src":"3218:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:24"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"r","nameLocation":"3274:1:24","nodeType":"VariableDeclaration","scope":4409,"src":"3255:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4404,"nodeType":"UserDefinedTypeName","pathNode":{"id":4403,"name":"StringSlot","nameLocations":["3255:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4340,"src":"3255:10:24"},"referencedDeclaration":4340,"src":"3255:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:24"},"scope":4443,"src":"3195:161:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4419,"nodeType":"Block","src":"3558:85:24","statements":[{"AST":{"nativeSrc":"3593:44:24","nodeType":"YulBlock","src":"3593:44:24","statements":[{"nativeSrc":"3607:20:24","nodeType":"YulAssignment","src":"3607:20:24","value":{"name":"store.slot","nativeSrc":"3617:10:24","nodeType":"YulIdentifier","src":"3617:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:24","nodeType":"YulIdentifier","src":"3607:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4416,"isOffset":false,"isSlot":true,"src":"3607:6:24","suffix":"slot","valueSize":1},{"declaration":4412,"isOffset":false,"isSlot":true,"src":"3617:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4418,"nodeType":"InlineAssembly","src":"3568:69:24"}]},"documentation":{"id":4410,"nodeType":"StructuredDocumentation","src":"3362:101:24","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4420,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:24","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"store","nameLocation":"3506:5:24","nodeType":"VariableDeclaration","scope":4420,"src":"3491:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4411,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:24"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"r","nameLocation":"3555:1:24","nodeType":"VariableDeclaration","scope":4420,"src":"3536:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4415,"nodeType":"UserDefinedTypeName","pathNode":{"id":4414,"name":"StringSlot","nameLocations":["3536:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4340,"src":"3536:10:24"},"referencedDeclaration":4340,"src":"3536:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4340_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:24"},"scope":4443,"src":"3468:175:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4430,"nodeType":"Block","src":"3818:79:24","statements":[{"AST":{"nativeSrc":"3853:38:24","nodeType":"YulBlock","src":"3853:38:24","statements":[{"nativeSrc":"3867:14:24","nodeType":"YulAssignment","src":"3867:14:24","value":{"name":"slot","nativeSrc":"3877:4:24","nodeType":"YulIdentifier","src":"3877:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:24","nodeType":"YulIdentifier","src":"3867:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4427,"isOffset":false,"isSlot":true,"src":"3867:6:24","suffix":"slot","valueSize":1},{"declaration":4423,"isOffset":false,"isSlot":false,"src":"3877:4:24","valueSize":1}],"flags":["memory-safe"],"id":4429,"nodeType":"InlineAssembly","src":"3828:63:24"}]},"documentation":{"id":4421,"nodeType":"StructuredDocumentation","src":"3649:84:24","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4431,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:24","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"slot","nameLocation":"3768:4:24","nodeType":"VariableDeclaration","scope":4431,"src":"3760:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:24"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"r","nameLocation":"3815:1:24","nodeType":"VariableDeclaration","scope":4431,"src":"3797:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4426,"nodeType":"UserDefinedTypeName","pathNode":{"id":4425,"name":"BytesSlot","nameLocations":["3797:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4343,"src":"3797:9:24"},"referencedDeclaration":4343,"src":"3797:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:24"},"scope":4443,"src":"3738:159:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"4094:85:24","statements":[{"AST":{"nativeSrc":"4129:44:24","nodeType":"YulBlock","src":"4129:44:24","statements":[{"nativeSrc":"4143:20:24","nodeType":"YulAssignment","src":"4143:20:24","value":{"name":"store.slot","nativeSrc":"4153:10:24","nodeType":"YulIdentifier","src":"4153:10:24"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:24","nodeType":"YulIdentifier","src":"4143:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4438,"isOffset":false,"isSlot":true,"src":"4143:6:24","suffix":"slot","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":true,"src":"4153:10:24","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4440,"nodeType":"InlineAssembly","src":"4104:69:24"}]},"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"3903:99:24","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:24","nodeType":"FunctionDefinition","parameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"store","nameLocation":"4043:5:24","nodeType":"VariableDeclaration","scope":4442,"src":"4029:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4433,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:24"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"r","nameLocation":"4091:1:24","nodeType":"VariableDeclaration","scope":4442,"src":"4073:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4437,"nodeType":"UserDefinedTypeName","pathNode":{"id":4436,"name":"BytesSlot","nameLocations":["4073:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":4343,"src":"4073:9:24"},"referencedDeclaration":4343,"src":"4073:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4343_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:24"},"scope":4443,"src":"4007:172:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4444,"src":"1407:2774:24","usedErrors":[],"usedEvents":[]}],"src":"193:3989:24"},"id":24},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4455]},"id":4456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4445,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"142:280:25","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4455,"linearizedBaseContracts":[4455],"name":"IERC165","nameLocation":"433:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"447:340:25","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4454,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:25","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:25","nodeType":"VariableDeclaration","scope":4454,"src":"819:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4448,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:25"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"862:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4451,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:25"},"scope":4455,"src":"792:76:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4456,"src":"423:447:25","usedErrors":[],"usedEvents":[]}],"src":"115:756:25"},"id":25},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6076],"Panic":[4189],"SafeCast":[7841]},"id":6077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4457,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6077,"sourceUnit":4190,"src":"129:35:26","symbolAliases":[{"foreign":{"id":4458,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"137:5:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6077,"sourceUnit":7842,"src":"165:40:26","symbolAliases":[{"foreign":{"id":4460,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"207:73:26","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6076,"linearizedBaseContracts":[6076],"name":"Math","nameLocation":"289:4:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4467,"members":[{"id":4463,"name":"Floor","nameLocation":"324:5:26","nodeType":"EnumValue","src":"324:5:26"},{"id":4464,"name":"Ceil","nameLocation":"367:4:26","nodeType":"EnumValue","src":"367:4:26"},{"id":4465,"name":"Trunc","nameLocation":"409:5:26","nodeType":"EnumValue","src":"409:5:26"},{"id":4466,"name":"Expand","nameLocation":"439:6:26","nodeType":"EnumValue","src":"439:6:26"}],"name":"Rounding","nameLocation":"305:8:26","nodeType":"EnumDefinition","src":"300:169:26"},{"body":{"id":4480,"nodeType":"Block","src":"731:112:26","statements":[{"AST":{"nativeSrc":"766:71:26","nodeType":"YulBlock","src":"766:71:26","statements":[{"nativeSrc":"780:16:26","nodeType":"YulAssignment","src":"780:16:26","value":{"arguments":[{"name":"a","nativeSrc":"791:1:26","nodeType":"YulIdentifier","src":"791:1:26"},{"name":"b","nativeSrc":"794:1:26","nodeType":"YulIdentifier","src":"794:1:26"}],"functionName":{"name":"add","nativeSrc":"787:3:26","nodeType":"YulIdentifier","src":"787:3:26"},"nativeSrc":"787:9:26","nodeType":"YulFunctionCall","src":"787:9:26"},"variableNames":[{"name":"low","nativeSrc":"780:3:26","nodeType":"YulIdentifier","src":"780:3:26"}]},{"nativeSrc":"809:18:26","nodeType":"YulAssignment","src":"809:18:26","value":{"arguments":[{"name":"low","nativeSrc":"820:3:26","nodeType":"YulIdentifier","src":"820:3:26"},{"name":"a","nativeSrc":"825:1:26","nodeType":"YulIdentifier","src":"825:1:26"}],"functionName":{"name":"lt","nativeSrc":"817:2:26","nodeType":"YulIdentifier","src":"817:2:26"},"nativeSrc":"817:10:26","nodeType":"YulFunctionCall","src":"817:10:26"},"variableNames":[{"name":"high","nativeSrc":"809:4:26","nodeType":"YulIdentifier","src":"809:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4470,"isOffset":false,"isSlot":false,"src":"791:1:26","valueSize":1},{"declaration":4470,"isOffset":false,"isSlot":false,"src":"825:1:26","valueSize":1},{"declaration":4472,"isOffset":false,"isSlot":false,"src":"794:1:26","valueSize":1},{"declaration":4475,"isOffset":false,"isSlot":false,"src":"809:4:26","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"780:3:26","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"820:3:26","valueSize":1}],"flags":["memory-safe"],"id":4479,"nodeType":"InlineAssembly","src":"741:96:26"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"475:163:26","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:26","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"a","nameLocation":"667:1:26","nodeType":"VariableDeclaration","scope":4481,"src":"659:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4472,"mutability":"mutable","name":"b","nameLocation":"678:1:26","nodeType":"VariableDeclaration","scope":4481,"src":"670:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:26"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"high","nameLocation":"712:4:26","nodeType":"VariableDeclaration","scope":4481,"src":"704:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"low","nameLocation":"726:3:26","nodeType":"VariableDeclaration","scope":4481,"src":"718:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:26"},"scope":6076,"src":"643:200:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"1115:462:26","statements":[{"AST":{"nativeSrc":"1437:134:26","nodeType":"YulBlock","src":"1437:134:26","statements":[{"nativeSrc":"1451:30:26","nodeType":"YulVariableDeclaration","src":"1451:30:26","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:26","nodeType":"YulIdentifier","src":"1468:1:26"},{"name":"b","nativeSrc":"1471:1:26","nodeType":"YulIdentifier","src":"1471:1:26"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:26","nodeType":"YulLiteral","src":"1478:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:26","nodeType":"YulIdentifier","src":"1474:3:26"},"nativeSrc":"1474:6:26","nodeType":"YulFunctionCall","src":"1474:6:26"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:26","nodeType":"YulIdentifier","src":"1461:6:26"},"nativeSrc":"1461:20:26","nodeType":"YulFunctionCall","src":"1461:20:26"},"variables":[{"name":"mm","nativeSrc":"1455:2:26","nodeType":"YulTypedName","src":"1455:2:26","type":""}]},{"nativeSrc":"1494:16:26","nodeType":"YulAssignment","src":"1494:16:26","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:26","nodeType":"YulIdentifier","src":"1505:1:26"},{"name":"b","nativeSrc":"1508:1:26","nodeType":"YulIdentifier","src":"1508:1:26"}],"functionName":{"name":"mul","nativeSrc":"1501:3:26","nodeType":"YulIdentifier","src":"1501:3:26"},"nativeSrc":"1501:9:26","nodeType":"YulFunctionCall","src":"1501:9:26"},"variableNames":[{"name":"low","nativeSrc":"1494:3:26","nodeType":"YulIdentifier","src":"1494:3:26"}]},{"nativeSrc":"1523:38:26","nodeType":"YulAssignment","src":"1523:38:26","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:26","nodeType":"YulIdentifier","src":"1539:2:26"},{"name":"low","nativeSrc":"1543:3:26","nodeType":"YulIdentifier","src":"1543:3:26"}],"functionName":{"name":"sub","nativeSrc":"1535:3:26","nodeType":"YulIdentifier","src":"1535:3:26"},"nativeSrc":"1535:12:26","nodeType":"YulFunctionCall","src":"1535:12:26"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:26","nodeType":"YulIdentifier","src":"1552:2:26"},{"name":"low","nativeSrc":"1556:3:26","nodeType":"YulIdentifier","src":"1556:3:26"}],"functionName":{"name":"lt","nativeSrc":"1549:2:26","nodeType":"YulIdentifier","src":"1549:2:26"},"nativeSrc":"1549:11:26","nodeType":"YulFunctionCall","src":"1549:11:26"}],"functionName":{"name":"sub","nativeSrc":"1531:3:26","nodeType":"YulIdentifier","src":"1531:3:26"},"nativeSrc":"1531:30:26","nodeType":"YulFunctionCall","src":"1531:30:26"},"variableNames":[{"name":"high","nativeSrc":"1523:4:26","nodeType":"YulIdentifier","src":"1523:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4484,"isOffset":false,"isSlot":false,"src":"1468:1:26","valueSize":1},{"declaration":4484,"isOffset":false,"isSlot":false,"src":"1505:1:26","valueSize":1},{"declaration":4486,"isOffset":false,"isSlot":false,"src":"1471:1:26","valueSize":1},{"declaration":4486,"isOffset":false,"isSlot":false,"src":"1508:1:26","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"1523:4:26","valueSize":1},{"declaration":4491,"isOffset":false,"isSlot":false,"src":"1494:3:26","valueSize":1},{"declaration":4491,"isOffset":false,"isSlot":false,"src":"1543:3:26","valueSize":1},{"declaration":4491,"isOffset":false,"isSlot":false,"src":"1556:3:26","valueSize":1}],"flags":["memory-safe"],"id":4493,"nodeType":"InlineAssembly","src":"1412:159:26"}]},"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"849:173:26","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:26","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"a","nameLocation":"1051:1:26","nodeType":"VariableDeclaration","scope":4495,"src":"1043:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"b","nameLocation":"1062:1:26","nodeType":"VariableDeclaration","scope":4495,"src":"1054:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:26"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"high","nameLocation":"1096:4:26","nodeType":"VariableDeclaration","scope":4495,"src":"1088:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"low","nameLocation":"1110:3:26","nodeType":"VariableDeclaration","scope":4495,"src":"1102:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:26"},"scope":6076,"src":"1027:550:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"1784:149:26","statements":[{"id":4528,"nodeType":"UncheckedBlock","src":"1794:133:26","statements":[{"assignments":[4508],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"c","nameLocation":"1826:1:26","nodeType":"VariableDeclaration","scope":4528,"src":"1818:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"1830:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"1834:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:26"},{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4513,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"1849:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"1859:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"1864:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"ExpressionStatement","src":"1849:16:26"},{"expression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"1879:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"1888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"1908:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4521,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"1892:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"1892:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4527,"nodeType":"ExpressionStatement","src":"1879:37:26"}]}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"1583:105:26","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:26","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"a","nameLocation":"1717:1:26","nodeType":"VariableDeclaration","scope":4530,"src":"1709:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"b","nameLocation":"1728:1:26","nodeType":"VariableDeclaration","scope":4530,"src":"1720:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:26"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"success","nameLocation":"1759:7:26","nodeType":"VariableDeclaration","scope":4530,"src":"1754:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4502,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"result","nameLocation":"1776:6:26","nodeType":"VariableDeclaration","scope":4530,"src":"1768:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:26"},"scope":6076,"src":"1693:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4564,"nodeType":"Block","src":"2143:149:26","statements":[{"id":4563,"nodeType":"UncheckedBlock","src":"2153:133:26","statements":[{"assignments":[4543],"declarations":[{"constant":false,"id":4543,"mutability":"mutable","name":"c","nameLocation":"2185:1:26","nodeType":"VariableDeclaration","scope":4563,"src":"2177:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4547,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2189:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"2193:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:26"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2208:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2218:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2223:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4553,"nodeType":"ExpressionStatement","src":"2208:16:26"},{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"2238:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4558,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2267:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4556,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"2251:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"2251:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"2238:37:26"}]}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"1939:108:26","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:26","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"a","nameLocation":"2076:1:26","nodeType":"VariableDeclaration","scope":4565,"src":"2068:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"b","nameLocation":"2087:1:26","nodeType":"VariableDeclaration","scope":4565,"src":"2079:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:26"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"success","nameLocation":"2118:7:26","nodeType":"VariableDeclaration","scope":4565,"src":"2113:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4537,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"result","nameLocation":"2135:6:26","nodeType":"VariableDeclaration","scope":4565,"src":"2127:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:26"},"scope":6076,"src":"2052:240:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"2505:391:26","statements":[{"id":4593,"nodeType":"UncheckedBlock","src":"2515:375:26","statements":[{"assignments":[4578],"declarations":[{"constant":false,"id":4578,"mutability":"mutable","name":"c","nameLocation":"2547:1:26","nodeType":"VariableDeclaration","scope":4593,"src":"2539:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4582,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"2551:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"2555:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:26"},{"AST":{"nativeSrc":"2595:188:26","nodeType":"YulBlock","src":"2595:188:26","statements":[{"nativeSrc":"2727:42:26","nodeType":"YulAssignment","src":"2727:42:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:26","nodeType":"YulIdentifier","src":"2748:1:26"},{"name":"a","nativeSrc":"2751:1:26","nodeType":"YulIdentifier","src":"2751:1:26"}],"functionName":{"name":"div","nativeSrc":"2744:3:26","nodeType":"YulIdentifier","src":"2744:3:26"},"nativeSrc":"2744:9:26","nodeType":"YulFunctionCall","src":"2744:9:26"},{"name":"b","nativeSrc":"2755:1:26","nodeType":"YulIdentifier","src":"2755:1:26"}],"functionName":{"name":"eq","nativeSrc":"2741:2:26","nodeType":"YulIdentifier","src":"2741:2:26"},"nativeSrc":"2741:16:26","nodeType":"YulFunctionCall","src":"2741:16:26"},{"arguments":[{"name":"a","nativeSrc":"2766:1:26","nodeType":"YulIdentifier","src":"2766:1:26"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:26","nodeType":"YulIdentifier","src":"2759:6:26"},"nativeSrc":"2759:9:26","nodeType":"YulFunctionCall","src":"2759:9:26"}],"functionName":{"name":"or","nativeSrc":"2738:2:26","nodeType":"YulIdentifier","src":"2738:2:26"},"nativeSrc":"2738:31:26","nodeType":"YulFunctionCall","src":"2738:31:26"},"variableNames":[{"name":"success","nativeSrc":"2727:7:26","nodeType":"YulIdentifier","src":"2727:7:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4568,"isOffset":false,"isSlot":false,"src":"2751:1:26","valueSize":1},{"declaration":4568,"isOffset":false,"isSlot":false,"src":"2766:1:26","valueSize":1},{"declaration":4570,"isOffset":false,"isSlot":false,"src":"2755:1:26","valueSize":1},{"declaration":4578,"isOffset":false,"isSlot":false,"src":"2748:1:26","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"2727:7:26","valueSize":1}],"flags":["memory-safe"],"id":4583,"nodeType":"InlineAssembly","src":"2570:213:26"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2842:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"2851:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4588,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"2871:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"2855:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"2855:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"2842:37:26"}]}]},"documentation":{"id":4566,"nodeType":"StructuredDocumentation","src":"2298:111:26","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:26","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"a","nameLocation":"2438:1:26","nodeType":"VariableDeclaration","scope":4595,"src":"2430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"b","nameLocation":"2449:1:26","nodeType":"VariableDeclaration","scope":4595,"src":"2441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:26"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"success","nameLocation":"2480:7:26","nodeType":"VariableDeclaration","scope":4595,"src":"2475:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4572,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"result","nameLocation":"2497:6:26","nodeType":"VariableDeclaration","scope":4595,"src":"2489:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:26"},"scope":6076,"src":"2414:482:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4615,"nodeType":"Block","src":"3111:231:26","statements":[{"id":4614,"nodeType":"UncheckedBlock","src":"3121:215:26","statements":[{"expression":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4607,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"3145:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"3155:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"nodeType":"ExpressionStatement","src":"3145:15:26"},{"AST":{"nativeSrc":"3199:127:26","nodeType":"YulBlock","src":"3199:127:26","statements":[{"nativeSrc":"3293:19:26","nodeType":"YulAssignment","src":"3293:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:26","nodeType":"YulIdentifier","src":"3307:1:26"},{"name":"b","nativeSrc":"3310:1:26","nodeType":"YulIdentifier","src":"3310:1:26"}],"functionName":{"name":"div","nativeSrc":"3303:3:26","nodeType":"YulIdentifier","src":"3303:3:26"},"nativeSrc":"3303:9:26","nodeType":"YulFunctionCall","src":"3303:9:26"},"variableNames":[{"name":"result","nativeSrc":"3293:6:26","nodeType":"YulIdentifier","src":"3293:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4598,"isOffset":false,"isSlot":false,"src":"3307:1:26","valueSize":1},{"declaration":4600,"isOffset":false,"isSlot":false,"src":"3310:1:26","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"3293:6:26","valueSize":1}],"flags":["memory-safe"],"id":4613,"nodeType":"InlineAssembly","src":"3174:152:26"}]}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"2902:113:26","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4616,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:26","nodeType":"FunctionDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"a","nameLocation":"3044:1:26","nodeType":"VariableDeclaration","scope":4616,"src":"3036:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"b","nameLocation":"3055:1:26","nodeType":"VariableDeclaration","scope":4616,"src":"3047:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:26"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"success","nameLocation":"3086:7:26","nodeType":"VariableDeclaration","scope":4616,"src":"3081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4602,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"result","nameLocation":"3103:6:26","nodeType":"VariableDeclaration","scope":4616,"src":"3095:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:26"},"scope":6076,"src":"3020:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4636,"nodeType":"Block","src":"3567:231:26","statements":[{"id":4635,"nodeType":"UncheckedBlock","src":"3577:215:26","statements":[{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"3601:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"3611:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4633,"nodeType":"ExpressionStatement","src":"3601:15:26"},{"AST":{"nativeSrc":"3655:127:26","nodeType":"YulBlock","src":"3655:127:26","statements":[{"nativeSrc":"3749:19:26","nodeType":"YulAssignment","src":"3749:19:26","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:26","nodeType":"YulIdentifier","src":"3763:1:26"},{"name":"b","nativeSrc":"3766:1:26","nodeType":"YulIdentifier","src":"3766:1:26"}],"functionName":{"name":"mod","nativeSrc":"3759:3:26","nodeType":"YulIdentifier","src":"3759:3:26"},"nativeSrc":"3759:9:26","nodeType":"YulFunctionCall","src":"3759:9:26"},"variableNames":[{"name":"result","nativeSrc":"3749:6:26","nodeType":"YulIdentifier","src":"3749:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4619,"isOffset":false,"isSlot":false,"src":"3763:1:26","valueSize":1},{"declaration":4621,"isOffset":false,"isSlot":false,"src":"3766:1:26","valueSize":1},{"declaration":4626,"isOffset":false,"isSlot":false,"src":"3749:6:26","valueSize":1}],"flags":["memory-safe"],"id":4634,"nodeType":"InlineAssembly","src":"3630:152:26"}]}]},"documentation":{"id":4617,"nodeType":"StructuredDocumentation","src":"3348:123:26","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4637,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:26","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"a","nameLocation":"3500:1:26","nodeType":"VariableDeclaration","scope":4637,"src":"3492:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"b","nameLocation":"3511:1:26","nodeType":"VariableDeclaration","scope":4637,"src":"3503:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:26"},"returnParameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"success","nameLocation":"3542:7:26","nodeType":"VariableDeclaration","scope":4637,"src":"3537:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4623,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"result","nameLocation":"3559:6:26","nodeType":"VariableDeclaration","scope":4637,"src":"3551:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:26"},"scope":6076,"src":"3476:322:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4666,"nodeType":"Block","src":"3989:122:26","statements":[{"assignments":[4648,4650],"declarations":[{"constant":false,"id":4648,"mutability":"mutable","name":"success","nameLocation":"4005:7:26","nodeType":"VariableDeclaration","scope":4666,"src":"4000:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4647,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"result","nameLocation":"4022:6:26","nodeType":"VariableDeclaration","scope":4666,"src":"4014:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4655,"initialValue":{"arguments":[{"id":4652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4039:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"4042:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4651,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"4032:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:26"},{"expression":{"arguments":[{"id":4657,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"4069:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"4078:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:26","memberName":"max","nodeType":"MemberAccess","src":"4086:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"4061:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4646,"id":4665,"nodeType":"Return","src":"4054:50:26"}]},"documentation":{"id":4638,"nodeType":"StructuredDocumentation","src":"3804:103:26","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:26","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"a","nameLocation":"3943:1:26","nodeType":"VariableDeclaration","scope":4667,"src":"3935:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"b","nameLocation":"3954:1:26","nodeType":"VariableDeclaration","scope":4667,"src":"3946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:26"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4667,"src":"3980:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:26"},"scope":6076,"src":"3912:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4686,"nodeType":"Block","src":"4294:73:26","statements":[{"assignments":[null,4678],"declarations":[null,{"constant":false,"id":4678,"mutability":"mutable","name":"result","nameLocation":"4315:6:26","nodeType":"VariableDeclaration","scope":4686,"src":"4307:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4683,"initialValue":{"arguments":[{"id":4680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"4332:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4335:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"4325:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:26"},{"expression":{"id":4684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"4354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4676,"id":4685,"nodeType":"Return","src":"4347:13:26"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"4117:95:26","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4687,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:26","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"a","nameLocation":"4248:1:26","nodeType":"VariableDeclaration","scope":4687,"src":"4240:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"b","nameLocation":"4259:1:26","nodeType":"VariableDeclaration","scope":4687,"src":"4251:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:26"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4687,"src":"4285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:26"},"scope":6076,"src":"4217:150:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4716,"nodeType":"Block","src":"4564:122:26","statements":[{"assignments":[4698,4700],"declarations":[{"constant":false,"id":4698,"mutability":"mutable","name":"success","nameLocation":"4580:7:26","nodeType":"VariableDeclaration","scope":4716,"src":"4575:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4697,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4700,"mutability":"mutable","name":"result","nameLocation":"4597:6:26","nodeType":"VariableDeclaration","scope":4716,"src":"4589:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4705,"initialValue":{"arguments":[{"id":4702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"4614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"4617:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4701,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"4607:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:26"},{"expression":{"arguments":[{"id":4707,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"4644:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"4653:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:26","memberName":"max","nodeType":"MemberAccess","src":"4661:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"4636:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4696,"id":4715,"nodeType":"Return","src":"4629:50:26"}]},"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"4373:109:26","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4717,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:26","nodeType":"FunctionDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"a","nameLocation":"4518:1:26","nodeType":"VariableDeclaration","scope":4717,"src":"4510:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4692,"mutability":"mutable","name":"b","nameLocation":"4529:1:26","nodeType":"VariableDeclaration","scope":4717,"src":"4521:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:26"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4717,"src":"4555:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:26"},"scope":6076,"src":"4487:199:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4743,"nodeType":"Block","src":"5158:207:26","statements":[{"id":4742,"nodeType":"UncheckedBlock","src":"5168:191:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"5306:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"5312:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"5316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4736,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"5337:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"5321:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"5321:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4728,"id":4741,"nodeType":"Return","src":"5299:49:26"}]}]},"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"4692:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4744,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:26","nodeType":"FunctionDefinition","parameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"condition","nameLocation":"5093:9:26","nodeType":"VariableDeclaration","scope":4744,"src":"5088:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4719,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"a","nameLocation":"5112:1:26","nodeType":"VariableDeclaration","scope":4744,"src":"5104:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"b","nameLocation":"5123:1:26","nodeType":"VariableDeclaration","scope":4744,"src":"5115:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:26"},"returnParameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4744,"src":"5149:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:26"},"scope":6076,"src":"5071:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"5502:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5527:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"5531:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5534:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"5537:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4754,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"5519:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4753,"id":4761,"nodeType":"Return","src":"5512:27:26"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"5371:59:26","text":" @dev Returns the largest of two numbers."},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:26","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"a","nameLocation":"5456:1:26","nodeType":"VariableDeclaration","scope":4763,"src":"5448:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"b","nameLocation":"5467:1:26","nodeType":"VariableDeclaration","scope":4763,"src":"5459:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:26"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"5493:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:26"},"scope":6076,"src":"5435:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"5684:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"5709:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"5713:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"5716:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4778,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"5719:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"5701:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4772,"id":4780,"nodeType":"Return","src":"5694:27:26"}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"5552:60:26","text":" @dev Returns the smallest of two numbers."},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:26","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"a","nameLocation":"5638:1:26","nodeType":"VariableDeclaration","scope":4782,"src":"5630:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4768,"mutability":"mutable","name":"b","nameLocation":"5649:1:26","nodeType":"VariableDeclaration","scope":4782,"src":"5641:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:26"},"returnParameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"5675:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:26"},"scope":6076,"src":"5617:111:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4804,"nodeType":"Block","src":"5912:82:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"5967:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"5971:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"5977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4797,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"5981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4803,"nodeType":"Return","src":"5959:28:26"}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"5734:102:26","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4805,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:26","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"a","nameLocation":"5866:1:26","nodeType":"VariableDeclaration","scope":4805,"src":"5858:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4787,"mutability":"mutable","name":"b","nameLocation":"5877:1:26","nodeType":"VariableDeclaration","scope":4805,"src":"5869:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:26"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4805,"src":"5903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:26"},"scope":6076,"src":"5841:153:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4845,"nodeType":"Block","src":"6286:633:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"6300:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4826,"nodeType":"IfStatement","src":"6296:150:26","trueBody":{"id":4825,"nodeType":"Block","src":"6308:138:26","statements":[{"expression":{"arguments":[{"expression":{"id":4821,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"6412:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4156,"src":"6412:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4818,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"6400:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"6400:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4824,"nodeType":"ExpressionStatement","src":"6400:35:26"}]}},{"id":4844,"nodeType":"UncheckedBlock","src":"6829:84:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"6876:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4827,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"6860:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"6860:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"6887:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"6896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4814,"id":4843,"nodeType":"Return","src":"6853:49:26"}]}]},"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"6000:210:26","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4846,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:26","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"a","nameLocation":"6240:1:26","nodeType":"VariableDeclaration","scope":4846,"src":"6232:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"b","nameLocation":"6251:1:26","nodeType":"VariableDeclaration","scope":4846,"src":"6243:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:26"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4846,"src":"6277:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:26"},"scope":6076,"src":"6215:704:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"7340:3585:26","statements":[{"id":4980,"nodeType":"UncheckedBlock","src":"7350:3569:26","statements":[{"assignments":[4859,4861],"declarations":[{"constant":false,"id":4859,"mutability":"mutable","name":"high","nameLocation":"7383:4:26","nodeType":"VariableDeclaration","scope":4980,"src":"7375:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"low","nameLocation":"7397:3:26","nodeType":"VariableDeclaration","scope":4980,"src":"7389:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4866,"initialValue":{"arguments":[{"id":4863,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"7411:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4864,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"7414:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4862,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"7404:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"7498:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"7494:365:26","trueBody":{"id":4874,"nodeType":"Block","src":"7509:350:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"7827:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4871,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"7833:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4857,"id":4873,"nodeType":"Return","src":"7820:24:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"7969:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4877,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"7984:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"7965:142:26","trueBody":{"id":4893,"nodeType":"Block","src":"7990:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"8028:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4886,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4156,"src":"8046:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4888,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"8070:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"8070:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4882,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"8020:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4879,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"8008:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"8008:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4892,"nodeType":"ExpressionStatement","src":"8008:84:26"}]}},{"assignments":[4896],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:26","nodeType":"VariableDeclaration","scope":4980,"src":"8359:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4897,"nodeType":"VariableDeclarationStatement","src":"8359:17:26"},{"AST":{"nativeSrc":"8415:283:26","nodeType":"YulBlock","src":"8415:283:26","statements":[{"nativeSrc":"8484:38:26","nodeType":"YulAssignment","src":"8484:38:26","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:26","nodeType":"YulIdentifier","src":"8504:1:26"},{"name":"y","nativeSrc":"8507:1:26","nodeType":"YulIdentifier","src":"8507:1:26"},{"name":"denominator","nativeSrc":"8510:11:26","nodeType":"YulIdentifier","src":"8510:11:26"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:26","nodeType":"YulIdentifier","src":"8497:6:26"},"nativeSrc":"8497:25:26","nodeType":"YulFunctionCall","src":"8497:25:26"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:26","nodeType":"YulIdentifier","src":"8484:9:26"}]},{"nativeSrc":"8604:37:26","nodeType":"YulAssignment","src":"8604:37:26","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:26","nodeType":"YulIdentifier","src":"8616:4:26"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:26","nodeType":"YulIdentifier","src":"8625:9:26"},{"name":"low","nativeSrc":"8636:3:26","nodeType":"YulIdentifier","src":"8636:3:26"}],"functionName":{"name":"gt","nativeSrc":"8622:2:26","nodeType":"YulIdentifier","src":"8622:2:26"},"nativeSrc":"8622:18:26","nodeType":"YulFunctionCall","src":"8622:18:26"}],"functionName":{"name":"sub","nativeSrc":"8612:3:26","nodeType":"YulIdentifier","src":"8612:3:26"},"nativeSrc":"8612:29:26","nodeType":"YulFunctionCall","src":"8612:29:26"},"variableNames":[{"name":"high","nativeSrc":"8604:4:26","nodeType":"YulIdentifier","src":"8604:4:26"}]},{"nativeSrc":"8658:26:26","nodeType":"YulAssignment","src":"8658:26:26","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:26","nodeType":"YulIdentifier","src":"8669:3:26"},{"name":"remainder","nativeSrc":"8674:9:26","nodeType":"YulIdentifier","src":"8674:9:26"}],"functionName":{"name":"sub","nativeSrc":"8665:3:26","nodeType":"YulIdentifier","src":"8665:3:26"},"nativeSrc":"8665:19:26","nodeType":"YulFunctionCall","src":"8665:19:26"},"variableNames":[{"name":"low","nativeSrc":"8658:3:26","nodeType":"YulIdentifier","src":"8658:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4853,"isOffset":false,"isSlot":false,"src":"8510:11:26","valueSize":1},{"declaration":4859,"isOffset":false,"isSlot":false,"src":"8604:4:26","valueSize":1},{"declaration":4859,"isOffset":false,"isSlot":false,"src":"8616:4:26","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"8636:3:26","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"8658:3:26","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"8669:3:26","valueSize":1},{"declaration":4896,"isOffset":false,"isSlot":false,"src":"8484:9:26","valueSize":1},{"declaration":4896,"isOffset":false,"isSlot":false,"src":"8625:9:26","valueSize":1},{"declaration":4896,"isOffset":false,"isSlot":false,"src":"8674:9:26","valueSize":1},{"declaration":4849,"isOffset":false,"isSlot":false,"src":"8504:1:26","valueSize":1},{"declaration":4851,"isOffset":false,"isSlot":false,"src":"8507:1:26","valueSize":1}],"flags":["memory-safe"],"id":4898,"nodeType":"InlineAssembly","src":"8390:308:26"},{"assignments":[4900],"declarations":[{"constant":false,"id":4900,"mutability":"mutable","name":"twos","nameLocation":"8910:4:26","nodeType":"VariableDeclaration","scope":4980,"src":"8902:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4907,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"8917:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4903,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"8936:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:26"},{"AST":{"nativeSrc":"8987:359:26","nodeType":"YulBlock","src":"8987:359:26","statements":[{"nativeSrc":"9052:37:26","nodeType":"YulAssignment","src":"9052:37:26","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:26","nodeType":"YulIdentifier","src":"9071:11:26"},{"name":"twos","nativeSrc":"9084:4:26","nodeType":"YulIdentifier","src":"9084:4:26"}],"functionName":{"name":"div","nativeSrc":"9067:3:26","nodeType":"YulIdentifier","src":"9067:3:26"},"nativeSrc":"9067:22:26","nodeType":"YulFunctionCall","src":"9067:22:26"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:26","nodeType":"YulIdentifier","src":"9052:11:26"}]},{"nativeSrc":"9153:21:26","nodeType":"YulAssignment","src":"9153:21:26","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:26","nodeType":"YulIdentifier","src":"9164:3:26"},{"name":"twos","nativeSrc":"9169:4:26","nodeType":"YulIdentifier","src":"9169:4:26"}],"functionName":{"name":"div","nativeSrc":"9160:3:26","nodeType":"YulIdentifier","src":"9160:3:26"},"nativeSrc":"9160:14:26","nodeType":"YulFunctionCall","src":"9160:14:26"},"variableNames":[{"name":"low","nativeSrc":"9153:3:26","nodeType":"YulIdentifier","src":"9153:3:26"}]},{"nativeSrc":"9293:39:26","nodeType":"YulAssignment","src":"9293:39:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:26","nodeType":"YulLiteral","src":"9313:1:26","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:26","nodeType":"YulIdentifier","src":"9316:4:26"}],"functionName":{"name":"sub","nativeSrc":"9309:3:26","nodeType":"YulIdentifier","src":"9309:3:26"},"nativeSrc":"9309:12:26","nodeType":"YulFunctionCall","src":"9309:12:26"},{"name":"twos","nativeSrc":"9323:4:26","nodeType":"YulIdentifier","src":"9323:4:26"}],"functionName":{"name":"div","nativeSrc":"9305:3:26","nodeType":"YulIdentifier","src":"9305:3:26"},"nativeSrc":"9305:23:26","nodeType":"YulFunctionCall","src":"9305:23:26"},{"kind":"number","nativeSrc":"9330:1:26","nodeType":"YulLiteral","src":"9330:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:26","nodeType":"YulIdentifier","src":"9301:3:26"},"nativeSrc":"9301:31:26","nodeType":"YulFunctionCall","src":"9301:31:26"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:26","nodeType":"YulIdentifier","src":"9293:4:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4853,"isOffset":false,"isSlot":false,"src":"9052:11:26","valueSize":1},{"declaration":4853,"isOffset":false,"isSlot":false,"src":"9071:11:26","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"9153:3:26","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"9164:3:26","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"9084:4:26","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"9169:4:26","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"9293:4:26","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"9316:4:26","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"9323:4:26","valueSize":1}],"flags":["memory-safe"],"id":4908,"nodeType":"InlineAssembly","src":"8962:384:26"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4909,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"9409:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"9416:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4911,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"9423:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"9409:18:26"},{"assignments":[4916],"declarations":[{"constant":false,"id":4916,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:26","nodeType":"VariableDeclaration","scope":4980,"src":"9762:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4918,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"9785:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:26"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10018:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10033:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4927,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10047:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"10018:36:26"},{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10103:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4935,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10117:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"nodeType":"ExpressionStatement","src":"10088:36:26"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10160:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10175:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4943,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10189:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"10160:36:26"},{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10231:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10246:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4951,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4955,"nodeType":"ExpressionStatement","src":"10231:36:26"},{"expression":{"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4956,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10304:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10319:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4959,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10333:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4963,"nodeType":"ExpressionStatement","src":"10304:36:26"},{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4964,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10378:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"10393:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4967,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10407:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"10378:36:26"},{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"10859:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"10868:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4974,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"10874:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"10859:22:26"},{"expression":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"10902:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4857,"id":4979,"nodeType":"Return","src":"10895:13:26"}]}]},"documentation":{"id":4847,"nodeType":"StructuredDocumentation","src":"6925:312:26","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:26","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"x","nameLocation":"7266:1:26","nodeType":"VariableDeclaration","scope":4982,"src":"7258:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4851,"mutability":"mutable","name":"y","nameLocation":"7277:1:26","nodeType":"VariableDeclaration","scope":4982,"src":"7269:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4853,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:26","nodeType":"VariableDeclaration","scope":4982,"src":"7280:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:26"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"result","nameLocation":"7332:6:26","nodeType":"VariableDeclaration","scope":4982,"src":"7324:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:26"},"scope":6076,"src":"7242:3683:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"11164:128:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4998,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"11188:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4999,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"11191:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5000,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"11194:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4982,5019],"referencedDeclaration":4982,"src":"11181:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5005,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"11242:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":5004,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"11225:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"11262:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5009,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"11265:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5010,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"11268:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"11209:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"11209:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4996,"id":5017,"nodeType":"Return","src":"11174:111:26"}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"10931:118:26","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:26","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"x","nameLocation":"11078:1:26","nodeType":"VariableDeclaration","scope":5019,"src":"11070:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"y","nameLocation":"11089:1:26","nodeType":"VariableDeclaration","scope":5019,"src":"11081:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:26","nodeType":"VariableDeclaration","scope":5019,"src":"11092:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:26","nodeType":"VariableDeclaration","scope":5019,"src":"11113:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":4991,"nodeType":"UserDefinedTypeName","pathNode":{"id":4990,"name":"Rounding","nameLocations":["11113:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"11113:8:26"},"referencedDeclaration":4467,"src":"11113:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:26"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5019,"src":"11155:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:26"},"scope":6076,"src":"11054:238:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5068,"nodeType":"Block","src":"11500:245:26","statements":[{"id":5067,"nodeType":"UncheckedBlock","src":"11510:229:26","statements":[{"assignments":[5032,5034],"declarations":[{"constant":false,"id":5032,"mutability":"mutable","name":"high","nameLocation":"11543:4:26","nodeType":"VariableDeclaration","scope":5067,"src":"11535:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"low","nameLocation":"11557:3:26","nodeType":"VariableDeclaration","scope":5067,"src":"11549:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5039,"initialValue":{"arguments":[{"id":5036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"11571:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5037,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"11574:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"11564:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5040,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"11594:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5042,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"11607:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5053,"nodeType":"IfStatement","src":"11590:86:26","trueBody":{"id":5052,"nodeType":"Block","src":"11610:66:26","statements":[{"expression":{"arguments":[{"expression":{"id":5048,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"11640:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:26","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"11640:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5045,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"11628:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"11628:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"ExpressionStatement","src":"11628:33:26"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"11697:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5056,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"11712:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"11719:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5062,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"11726:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5030,"id":5066,"nodeType":"Return","src":"11689:39:26"}]}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"11298:111:26","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5069,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:26","nodeType":"FunctionDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"x","nameLocation":"11438:1:26","nodeType":"VariableDeclaration","scope":5069,"src":"11430:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"y","nameLocation":"11449:1:26","nodeType":"VariableDeclaration","scope":5069,"src":"11441:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"n","nameLocation":"11458:1:26","nodeType":"VariableDeclaration","scope":5069,"src":"11452:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5025,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:26"},"returnParameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"result","nameLocation":"11492:6:26","nodeType":"VariableDeclaration","scope":5069,"src":"11484:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:26"},"scope":6076,"src":"11414:331:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5107,"nodeType":"Block","src":"11963:113:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5085,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"11987:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5086,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"11990:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5087,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"11993:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5084,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5069,5108],"referencedDeclaration":5069,"src":"11980:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5092,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"12031:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":5091,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"12014:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5095,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"12051:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5096,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12054:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5098,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"12062:1:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:26","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5089,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"11998:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"11998:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5083,"id":5106,"nodeType":"Return","src":"11973:96:26"}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"11751:109:26","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5108,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:26","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"x","nameLocation":"11889:1:26","nodeType":"VariableDeclaration","scope":5108,"src":"11881:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"y","nameLocation":"11900:1:26","nodeType":"VariableDeclaration","scope":5108,"src":"11892:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"n","nameLocation":"11909:1:26","nodeType":"VariableDeclaration","scope":5108,"src":"11903:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5075,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:26","nodeType":"VariableDeclaration","scope":5108,"src":"11912:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":5078,"nodeType":"UserDefinedTypeName","pathNode":{"id":5077,"name":"Rounding","nameLocations":["11912:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"11912:8:26"},"referencedDeclaration":4467,"src":"11912:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:26"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5108,"src":"11954:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:26"},"scope":6076,"src":"11865:211:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5204,"nodeType":"Block","src":"12710:1849:26","statements":[{"id":5203,"nodeType":"UncheckedBlock","src":"12720:1833:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"12748:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5123,"nodeType":"IfStatement","src":"12744:20:26","trueBody":{"expression":{"hexValue":"30","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5117,"id":5122,"nodeType":"Return","src":"12756:8:26"}},{"assignments":[5125],"declarations":[{"constant":false,"id":5125,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:26","nodeType":"VariableDeclaration","scope":5203,"src":"13235:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5129,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"13255:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5127,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13259:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:26"},{"assignments":[5131],"declarations":[{"constant":false,"id":5131,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:26","nodeType":"VariableDeclaration","scope":5203,"src":"13274:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5133,"initialValue":{"id":5132,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"13288:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:26"},{"assignments":[5135],"declarations":[{"constant":false,"id":5135,"mutability":"mutable","name":"x","nameLocation":"13432:1:26","nodeType":"VariableDeclaration","scope":5203,"src":"13425:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5134,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5137,"initialValue":{"hexValue":"30","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:26"},{"assignments":[5139],"declarations":[{"constant":false,"id":5139,"mutability":"mutable","name":"y","nameLocation":"13458:1:26","nodeType":"VariableDeclaration","scope":5203,"src":"13451:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5138,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5141,"initialValue":{"hexValue":"31","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:26"},{"body":{"id":5178,"nodeType":"Block","src":"13501:882:26","statements":[{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:26","nodeType":"VariableDeclaration","scope":5178,"src":"13519:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"13538:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5148,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"13544:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:26"},{"expression":{"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5151,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"13573:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5152,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"13578:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5153,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5154,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"13678:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"13923:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"13929:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5157,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"13941:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"13572:395:26"},{"expression":{"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"13987:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5164,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"13990:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5165,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5166,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"14072:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14326:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"14330:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5171,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"14341:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5169,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:26","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5177,"nodeType":"ExpressionStatement","src":"13986:382:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"13485:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5179,"nodeType":"WhileStatement","src":"13478:905:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5180,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"14401:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5185,"nodeType":"IfStatement","src":"14397:22:26","trueBody":{"expression":{"hexValue":"30","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5117,"id":5184,"nodeType":"Return","src":"14411:8:26"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14470:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14477:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:26","subExpression":{"id":5193,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14490:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:26","typeDescriptions":{}}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5199,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14502:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:26","typeDescriptions":{}}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"14462:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5117,"id":5202,"nodeType":"Return","src":"14455:50:26"}]}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"12082:553:26","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5205,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:26","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"a","nameLocation":"12664:1:26","nodeType":"VariableDeclaration","scope":5205,"src":"12656:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"n","nameLocation":"12675:1:26","nodeType":"VariableDeclaration","scope":5205,"src":"12667:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:26"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5205,"src":"12701:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:26"},"scope":6076,"src":"12640:1919:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"15159:82:26","statements":[{"id":5224,"nodeType":"UncheckedBlock","src":"15169:66:26","statements":[{"expression":{"arguments":[{"id":5217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"15212:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5218,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"15215:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5221,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"15222:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5215,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"15200:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6076_$","typeString":"type(library Math)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:26","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5262,"src":"15200:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5214,"id":5223,"nodeType":"Return","src":"15193:31:26"}]}]},"documentation":{"id":5206,"nodeType":"StructuredDocumentation","src":"14565:514:26","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:26","nodeType":"FunctionDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"a","nameLocation":"15113:1:26","nodeType":"VariableDeclaration","scope":5226,"src":"15105:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5210,"mutability":"mutable","name":"p","nameLocation":"15124:1:26","nodeType":"VariableDeclaration","scope":5226,"src":"15116:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:26"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"15150:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5212,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:26"},"scope":6076,"src":"15084:157:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5261,"nodeType":"Block","src":"16011:174:26","statements":[{"assignments":[5239,5241],"declarations":[{"constant":false,"id":5239,"mutability":"mutable","name":"success","nameLocation":"16027:7:26","nodeType":"VariableDeclaration","scope":5261,"src":"16022:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5238,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5241,"mutability":"mutable","name":"result","nameLocation":"16044:6:26","nodeType":"VariableDeclaration","scope":5261,"src":"16036:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5247,"initialValue":{"arguments":[{"id":5243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"16064:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5244,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"16067:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5245,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"16070:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5286,5368],"referencedDeclaration":5286,"src":"16054:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:26"},{"condition":{"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:26","subExpression":{"id":5248,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"16087:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"16082:74:26","trueBody":{"id":5257,"nodeType":"Block","src":"16096:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":5253,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"16122:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4156,"src":"16122:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5250,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"16110:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"16110:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"16110:35:26"}]}},{"expression":{"id":5259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"16172:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5237,"id":5260,"nodeType":"Return","src":"16165:13:26"}]},"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"15247:678:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5262,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:26","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"b","nameLocation":"15954:1:26","nodeType":"VariableDeclaration","scope":5262,"src":"15946:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"e","nameLocation":"15965:1:26","nodeType":"VariableDeclaration","scope":5262,"src":"15957:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5233,"mutability":"mutable","name":"m","nameLocation":"15976:1:26","nodeType":"VariableDeclaration","scope":5262,"src":"15968:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:26"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5262,"src":"16002:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:26"},"scope":6076,"src":"15930:255:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"17039:1493:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"17053:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5283,"nodeType":"IfStatement","src":"17049:29:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5275,"id":5282,"nodeType":"Return","src":"17061:17:26"}},{"AST":{"nativeSrc":"17113:1413:26","nodeType":"YulBlock","src":"17113:1413:26","statements":[{"nativeSrc":"17127:22:26","nodeType":"YulVariableDeclaration","src":"17127:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:26","nodeType":"YulLiteral","src":"17144:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:26","nodeType":"YulIdentifier","src":"17138:5:26"},"nativeSrc":"17138:11:26","nodeType":"YulFunctionCall","src":"17138:11:26"},"variables":[{"name":"ptr","nativeSrc":"17131:3:26","nodeType":"YulTypedName","src":"17131:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:26","nodeType":"YulIdentifier","src":"18057:3:26"},{"kind":"number","nativeSrc":"18062:4:26","nodeType":"YulLiteral","src":"18062:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:26","nodeType":"YulIdentifier","src":"18050:6:26"},"nativeSrc":"18050:17:26","nodeType":"YulFunctionCall","src":"18050:17:26"},"nativeSrc":"18050:17:26","nodeType":"YulExpressionStatement","src":"18050:17:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:26","nodeType":"YulIdentifier","src":"18091:3:26"},{"kind":"number","nativeSrc":"18096:4:26","nodeType":"YulLiteral","src":"18096:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:26","nodeType":"YulIdentifier","src":"18087:3:26"},"nativeSrc":"18087:14:26","nodeType":"YulFunctionCall","src":"18087:14:26"},{"kind":"number","nativeSrc":"18103:4:26","nodeType":"YulLiteral","src":"18103:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:26","nodeType":"YulIdentifier","src":"18080:6:26"},"nativeSrc":"18080:28:26","nodeType":"YulFunctionCall","src":"18080:28:26"},"nativeSrc":"18080:28:26","nodeType":"YulExpressionStatement","src":"18080:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:26","nodeType":"YulIdentifier","src":"18132:3:26"},{"kind":"number","nativeSrc":"18137:4:26","nodeType":"YulLiteral","src":"18137:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:26","nodeType":"YulIdentifier","src":"18128:3:26"},"nativeSrc":"18128:14:26","nodeType":"YulFunctionCall","src":"18128:14:26"},{"kind":"number","nativeSrc":"18144:4:26","nodeType":"YulLiteral","src":"18144:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:26","nodeType":"YulIdentifier","src":"18121:6:26"},"nativeSrc":"18121:28:26","nodeType":"YulFunctionCall","src":"18121:28:26"},"nativeSrc":"18121:28:26","nodeType":"YulExpressionStatement","src":"18121:28:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:26","nodeType":"YulIdentifier","src":"18173:3:26"},{"kind":"number","nativeSrc":"18178:4:26","nodeType":"YulLiteral","src":"18178:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:26","nodeType":"YulIdentifier","src":"18169:3:26"},"nativeSrc":"18169:14:26","nodeType":"YulFunctionCall","src":"18169:14:26"},{"name":"b","nativeSrc":"18185:1:26","nodeType":"YulIdentifier","src":"18185:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:26","nodeType":"YulIdentifier","src":"18162:6:26"},"nativeSrc":"18162:25:26","nodeType":"YulFunctionCall","src":"18162:25:26"},"nativeSrc":"18162:25:26","nodeType":"YulExpressionStatement","src":"18162:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:26","nodeType":"YulIdentifier","src":"18211:3:26"},{"kind":"number","nativeSrc":"18216:4:26","nodeType":"YulLiteral","src":"18216:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:26","nodeType":"YulIdentifier","src":"18207:3:26"},"nativeSrc":"18207:14:26","nodeType":"YulFunctionCall","src":"18207:14:26"},{"name":"e","nativeSrc":"18223:1:26","nodeType":"YulIdentifier","src":"18223:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:26","nodeType":"YulIdentifier","src":"18200:6:26"},"nativeSrc":"18200:25:26","nodeType":"YulFunctionCall","src":"18200:25:26"},"nativeSrc":"18200:25:26","nodeType":"YulExpressionStatement","src":"18200:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:26","nodeType":"YulIdentifier","src":"18249:3:26"},{"kind":"number","nativeSrc":"18254:4:26","nodeType":"YulLiteral","src":"18254:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:26","nodeType":"YulIdentifier","src":"18245:3:26"},"nativeSrc":"18245:14:26","nodeType":"YulFunctionCall","src":"18245:14:26"},{"name":"m","nativeSrc":"18261:1:26","nodeType":"YulIdentifier","src":"18261:1:26"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:26","nodeType":"YulIdentifier","src":"18238:6:26"},"nativeSrc":"18238:25:26","nodeType":"YulFunctionCall","src":"18238:25:26"},"nativeSrc":"18238:25:26","nodeType":"YulExpressionStatement","src":"18238:25:26"},{"nativeSrc":"18425:57:26","nodeType":"YulAssignment","src":"18425:57:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:26","nodeType":"YulIdentifier","src":"18447:3:26"},"nativeSrc":"18447:5:26","nodeType":"YulFunctionCall","src":"18447:5:26"},{"kind":"number","nativeSrc":"18454:4:26","nodeType":"YulLiteral","src":"18454:4:26","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:26","nodeType":"YulIdentifier","src":"18460:3:26"},{"kind":"number","nativeSrc":"18465:4:26","nodeType":"YulLiteral","src":"18465:4:26","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:26","nodeType":"YulLiteral","src":"18471:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:26","nodeType":"YulLiteral","src":"18477:4:26","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:26","nodeType":"YulIdentifier","src":"18436:10:26"},"nativeSrc":"18436:46:26","nodeType":"YulFunctionCall","src":"18436:46:26"},"variableNames":[{"name":"success","nativeSrc":"18425:7:26","nodeType":"YulIdentifier","src":"18425:7:26"}]},{"nativeSrc":"18495:21:26","nodeType":"YulAssignment","src":"18495:21:26","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:26","nodeType":"YulLiteral","src":"18511:4:26","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:26","nodeType":"YulIdentifier","src":"18505:5:26"},"nativeSrc":"18505:11:26","nodeType":"YulFunctionCall","src":"18505:11:26"},"variableNames":[{"name":"result","nativeSrc":"18495:6:26","nodeType":"YulIdentifier","src":"18495:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5265,"isOffset":false,"isSlot":false,"src":"18185:1:26","valueSize":1},{"declaration":5267,"isOffset":false,"isSlot":false,"src":"18223:1:26","valueSize":1},{"declaration":5269,"isOffset":false,"isSlot":false,"src":"18261:1:26","valueSize":1},{"declaration":5274,"isOffset":false,"isSlot":false,"src":"18495:6:26","valueSize":1},{"declaration":5272,"isOffset":false,"isSlot":false,"src":"18425:7:26","valueSize":1}],"flags":["memory-safe"],"id":5284,"nodeType":"InlineAssembly","src":"17088:1438:26"}]},"documentation":{"id":5263,"nodeType":"StructuredDocumentation","src":"16191:738:26","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:26","nodeType":"FunctionDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"b","nameLocation":"16961:1:26","nodeType":"VariableDeclaration","scope":5286,"src":"16953:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5267,"mutability":"mutable","name":"e","nameLocation":"16972:1:26","nodeType":"VariableDeclaration","scope":5286,"src":"16964:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5269,"mutability":"mutable","name":"m","nameLocation":"16983:1:26","nodeType":"VariableDeclaration","scope":5286,"src":"16975:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:26"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5272,"mutability":"mutable","name":"success","nameLocation":"17014:7:26","nodeType":"VariableDeclaration","scope":5286,"src":"17009:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5271,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"result","nameLocation":"17031:6:26","nodeType":"VariableDeclaration","scope":5286,"src":"17023:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:26"},"scope":6076,"src":"16934:1598:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"18729:179:26","statements":[{"assignments":[5299,5301],"declarations":[{"constant":false,"id":5299,"mutability":"mutable","name":"success","nameLocation":"18745:7:26","nodeType":"VariableDeclaration","scope":5321,"src":"18740:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5298,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"result","nameLocation":"18767:6:26","nodeType":"VariableDeclaration","scope":5321,"src":"18754:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5300,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5307,"initialValue":{"arguments":[{"id":5303,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"18787:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5304,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"18790:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5305,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"18793:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5302,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5286,5368],"referencedDeclaration":5368,"src":"18777:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:26"},{"condition":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:26","subExpression":{"id":5308,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"18810:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5318,"nodeType":"IfStatement","src":"18805:74:26","trueBody":{"id":5317,"nodeType":"Block","src":"18819:60:26","statements":[{"expression":{"arguments":[{"expression":{"id":5313,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"18845:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:26","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4156,"src":"18845:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5310,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"18833:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4189_$","typeString":"type(library Panic)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:26","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"18833:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5316,"nodeType":"ExpressionStatement","src":"18833:35:26"}]}},{"expression":{"id":5319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"18895:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5297,"id":5320,"nodeType":"Return","src":"18888:13:26"}]},"documentation":{"id":5287,"nodeType":"StructuredDocumentation","src":"18538:85:26","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:26","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"b","nameLocation":"18657:1:26","nodeType":"VariableDeclaration","scope":5322,"src":"18644:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5288,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5291,"mutability":"mutable","name":"e","nameLocation":"18673:1:26","nodeType":"VariableDeclaration","scope":5322,"src":"18660:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5290,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"m","nameLocation":"18689:1:26","nodeType":"VariableDeclaration","scope":5322,"src":"18676:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5292,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:26"},"returnParameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"18715:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5295,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:26"},"scope":6076,"src":"18628:280:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5367,"nodeType":"Block","src":"19162:771:26","statements":[{"condition":{"arguments":[{"id":5337,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19187:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5336,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"19176:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"19172:47:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5340,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5335,"id":5345,"nodeType":"Return","src":"19191:28:26"}},{"assignments":[5348],"declarations":[{"constant":false,"id":5348,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:26","nodeType":"VariableDeclaration","scope":5367,"src":"19230:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5347,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5351,"initialValue":{"expression":{"id":5349,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19245:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:26","memberName":"length","nodeType":"MemberAccess","src":"19245:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:26"},{"expression":{"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"19335:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"19361:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:26","memberName":"length","nodeType":"MemberAccess","src":"19361:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5357,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"19371:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:26","memberName":"length","nodeType":"MemberAccess","src":"19371:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5359,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"19381:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"19387:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5361,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"19390:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5362,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19393:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5365,"nodeType":"ExpressionStatement","src":"19335:60:26"},{"AST":{"nativeSrc":"19431:496:26","nodeType":"YulBlock","src":"19431:496:26","statements":[{"nativeSrc":"19445:32:26","nodeType":"YulVariableDeclaration","src":"19445:32:26","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:26","nodeType":"YulIdentifier","src":"19464:6:26"},{"kind":"number","nativeSrc":"19472:4:26","nodeType":"YulLiteral","src":"19472:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:26","nodeType":"YulIdentifier","src":"19460:3:26"},"nativeSrc":"19460:17:26","nodeType":"YulFunctionCall","src":"19460:17:26"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:26","nodeType":"YulTypedName","src":"19449:7:26","type":""}]},{"nativeSrc":"19567:73:26","nodeType":"YulAssignment","src":"19567:73:26","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:26","nodeType":"YulIdentifier","src":"19589:3:26"},"nativeSrc":"19589:5:26","nodeType":"YulFunctionCall","src":"19589:5:26"},{"kind":"number","nativeSrc":"19596:4:26","nodeType":"YulLiteral","src":"19596:4:26","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:26","nodeType":"YulIdentifier","src":"19602:7:26"},{"arguments":[{"name":"result","nativeSrc":"19617:6:26","nodeType":"YulIdentifier","src":"19617:6:26"}],"functionName":{"name":"mload","nativeSrc":"19611:5:26","nodeType":"YulIdentifier","src":"19611:5:26"},"nativeSrc":"19611:13:26","nodeType":"YulFunctionCall","src":"19611:13:26"},{"name":"dataPtr","nativeSrc":"19626:7:26","nodeType":"YulIdentifier","src":"19626:7:26"},{"name":"mLen","nativeSrc":"19635:4:26","nodeType":"YulIdentifier","src":"19635:4:26"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:26","nodeType":"YulIdentifier","src":"19578:10:26"},"nativeSrc":"19578:62:26","nodeType":"YulFunctionCall","src":"19578:62:26"},"variableNames":[{"name":"success","nativeSrc":"19567:7:26","nodeType":"YulIdentifier","src":"19567:7:26"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:26","nodeType":"YulIdentifier","src":"19796:6:26"},{"name":"mLen","nativeSrc":"19804:4:26","nodeType":"YulIdentifier","src":"19804:4:26"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:26","nodeType":"YulIdentifier","src":"19789:6:26"},"nativeSrc":"19789:20:26","nodeType":"YulFunctionCall","src":"19789:20:26"},"nativeSrc":"19789:20:26","nodeType":"YulExpressionStatement","src":"19789:20:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:26","nodeType":"YulLiteral","src":"19892:4:26","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:26","nodeType":"YulIdentifier","src":"19902:7:26"},{"name":"mLen","nativeSrc":"19911:4:26","nodeType":"YulIdentifier","src":"19911:4:26"}],"functionName":{"name":"add","nativeSrc":"19898:3:26","nodeType":"YulIdentifier","src":"19898:3:26"},"nativeSrc":"19898:18:26","nodeType":"YulFunctionCall","src":"19898:18:26"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:26","nodeType":"YulIdentifier","src":"19885:6:26"},"nativeSrc":"19885:32:26","nodeType":"YulFunctionCall","src":"19885:32:26"},"nativeSrc":"19885:32:26","nodeType":"YulExpressionStatement","src":"19885:32:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":5348,"isOffset":false,"isSlot":false,"src":"19635:4:26","valueSize":1},{"declaration":5348,"isOffset":false,"isSlot":false,"src":"19804:4:26","valueSize":1},{"declaration":5348,"isOffset":false,"isSlot":false,"src":"19911:4:26","valueSize":1},{"declaration":5334,"isOffset":false,"isSlot":false,"src":"19464:6:26","valueSize":1},{"declaration":5334,"isOffset":false,"isSlot":false,"src":"19617:6:26","valueSize":1},{"declaration":5334,"isOffset":false,"isSlot":false,"src":"19796:6:26","valueSize":1},{"declaration":5332,"isOffset":false,"isSlot":false,"src":"19567:7:26","valueSize":1}],"flags":["memory-safe"],"id":5366,"nodeType":"InlineAssembly","src":"19406:521:26"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"18914:88:26","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5368,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:26","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"b","nameLocation":"19048:1:26","nodeType":"VariableDeclaration","scope":5368,"src":"19035:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5324,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"e","nameLocation":"19072:1:26","nodeType":"VariableDeclaration","scope":5368,"src":"19059:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5326,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"m","nameLocation":"19096:1:26","nodeType":"VariableDeclaration","scope":5368,"src":"19083:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5328,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:26"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"success","nameLocation":"19132:7:26","nodeType":"VariableDeclaration","scope":5368,"src":"19127:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5331,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5334,"mutability":"mutable","name":"result","nameLocation":"19154:6:26","nodeType":"VariableDeclaration","scope":5368,"src":"19141:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5333,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:26"},"scope":6076,"src":"19007:926:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"20088:176:26","statements":[{"body":{"id":5396,"nodeType":"Block","src":"20145:92:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5387,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"20163:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5389,"indexExpression":{"id":5388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"20173:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5395,"nodeType":"IfStatement","src":"20159:68:26","trueBody":{"id":5394,"nodeType":"Block","src":"20182:45:26","statements":[{"expression":{"hexValue":"66616c7365","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5375,"id":5393,"nodeType":"Return","src":"20200:12:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"20118:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5381,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"20122:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:26","memberName":"length","nodeType":"MemberAccess","src":"20122:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5397,"initializationExpression":{"assignments":[5377],"declarations":[{"constant":false,"id":5377,"mutability":"mutable","name":"i","nameLocation":"20111:1:26","nodeType":"VariableDeclaration","scope":5397,"src":"20103:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5379,"initialValue":{"hexValue":"30","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:26","subExpression":{"id":5384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"20142:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5386,"nodeType":"ExpressionStatement","src":"20140:3:26"},"nodeType":"ForStatement","src":"20098:139:26"},{"expression":{"hexValue":"74727565","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5375,"id":5399,"nodeType":"Return","src":"20246:11:26"}]},"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"19939:72:26","text":" @dev Returns whether the provided byte array is zero."},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:26","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:26","nodeType":"VariableDeclaration","scope":5401,"src":"20036:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5370,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:26"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"20082:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5373,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:26"},"scope":6076,"src":"20016:248:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5619,"nodeType":"Block","src":"20624:5124:26","statements":[{"id":5618,"nodeType":"UncheckedBlock","src":"20634:5108:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"20728:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5415,"nodeType":"IfStatement","src":"20724:53:26","trueBody":{"id":5414,"nodeType":"Block","src":"20736:41:26","statements":[{"expression":{"id":5412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"20761:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5408,"id":5413,"nodeType":"Return","src":"20754:8:26"}]}},{"assignments":[5417],"declarations":[{"constant":false,"id":5417,"mutability":"mutable","name":"aa","nameLocation":"21712:2:26","nodeType":"VariableDeclaration","scope":5618,"src":"21704:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"id":5418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"21717:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:26"},{"assignments":[5421],"declarations":[{"constant":false,"id":5421,"mutability":"mutable","name":"xn","nameLocation":"21740:2:26","nodeType":"VariableDeclaration","scope":5618,"src":"21732:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5423,"initialValue":{"hexValue":"31","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"21765:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"IfStatement","src":"21761:92:26","trueBody":{"id":5438,"nodeType":"Block","src":"21783:70:26","statements":[{"expression":{"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5430,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"21801:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5433,"nodeType":"ExpressionStatement","src":"21801:10:26"},{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5434,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"21829:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5437,"nodeType":"ExpressionStatement","src":"21829:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5440,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"21870:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5455,"nodeType":"IfStatement","src":"21866:90:26","trueBody":{"id":5454,"nodeType":"Block","src":"21887:69:26","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5446,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"21905:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5449,"nodeType":"ExpressionStatement","src":"21905:9:26"},{"expression":{"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5450,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"21932:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5453,"nodeType":"ExpressionStatement","src":"21932:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"21973:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5471,"nodeType":"IfStatement","src":"21969:90:26","trueBody":{"id":5470,"nodeType":"Block","src":"21990:69:26","statements":[{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5462,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22008:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5465,"nodeType":"ExpressionStatement","src":"22008:9:26"},{"expression":{"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5466,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22035:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5469,"nodeType":"ExpressionStatement","src":"22035:9:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22076:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:26","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"22072:89:26","trueBody":{"id":5486,"nodeType":"Block","src":"22093:68:26","statements":[{"expression":{"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5478,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22111:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5481,"nodeType":"ExpressionStatement","src":"22111:9:26"},{"expression":{"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22138:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5485,"nodeType":"ExpressionStatement","src":"22138:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22178:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5503,"nodeType":"IfStatement","src":"22174:87:26","trueBody":{"id":5502,"nodeType":"Block","src":"22194:67:26","statements":[{"expression":{"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5494,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22212:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5497,"nodeType":"ExpressionStatement","src":"22212:8:26"},{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5498,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22238:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5501,"nodeType":"ExpressionStatement","src":"22238:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22278:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5519,"nodeType":"IfStatement","src":"22274:87:26","trueBody":{"id":5518,"nodeType":"Block","src":"22294:67:26","statements":[{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5510,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22312:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"22312:8:26"},{"expression":{"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22338:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5517,"nodeType":"ExpressionStatement","src":"22338:8:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"22378:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"22374:61:26","trueBody":{"id":5530,"nodeType":"Block","src":"22394:41:26","statements":[{"expression":{"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22412:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5529,"nodeType":"ExpressionStatement","src":"22412:8:26"}]}},{"expression":{"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22855:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"22865:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5540,"nodeType":"ExpressionStatement","src":"22855:18:26"},{"expression":{"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5541,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24760:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24766:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"24771:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24775:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5551,"nodeType":"ExpressionStatement","src":"24760:23:26"},{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5552,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24869:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24875:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"24880:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5555,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24884:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"24869:23:26"},{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24980:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5564,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24986:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"24991:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5566,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"24995:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"24980:23:26"},{"expression":{"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25089:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25095:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"25100:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25104:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5584,"nodeType":"ExpressionStatement","src":"25089:23:26"},{"expression":{"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5585,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25199:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25205:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"25210:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5588,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25214:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5595,"nodeType":"ExpressionStatement","src":"25199:23:26"},{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5596,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25309:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25315:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"25320:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5599,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25324:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5606,"nodeType":"ExpressionStatement","src":"25309:23:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25698:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25719:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"25724:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5612,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25728:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5608,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"25703:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"25703:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5408,"id":5617,"nodeType":"Return","src":"25691:40:26"}]}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"20270:292:26","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5620,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:26","nodeType":"FunctionDefinition","parameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"a","nameLocation":"20589:1:26","nodeType":"VariableDeclaration","scope":5620,"src":"20581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:26"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5620,"src":"20615:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5406,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:26"},"scope":6076,"src":"20567:5181:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"25921:171:26","statements":[{"id":5652,"nodeType":"UncheckedBlock","src":"25931:155:26","statements":[{"assignments":[5632],"declarations":[{"constant":false,"id":5632,"mutability":"mutable","name":"result","nameLocation":"25963:6:26","nodeType":"VariableDeclaration","scope":5652,"src":"25955:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5636,"initialValue":{"arguments":[{"id":5634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"25977:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5633,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5620,5654],"referencedDeclaration":5620,"src":"25972:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"26000:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5641,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"26042:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":5640,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"26025:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"26055:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"26064:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"26073:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26009:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26009:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5630,"id":5651,"nodeType":"Return","src":"25993:82:26"}]}]},"documentation":{"id":5621,"nodeType":"StructuredDocumentation","src":"25754:86:26","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:26","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"a","nameLocation":"25867:1:26","nodeType":"VariableDeclaration","scope":5654,"src":"25859:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:26","nodeType":"VariableDeclaration","scope":5654,"src":"25870:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":5625,"nodeType":"UserDefinedTypeName","pathNode":{"id":5624,"name":"Rounding","nameLocations":["25870:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"25870:8:26"},"referencedDeclaration":4467,"src":"25870:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:26"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5654,"src":"25912:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:26"},"scope":6076,"src":"25845:247:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5744,"nodeType":"Block","src":"26281:2334:26","statements":[{"expression":{"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26363:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"26383:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26367:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26367:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5672,"nodeType":"ExpressionStatement","src":"26363:64:26"},{"expression":{"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5673,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26503:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"26525:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5677,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26530:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5674,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26508:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26508:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5686,"nodeType":"ExpressionStatement","src":"26503:56:26"},{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5687,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26634:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"26656:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5691,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26661:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26639:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26639:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5700,"nodeType":"ExpressionStatement","src":"26634:48:26"},{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26757:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"26779:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5705,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26784:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5702,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26762:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26762:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5714,"nodeType":"ExpressionStatement","src":"26757:44:26"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5715,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26874:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"26896:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5719,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26901:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26879:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26879:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"26874:42:26"},{"expression":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"26988:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"27010:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5733,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"27015:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5730,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26993:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"26993:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5742,"nodeType":"ExpressionStatement","src":"26988:41:26"},{"AST":{"nativeSrc":"28490:119:26","nodeType":"YulBlock","src":"28490:119:26","statements":[{"nativeSrc":"28504:95:26","nodeType":"YulAssignment","src":"28504:95:26","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:26","nodeType":"YulIdentifier","src":"28512:1:26"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:26","nodeType":"YulIdentifier","src":"28524:1:26"},{"name":"x","nativeSrc":"28527:1:26","nodeType":"YulIdentifier","src":"28527:1:26"}],"functionName":{"name":"shr","nativeSrc":"28520:3:26","nodeType":"YulIdentifier","src":"28520:3:26"},"nativeSrc":"28520:9:26","nodeType":"YulFunctionCall","src":"28520:9:26"},{"kind":"number","nativeSrc":"28531:66:26","nodeType":"YulLiteral","src":"28531:66:26","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:26","nodeType":"YulIdentifier","src":"28515:4:26"},"nativeSrc":"28515:83:26","nodeType":"YulFunctionCall","src":"28515:83:26"}],"functionName":{"name":"or","nativeSrc":"28509:2:26","nodeType":"YulIdentifier","src":"28509:2:26"},"nativeSrc":"28509:90:26","nodeType":"YulFunctionCall","src":"28509:90:26"},"variableNames":[{"name":"r","nativeSrc":"28504:1:26","nodeType":"YulIdentifier","src":"28504:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5660,"isOffset":false,"isSlot":false,"src":"28504:1:26","valueSize":1},{"declaration":5660,"isOffset":false,"isSlot":false,"src":"28512:1:26","valueSize":1},{"declaration":5660,"isOffset":false,"isSlot":false,"src":"28524:1:26","valueSize":1},{"declaration":5657,"isOffset":false,"isSlot":false,"src":"28527:1:26","valueSize":1}],"flags":["memory-safe"],"id":5743,"nodeType":"InlineAssembly","src":"28465:144:26"}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"26098:119:26","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5745,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:26","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"x","nameLocation":"26244:1:26","nodeType":"VariableDeclaration","scope":5745,"src":"26236:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:26"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"r","nameLocation":"26278:1:26","nodeType":"VariableDeclaration","scope":5745,"src":"26270:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:26"},"scope":6076,"src":"26222:2393:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"28848:175:26","statements":[{"id":5777,"nodeType":"UncheckedBlock","src":"28858:159:26","statements":[{"assignments":[5757],"declarations":[{"constant":false,"id":5757,"mutability":"mutable","name":"result","nameLocation":"28890:6:26","nodeType":"VariableDeclaration","scope":5777,"src":"28882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5761,"initialValue":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"28904:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5745,5779],"referencedDeclaration":5745,"src":"28899:4:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"28931:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5766,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"28973:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":5765,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"28956:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"28991:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29000:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"28940:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"28940:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5755,"id":5776,"nodeType":"Return","src":"28924:82:26"}]}]},"documentation":{"id":5746,"nodeType":"StructuredDocumentation","src":"28621:142:26","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:26","nodeType":"FunctionDefinition","parameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"value","nameLocation":"28790:5:26","nodeType":"VariableDeclaration","scope":5779,"src":"28782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:26","nodeType":"VariableDeclaration","scope":5779,"src":"28797:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":5750,"nodeType":"UserDefinedTypeName","pathNode":{"id":5749,"name":"Rounding","nameLocations":["28797:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"28797:8:26"},"referencedDeclaration":4467,"src":"28797:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:26"},"returnParameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"28839:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:26"},"scope":6076,"src":"28768:255:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5907,"nodeType":"Block","src":"29216:854:26","statements":[{"assignments":[5788],"declarations":[{"constant":false,"id":5788,"mutability":"mutable","name":"result","nameLocation":"29234:6:26","nodeType":"VariableDeclaration","scope":5907,"src":"29226:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5790,"initialValue":{"hexValue":"30","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:26"},{"id":5904,"nodeType":"UncheckedBlock","src":"29254:787:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29282:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5807,"nodeType":"IfStatement","src":"29278:103:26","trueBody":{"id":5806,"nodeType":"Block","src":"29301:80:26","statements":[{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29319:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"29319:17:26"},{"expression":{"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29354:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5805,"nodeType":"ExpressionStatement","src":"29354:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29398:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5824,"nodeType":"IfStatement","src":"29394:103:26","trueBody":{"id":5823,"nodeType":"Block","src":"29417:80:26","statements":[{"expression":{"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29435:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5818,"nodeType":"ExpressionStatement","src":"29435:17:26"},{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29470:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5822,"nodeType":"ExpressionStatement","src":"29470:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29514:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"29510:103:26","trueBody":{"id":5840,"nodeType":"Block","src":"29533:80:26","statements":[{"expression":{"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29551:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:26","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5835,"nodeType":"ExpressionStatement","src":"29551:17:26"},{"expression":{"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29586:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5839,"nodeType":"ExpressionStatement","src":"29586:12:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29630:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"29626:100:26","trueBody":{"id":5857,"nodeType":"Block","src":"29648:78:26","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29666:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"29666:16:26"},{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29700:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"ExpressionStatement","src":"29700:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"29739:100:26","trueBody":{"id":5874,"nodeType":"Block","src":"29761:78:26","statements":[{"expression":{"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29779:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5869,"nodeType":"ExpressionStatement","src":"29779:16:26"},{"expression":{"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29813:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5873,"nodeType":"ExpressionStatement","src":"29813:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29856:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"29852:100:26","trueBody":{"id":5891,"nodeType":"Block","src":"29874:78:26","statements":[{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29892:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5886,"nodeType":"ExpressionStatement","src":"29892:16:26"},{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"29926:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5890,"nodeType":"ExpressionStatement","src":"29926:11:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"29969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5903,"nodeType":"IfStatement","src":"29965:66:26","trueBody":{"id":5902,"nodeType":"Block","src":"29987:44:26","statements":[{"expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"30005:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5901,"nodeType":"ExpressionStatement","src":"30005:11:26"}]}}]},{"expression":{"id":5905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"30057:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5786,"id":5906,"nodeType":"Return","src":"30050:13:26"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"29029:120:26","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5908,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:26","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"29177:5:26","nodeType":"VariableDeclaration","scope":5908,"src":"29169:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:26"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5908,"src":"29207:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:26"},"scope":6076,"src":"29154:916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5941,"nodeType":"Block","src":"30305:177:26","statements":[{"id":5940,"nodeType":"UncheckedBlock","src":"30315:161:26","statements":[{"assignments":[5920],"declarations":[{"constant":false,"id":5920,"mutability":"mutable","name":"result","nameLocation":"30347:6:26","nodeType":"VariableDeclaration","scope":5940,"src":"30339:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5924,"initialValue":{"arguments":[{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5908,5942],"referencedDeclaration":5908,"src":"30356:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"30389:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5929,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"30431:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":5928,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"30414:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"30450:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"30459:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5926,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"30398:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"30398:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5918,"id":5939,"nodeType":"Return","src":"30382:83:26"}]}]},"documentation":{"id":5909,"nodeType":"StructuredDocumentation","src":"30076:143:26","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5942,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:26","nodeType":"FunctionDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"value","nameLocation":"30247:5:26","nodeType":"VariableDeclaration","scope":5942,"src":"30239:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5914,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:26","nodeType":"VariableDeclaration","scope":5942,"src":"30254:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":5913,"nodeType":"UserDefinedTypeName","pathNode":{"id":5912,"name":"Rounding","nameLocations":["30254:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"30254:8:26"},"referencedDeclaration":4467,"src":"30254:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:26"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5942,"src":"30296:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:26"},"scope":6076,"src":"30224:258:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6018,"nodeType":"Block","src":"30800:675:26","statements":[{"expression":{"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5950,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"30882:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"30902:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:26","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5951,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"30886:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"30886:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5960,"nodeType":"ExpressionStatement","src":"30882:64:26"},{"expression":{"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5961,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"31044:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5965,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31049:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:26","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5962,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"31027:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"31027:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5974,"nodeType":"ExpressionStatement","src":"31022:56:26"},{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5975,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31153:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5978,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"31175:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5979,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31180:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:26","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5976,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"31158:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"31158:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5988,"nodeType":"ExpressionStatement","src":"31153:48:26"},{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5989,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31276:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"31298:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5993,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31303:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:26","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"31281:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"31281:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"31276:44:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31426:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"31453:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6010,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"31458:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6007,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"31436:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"31436:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5949,"id":6017,"nodeType":"Return","src":"31418:50:26"}]},"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"30488:246:26","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6019,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:26","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"x","nameLocation":"30763:1:26","nodeType":"VariableDeclaration","scope":6019,"src":"30755:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:26"},"returnParameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"r","nameLocation":"30797:1:26","nodeType":"VariableDeclaration","scope":6019,"src":"30789:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:26"},"scope":6076,"src":"30739:736:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6055,"nodeType":"Block","src":"31712:184:26","statements":[{"id":6054,"nodeType":"UncheckedBlock","src":"31722:168:26","statements":[{"assignments":[6031],"declarations":[{"constant":false,"id":6031,"mutability":"mutable","name":"result","nameLocation":"31754:6:26","nodeType":"VariableDeclaration","scope":6054,"src":"31746:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6035,"initialValue":{"arguments":[{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"31770:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6032,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6019,6056],"referencedDeclaration":6019,"src":"31763:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"31797:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6040,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"31839:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":6039,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"31822:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4467_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"31873:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"31806:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7841_$","typeString":"type(library SafeCast)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7840,"src":"31806:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6029,"id":6053,"nodeType":"Return","src":"31790:89:26"}]}]},"documentation":{"id":6020,"nodeType":"StructuredDocumentation","src":"31481:144:26","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6056,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:26","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"value","nameLocation":"31654:5:26","nodeType":"VariableDeclaration","scope":6056,"src":"31646:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6021,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:26","nodeType":"VariableDeclaration","scope":6056,"src":"31661:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":6024,"nodeType":"UserDefinedTypeName","pathNode":{"id":6023,"name":"Rounding","nameLocations":["31661:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"31661:8:26"},"referencedDeclaration":4467,"src":"31661:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:26"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6056,"src":"31703:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:26"},"scope":6076,"src":"31630:266:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6074,"nodeType":"Block","src":"32094:48:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6067,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"32117:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6065,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:26","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6064,"id":6073,"nodeType":"Return","src":"32104:31:26"}]},"documentation":{"id":6057,"nodeType":"StructuredDocumentation","src":"31902:113:26","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6075,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:26","nodeType":"FunctionDefinition","parameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:26","nodeType":"VariableDeclaration","scope":6075,"src":"32046:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"},"typeName":{"id":6059,"nodeType":"UserDefinedTypeName","pathNode":{"id":6058,"name":"Rounding","nameLocations":["32046:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4467,"src":"32046:8:26"},"referencedDeclaration":4467,"src":"32046:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4467","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:26"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6075,"src":"32088:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6062,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:26"},"scope":6076,"src":"32020:122:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6077,"src":"281:31863:26","usedErrors":[],"usedEvents":[]}],"src":"103:32042:26"},"id":26},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7841]},"id":7842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6078,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"218:550:27","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7841,"linearizedBaseContracts":[7841],"name":"SafeCast","nameLocation":"777:8:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"792:68:27","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6086,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:27","nodeType":"ErrorDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"bits","nameLocation":"908:4:27","nodeType":"VariableDeclaration","scope":6086,"src":"902:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6081,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6084,"mutability":"mutable","name":"value","nameLocation":"922:5:27","nodeType":"VariableDeclaration","scope":6086,"src":"914:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:27"},"src":"865:64:27"},{"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"935:75:27","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6091,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:27","nodeType":"ErrorDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"value","nameLocation":"1056:5:27","nodeType":"VariableDeclaration","scope":6091,"src":"1049:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:27"},"src":"1015:48:27"},{"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"1069:67:27","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6098,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:27","nodeType":"ErrorDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"bits","nameLocation":"1183:4:27","nodeType":"VariableDeclaration","scope":6098,"src":"1177:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6093,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6096,"mutability":"mutable","name":"value","nameLocation":"1196:5:27","nodeType":"VariableDeclaration","scope":6098,"src":"1189:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6095,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:27"},"src":"1141:62:27"},{"documentation":{"id":6099,"nodeType":"StructuredDocumentation","src":"1209:75:27","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6103,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:27","nodeType":"ErrorDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"value","nameLocation":"1331:5:27","nodeType":"VariableDeclaration","scope":6103,"src":"1323:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:27"},"src":"1289:49:27"},{"body":{"id":6130,"nodeType":"Block","src":"1695:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"1709:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6113,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:27","memberName":"max","nodeType":"MemberAccess","src":"1717:17:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6124,"nodeType":"IfStatement","src":"1705:105:27","trueBody":{"id":6123,"nodeType":"Block","src":"1736:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"1793:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"1757:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6122,"nodeType":"RevertStatement","src":"1750:49:27"}]}},{"expression":{"arguments":[{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"1834:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6125,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:27","typeDescriptions":{}}},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6110,"id":6129,"nodeType":"Return","src":"1819:21:27"}]},"documentation":{"id":6104,"nodeType":"StructuredDocumentation","src":"1344:280:27","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:27","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"value","nameLocation":"1656:5:27","nodeType":"VariableDeclaration","scope":6131,"src":"1648:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:27"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6131,"src":"1686:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6108,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:27","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:27"},"scope":7841,"src":"1629:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"2204:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"2218:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6141,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:27","memberName":"max","nodeType":"MemberAccess","src":"2226:17:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6152,"nodeType":"IfStatement","src":"2214:105:27","trueBody":{"id":6151,"nodeType":"Block","src":"2245:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"2302:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"2266:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6150,"nodeType":"RevertStatement","src":"2259:49:27"}]}},{"expression":{"arguments":[{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"2343:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6153,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:27","typeDescriptions":{}}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6138,"id":6157,"nodeType":"Return","src":"2328:21:27"}]},"documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"1853:280:27","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:27","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"value","nameLocation":"2165:5:27","nodeType":"VariableDeclaration","scope":6159,"src":"2157:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:27"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"2195:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6136,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:27","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:27"},"scope":7841,"src":"2138:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6186,"nodeType":"Block","src":"2713:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"2727:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6169,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:27","memberName":"max","nodeType":"MemberAccess","src":"2735:17:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"2723:105:27","trueBody":{"id":6179,"nodeType":"Block","src":"2754:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"2811:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"2775:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6178,"nodeType":"RevertStatement","src":"2768:49:27"}]}},{"expression":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"2852:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6181,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:27","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6166,"id":6185,"nodeType":"Return","src":"2837:21:27"}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"2362:280:27","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:27","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"2674:5:27","nodeType":"VariableDeclaration","scope":6187,"src":"2666:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:27"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6187,"src":"2704:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6164,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:27","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:27"},"scope":7841,"src":"2647:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"3222:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"3236:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6197,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:27","memberName":"max","nodeType":"MemberAccess","src":"3244:17:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6208,"nodeType":"IfStatement","src":"3232:105:27","trueBody":{"id":6207,"nodeType":"Block","src":"3263:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"3320:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"3284:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6206,"nodeType":"RevertStatement","src":"3277:49:27"}]}},{"expression":{"arguments":[{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"3361:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6209,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:27","typeDescriptions":{}}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6194,"id":6213,"nodeType":"Return","src":"3346:21:27"}]},"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"2871:280:27","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:27","nodeType":"FunctionDefinition","parameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"value","nameLocation":"3183:5:27","nodeType":"VariableDeclaration","scope":6215,"src":"3175:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:27"},"returnParameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6215,"src":"3213:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6192,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:27"},"scope":7841,"src":"3156:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6242,"nodeType":"Block","src":"3731:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"3745:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6225,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:27","memberName":"max","nodeType":"MemberAccess","src":"3753:17:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6236,"nodeType":"IfStatement","src":"3741:105:27","trueBody":{"id":6235,"nodeType":"Block","src":"3772:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"3829:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"3793:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6234,"nodeType":"RevertStatement","src":"3786:49:27"}]}},{"expression":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"3870:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6237,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:27","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6222,"id":6241,"nodeType":"Return","src":"3855:21:27"}]},"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"3380:280:27","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:27","nodeType":"FunctionDefinition","parameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"value","nameLocation":"3692:5:27","nodeType":"VariableDeclaration","scope":6243,"src":"3684:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:27"},"returnParameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6243,"src":"3722:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6220,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:27","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:27"},"scope":7841,"src":"3665:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"4240:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4254:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6253,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:27","memberName":"max","nodeType":"MemberAccess","src":"4262:17:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6264,"nodeType":"IfStatement","src":"4250:105:27","trueBody":{"id":6263,"nodeType":"Block","src":"4281:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"4302:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6262,"nodeType":"RevertStatement","src":"4295:49:27"}]}},{"expression":{"arguments":[{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6265,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:27","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6250,"id":6269,"nodeType":"Return","src":"4364:21:27"}]},"documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"3889:280:27","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:27","nodeType":"FunctionDefinition","parameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"value","nameLocation":"4201:5:27","nodeType":"VariableDeclaration","scope":6271,"src":"4193:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:27"},"returnParameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6271,"src":"4231:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6248,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:27"},"scope":7841,"src":"4174:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6298,"nodeType":"Block","src":"4749:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"4763:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6281,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:27","memberName":"max","nodeType":"MemberAccess","src":"4771:17:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6292,"nodeType":"IfStatement","src":"4759:105:27","trueBody":{"id":6291,"nodeType":"Block","src":"4790:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"4847:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"4811:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6290,"nodeType":"RevertStatement","src":"4804:49:27"}]}},{"expression":{"arguments":[{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"4888:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6293,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:27","typeDescriptions":{}}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6278,"id":6297,"nodeType":"Return","src":"4873:21:27"}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"4398:280:27","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:27","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"4710:5:27","nodeType":"VariableDeclaration","scope":6299,"src":"4702:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:27"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6299,"src":"4740:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6276,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:27","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:27"},"scope":7841,"src":"4683:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6326,"nodeType":"Block","src":"5258:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"5272:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6309,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:27","memberName":"max","nodeType":"MemberAccess","src":"5280:17:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"5268:105:27","trueBody":{"id":6319,"nodeType":"Block","src":"5299:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"5356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"5320:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6318,"nodeType":"RevertStatement","src":"5313:49:27"}]}},{"expression":{"arguments":[{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"5397:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6321,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:27","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6306,"id":6325,"nodeType":"Return","src":"5382:21:27"}]},"documentation":{"id":6300,"nodeType":"StructuredDocumentation","src":"4907:280:27","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:27","nodeType":"FunctionDefinition","parameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"value","nameLocation":"5219:5:27","nodeType":"VariableDeclaration","scope":6327,"src":"5211:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:27"},"returnParameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"5249:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6304,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:27","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:27"},"scope":7841,"src":"5192:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6354,"nodeType":"Block","src":"5767:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5781:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6337,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:27","memberName":"max","nodeType":"MemberAccess","src":"5789:17:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6348,"nodeType":"IfStatement","src":"5777:105:27","trueBody":{"id":6347,"nodeType":"Block","src":"5808:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"5829:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6346,"nodeType":"RevertStatement","src":"5822:49:27"}]}},{"expression":{"arguments":[{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"5906:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6349,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:27","typeDescriptions":{}}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6334,"id":6353,"nodeType":"Return","src":"5891:21:27"}]},"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"5416:280:27","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:27","nodeType":"FunctionDefinition","parameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"value","nameLocation":"5728:5:27","nodeType":"VariableDeclaration","scope":6355,"src":"5720:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:27"},"returnParameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"5758:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6332,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:27","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:27"},"scope":7841,"src":"5701:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"6276:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"6290:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6365,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:27","memberName":"max","nodeType":"MemberAccess","src":"6298:17:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6376,"nodeType":"IfStatement","src":"6286:105:27","trueBody":{"id":6375,"nodeType":"Block","src":"6317:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"6374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"6338:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6374,"nodeType":"RevertStatement","src":"6331:49:27"}]}},{"expression":{"arguments":[{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"6415:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6377,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:27","typeDescriptions":{}}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6362,"id":6381,"nodeType":"Return","src":"6400:21:27"}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"5925:280:27","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:27","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"6237:5:27","nodeType":"VariableDeclaration","scope":6383,"src":"6229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6357,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:27"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6383,"src":"6267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6360,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:27","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:27"},"scope":7841,"src":"6210:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6410,"nodeType":"Block","src":"6785:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"6799:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6393,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:27","memberName":"max","nodeType":"MemberAccess","src":"6807:17:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"6795:105:27","trueBody":{"id":6403,"nodeType":"Block","src":"6826:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"6883:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"6847:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6402,"nodeType":"RevertStatement","src":"6840:49:27"}]}},{"expression":{"arguments":[{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"6924:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6405,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:27","typeDescriptions":{}}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6390,"id":6409,"nodeType":"Return","src":"6909:21:27"}]},"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"6434:280:27","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:27","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"6746:5:27","nodeType":"VariableDeclaration","scope":6411,"src":"6738:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:27"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6411,"src":"6776:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6388,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:27","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:27"},"scope":7841,"src":"6719:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6438,"nodeType":"Block","src":"7294:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"7308:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6421,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6420,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:27","memberName":"max","nodeType":"MemberAccess","src":"7316:17:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6432,"nodeType":"IfStatement","src":"7304:105:27","trueBody":{"id":6431,"nodeType":"Block","src":"7335:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"7392:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6426,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"7356:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6430,"nodeType":"RevertStatement","src":"7349:49:27"}]}},{"expression":{"arguments":[{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"7433:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6433,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:27","typeDescriptions":{}}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6418,"id":6437,"nodeType":"Return","src":"7418:21:27"}]},"documentation":{"id":6412,"nodeType":"StructuredDocumentation","src":"6943:280:27","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:27","nodeType":"FunctionDefinition","parameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"value","nameLocation":"7255:5:27","nodeType":"VariableDeclaration","scope":6439,"src":"7247:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6413,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:27"},"returnParameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6439,"src":"7285:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6416,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:27"},"scope":7841,"src":"7228:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6466,"nodeType":"Block","src":"7803:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"7817:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6449,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:27","memberName":"max","nodeType":"MemberAccess","src":"7825:17:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6460,"nodeType":"IfStatement","src":"7813:105:27","trueBody":{"id":6459,"nodeType":"Block","src":"7844:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"7901:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6454,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"7865:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6458,"nodeType":"RevertStatement","src":"7858:49:27"}]}},{"expression":{"arguments":[{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"7942:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6461,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:27","typeDescriptions":{}}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6446,"id":6465,"nodeType":"Return","src":"7927:21:27"}]},"documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"7452:280:27","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:27","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"value","nameLocation":"7764:5:27","nodeType":"VariableDeclaration","scope":6467,"src":"7756:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:27"},"returnParameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6467,"src":"7794:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6444,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:27","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:27"},"scope":7841,"src":"7737:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6494,"nodeType":"Block","src":"8312:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"8326:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6477,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:27","memberName":"max","nodeType":"MemberAccess","src":"8334:17:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6488,"nodeType":"IfStatement","src":"8322:105:27","trueBody":{"id":6487,"nodeType":"Block","src":"8353:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"8410:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6482,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"8374:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6486,"nodeType":"RevertStatement","src":"8367:49:27"}]}},{"expression":{"arguments":[{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"8451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6489,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:27","typeDescriptions":{}}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6474,"id":6493,"nodeType":"Return","src":"8436:21:27"}]},"documentation":{"id":6468,"nodeType":"StructuredDocumentation","src":"7961:280:27","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6495,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:27","nodeType":"FunctionDefinition","parameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"value","nameLocation":"8273:5:27","nodeType":"VariableDeclaration","scope":6495,"src":"8265:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:27"},"returnParameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6495,"src":"8303:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6472,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:27","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:27"},"scope":7841,"src":"8246:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6522,"nodeType":"Block","src":"8821:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8835:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6505,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:27","memberName":"max","nodeType":"MemberAccess","src":"8843:17:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6516,"nodeType":"IfStatement","src":"8831:105:27","trueBody":{"id":6515,"nodeType":"Block","src":"8862:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8919:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6510,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"8883:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6514,"nodeType":"RevertStatement","src":"8876:49:27"}]}},{"expression":{"arguments":[{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8960:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6517,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:27","typeDescriptions":{}}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6502,"id":6521,"nodeType":"Return","src":"8945:21:27"}]},"documentation":{"id":6496,"nodeType":"StructuredDocumentation","src":"8470:280:27","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6523,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:27","nodeType":"FunctionDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"value","nameLocation":"8782:5:27","nodeType":"VariableDeclaration","scope":6523,"src":"8774:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:27"},"returnParameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6523,"src":"8812:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6500,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:27","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:27"},"scope":7841,"src":"8755:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6550,"nodeType":"Block","src":"9330:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9344:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6533,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:27","memberName":"max","nodeType":"MemberAccess","src":"9352:17:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6544,"nodeType":"IfStatement","src":"9340:105:27","trueBody":{"id":6543,"nodeType":"Block","src":"9371:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6538,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"9392:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6542,"nodeType":"RevertStatement","src":"9385:49:27"}]}},{"expression":{"arguments":[{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9469:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6545,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:27","typeDescriptions":{}}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6530,"id":6549,"nodeType":"Return","src":"9454:21:27"}]},"documentation":{"id":6524,"nodeType":"StructuredDocumentation","src":"8979:280:27","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6551,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:27","nodeType":"FunctionDefinition","parameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"value","nameLocation":"9291:5:27","nodeType":"VariableDeclaration","scope":6551,"src":"9283:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6525,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:27"},"returnParameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6551,"src":"9321:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6528,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:27","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:27"},"scope":7841,"src":"9264:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6578,"nodeType":"Block","src":"9839:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"9853:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6561,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:27","memberName":"max","nodeType":"MemberAccess","src":"9861:17:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6572,"nodeType":"IfStatement","src":"9849:105:27","trueBody":{"id":6571,"nodeType":"Block","src":"9880:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"9937:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"9901:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6570,"nodeType":"RevertStatement","src":"9894:49:27"}]}},{"expression":{"arguments":[{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"9978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6573,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:27","typeDescriptions":{}}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6558,"id":6577,"nodeType":"Return","src":"9963:21:27"}]},"documentation":{"id":6552,"nodeType":"StructuredDocumentation","src":"9488:280:27","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6579,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:27","nodeType":"FunctionDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"value","nameLocation":"9800:5:27","nodeType":"VariableDeclaration","scope":6579,"src":"9792:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:27"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6579,"src":"9830:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6556,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:27","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:27"},"scope":7841,"src":"9773:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6606,"nodeType":"Block","src":"10348:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"10362:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6589,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:27","memberName":"max","nodeType":"MemberAccess","src":"10370:17:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6600,"nodeType":"IfStatement","src":"10358:105:27","trueBody":{"id":6599,"nodeType":"Block","src":"10389:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"10446:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"10410:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6598,"nodeType":"RevertStatement","src":"10403:49:27"}]}},{"expression":{"arguments":[{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"10487:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6601,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:27","typeDescriptions":{}}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6586,"id":6605,"nodeType":"Return","src":"10472:21:27"}]},"documentation":{"id":6580,"nodeType":"StructuredDocumentation","src":"9997:280:27","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:27","nodeType":"FunctionDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"value","nameLocation":"10309:5:27","nodeType":"VariableDeclaration","scope":6607,"src":"10301:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:27"},"returnParameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6607,"src":"10339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6584,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:27"},"scope":7841,"src":"10282:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6634,"nodeType":"Block","src":"10857:152:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"10871:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6617,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:27","memberName":"max","nodeType":"MemberAccess","src":"10879:17:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6628,"nodeType":"IfStatement","src":"10867:105:27","trueBody":{"id":6627,"nodeType":"Block","src":"10898:74:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"10955:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6622,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"10919:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6626,"nodeType":"RevertStatement","src":"10912:49:27"}]}},{"expression":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"10996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6629,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:27","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6614,"id":6633,"nodeType":"Return","src":"10981:21:27"}]},"documentation":{"id":6608,"nodeType":"StructuredDocumentation","src":"10506:280:27","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6635,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:27","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"value","nameLocation":"10818:5:27","nodeType":"VariableDeclaration","scope":6635,"src":"10810:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6609,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:27"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6635,"src":"10848:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6612,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:27","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:27"},"scope":7841,"src":"10791:218:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6662,"nodeType":"Block","src":"11360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"11374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6645,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6644,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:27","memberName":"max","nodeType":"MemberAccess","src":"11382:16:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6656,"nodeType":"IfStatement","src":"11370:103:27","trueBody":{"id":6655,"nodeType":"Block","src":"11400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"11456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6650,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"11421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6654,"nodeType":"RevertStatement","src":"11414:48:27"}]}},{"expression":{"arguments":[{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"11496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6657,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:27","typeDescriptions":{}}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6642,"id":6661,"nodeType":"Return","src":"11482:20:27"}]},"documentation":{"id":6636,"nodeType":"StructuredDocumentation","src":"11015:276:27","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6663,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"value","nameLocation":"11322:5:27","nodeType":"VariableDeclaration","scope":6663,"src":"11314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6637,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:27"},"returnParameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6663,"src":"11352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6640,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:27"},"scope":7841,"src":"11296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6690,"nodeType":"Block","src":"11860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"11874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6673,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6672,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:27","memberName":"max","nodeType":"MemberAccess","src":"11882:16:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6684,"nodeType":"IfStatement","src":"11870:103:27","trueBody":{"id":6683,"nodeType":"Block","src":"11900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"11956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"11921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6682,"nodeType":"RevertStatement","src":"11914:48:27"}]}},{"expression":{"arguments":[{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"11996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6685,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:27","typeDescriptions":{}}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6670,"id":6689,"nodeType":"Return","src":"11982:20:27"}]},"documentation":{"id":6664,"nodeType":"StructuredDocumentation","src":"11515:276:27","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"value","nameLocation":"11822:5:27","nodeType":"VariableDeclaration","scope":6691,"src":"11814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:27"},"returnParameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6691,"src":"11852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6668,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:27","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:27"},"scope":7841,"src":"11796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6718,"nodeType":"Block","src":"12360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"12374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6701,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6700,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:27","memberName":"max","nodeType":"MemberAccess","src":"12382:16:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6712,"nodeType":"IfStatement","src":"12370:103:27","trueBody":{"id":6711,"nodeType":"Block","src":"12400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"12456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"12421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6710,"nodeType":"RevertStatement","src":"12414:48:27"}]}},{"expression":{"arguments":[{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6694,"src":"12496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6713,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:27","typeDescriptions":{}}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6698,"id":6717,"nodeType":"Return","src":"12482:20:27"}]},"documentation":{"id":6692,"nodeType":"StructuredDocumentation","src":"12015:276:27","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6694,"mutability":"mutable","name":"value","nameLocation":"12322:5:27","nodeType":"VariableDeclaration","scope":6719,"src":"12314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:27"},"returnParameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6719,"src":"12352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6696,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:27"},"scope":7841,"src":"12296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6746,"nodeType":"Block","src":"12860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"12874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6729,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:27","memberName":"max","nodeType":"MemberAccess","src":"12882:16:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6740,"nodeType":"IfStatement","src":"12870:103:27","trueBody":{"id":6739,"nodeType":"Block","src":"12900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"12956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"12921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6738,"nodeType":"RevertStatement","src":"12914:48:27"}]}},{"expression":{"arguments":[{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"12996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6741,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:27","typeDescriptions":{}}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6726,"id":6745,"nodeType":"Return","src":"12982:20:27"}]},"documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"12515:276:27","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6747,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"value","nameLocation":"12822:5:27","nodeType":"VariableDeclaration","scope":6747,"src":"12814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6721,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:27"},"returnParameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6747,"src":"12852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6724,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:27","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:27"},"scope":7841,"src":"12796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6774,"nodeType":"Block","src":"13360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"13374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6757,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6756,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:27","memberName":"max","nodeType":"MemberAccess","src":"13382:16:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6768,"nodeType":"IfStatement","src":"13370:103:27","trueBody":{"id":6767,"nodeType":"Block","src":"13400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"13456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"13421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6766,"nodeType":"RevertStatement","src":"13414:48:27"}]}},{"expression":{"arguments":[{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"13496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6769,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:27","typeDescriptions":{}}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6754,"id":6773,"nodeType":"Return","src":"13482:20:27"}]},"documentation":{"id":6748,"nodeType":"StructuredDocumentation","src":"13015:276:27","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6775,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"value","nameLocation":"13322:5:27","nodeType":"VariableDeclaration","scope":6775,"src":"13314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6749,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:27"},"returnParameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6775,"src":"13352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6752,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:27"},"scope":7841,"src":"13296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6802,"nodeType":"Block","src":"13860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"13874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6785,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:27","memberName":"max","nodeType":"MemberAccess","src":"13882:16:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6796,"nodeType":"IfStatement","src":"13870:103:27","trueBody":{"id":6795,"nodeType":"Block","src":"13900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"13956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"13921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6794,"nodeType":"RevertStatement","src":"13914:48:27"}]}},{"expression":{"arguments":[{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"13996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6797,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:27","typeDescriptions":{}}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6782,"id":6801,"nodeType":"Return","src":"13982:20:27"}]},"documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"13515:276:27","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6803,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"value","nameLocation":"13822:5:27","nodeType":"VariableDeclaration","scope":6803,"src":"13814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:27"},"returnParameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6803,"src":"13852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6780,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:27","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:27"},"scope":7841,"src":"13796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6830,"nodeType":"Block","src":"14360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"14374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6813,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:27","memberName":"max","nodeType":"MemberAccess","src":"14382:16:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"14370:103:27","trueBody":{"id":6823,"nodeType":"Block","src":"14400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"14456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6818,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"14421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6822,"nodeType":"RevertStatement","src":"14414:48:27"}]}},{"expression":{"arguments":[{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"14496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6825,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:27","typeDescriptions":{}}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6810,"id":6829,"nodeType":"Return","src":"14482:20:27"}]},"documentation":{"id":6804,"nodeType":"StructuredDocumentation","src":"14015:276:27","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"value","nameLocation":"14322:5:27","nodeType":"VariableDeclaration","scope":6831,"src":"14314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6805,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:27"},"returnParameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6831,"src":"14352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6808,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:27"},"scope":7841,"src":"14296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6858,"nodeType":"Block","src":"14860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"14874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6841,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6840,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:27","memberName":"max","nodeType":"MemberAccess","src":"14882:16:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6852,"nodeType":"IfStatement","src":"14870:103:27","trueBody":{"id":6851,"nodeType":"Block","src":"14900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"14956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6846,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"14921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6850,"nodeType":"RevertStatement","src":"14914:48:27"}]}},{"expression":{"arguments":[{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"14996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6853,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:27","typeDescriptions":{}}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6838,"id":6857,"nodeType":"Return","src":"14982:20:27"}]},"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"14515:276:27","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6859,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"value","nameLocation":"14822:5:27","nodeType":"VariableDeclaration","scope":6859,"src":"14814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6833,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:27"},"returnParameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6859,"src":"14852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6836,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:27","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:27"},"scope":7841,"src":"14796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6886,"nodeType":"Block","src":"15360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6869,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6868,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:27","memberName":"max","nodeType":"MemberAccess","src":"15382:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6880,"nodeType":"IfStatement","src":"15370:103:27","trueBody":{"id":6879,"nodeType":"Block","src":"15400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"15421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6878,"nodeType":"RevertStatement","src":"15414:48:27"}]}},{"expression":{"arguments":[{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"15496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6881,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:27","typeDescriptions":{}}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6866,"id":6885,"nodeType":"Return","src":"15482:20:27"}]},"documentation":{"id":6860,"nodeType":"StructuredDocumentation","src":"15015:276:27","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6887,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6862,"mutability":"mutable","name":"value","nameLocation":"15322:5:27","nodeType":"VariableDeclaration","scope":6887,"src":"15314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:27"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6887,"src":"15352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6864,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:27"},"scope":7841,"src":"15296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6914,"nodeType":"Block","src":"15860:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"15874:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6897,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6896,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:27","memberName":"max","nodeType":"MemberAccess","src":"15882:16:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6908,"nodeType":"IfStatement","src":"15870:103:27","trueBody":{"id":6907,"nodeType":"Block","src":"15900:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"15956:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"15921:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6906,"nodeType":"RevertStatement","src":"15914:48:27"}]}},{"expression":{"arguments":[{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"15996:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6909,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:27","typeDescriptions":{}}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6894,"id":6913,"nodeType":"Return","src":"15982:20:27"}]},"documentation":{"id":6888,"nodeType":"StructuredDocumentation","src":"15515:276:27","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6915,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:27","nodeType":"FunctionDefinition","parameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"value","nameLocation":"15822:5:27","nodeType":"VariableDeclaration","scope":6915,"src":"15814:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6889,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:27"},"returnParameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6915,"src":"15852:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6892,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:27"},"scope":7841,"src":"15796:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6942,"nodeType":"Block","src":"16360:149:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"16374:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6925,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6924,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:27","memberName":"max","nodeType":"MemberAccess","src":"16382:16:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6936,"nodeType":"IfStatement","src":"16370:103:27","trueBody":{"id":6935,"nodeType":"Block","src":"16400:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"16456:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"16421:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6934,"nodeType":"RevertStatement","src":"16414:48:27"}]}},{"expression":{"arguments":[{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"16496:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6937,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:27","typeDescriptions":{}}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6922,"id":6941,"nodeType":"Return","src":"16482:20:27"}]},"documentation":{"id":6916,"nodeType":"StructuredDocumentation","src":"16015:276:27","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6943,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:27","nodeType":"FunctionDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"value","nameLocation":"16322:5:27","nodeType":"VariableDeclaration","scope":6943,"src":"16314:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6917,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:27"},"returnParameters":{"id":6922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6943,"src":"16352:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6920,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:27"},"scope":7841,"src":"16296:213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6970,"nodeType":"Block","src":"16854:146:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"16868:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6953,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6952,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:27","memberName":"max","nodeType":"MemberAccess","src":"16876:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"nodeType":"IfStatement","src":"16864:101:27","trueBody":{"id":6963,"nodeType":"Block","src":"16893:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"16948:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6958,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"16914:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6962,"nodeType":"RevertStatement","src":"16907:47:27"}]}},{"expression":{"arguments":[{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"16987:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6965,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:27","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6950,"id":6969,"nodeType":"Return","src":"16974:19:27"}]},"documentation":{"id":6944,"nodeType":"StructuredDocumentation","src":"16515:272:27","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6971,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:27","nodeType":"FunctionDefinition","parameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"value","nameLocation":"16817:5:27","nodeType":"VariableDeclaration","scope":6971,"src":"16809:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6945,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:27"},"returnParameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6971,"src":"16847:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6948,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:27"},"scope":7841,"src":"16792:208:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6993,"nodeType":"Block","src":"17236:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"17250:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"IfStatement","src":"17246:81:27","trueBody":{"id":6986,"nodeType":"Block","src":"17261:66:27","statements":[{"errorCall":{"arguments":[{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"17310:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6982,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"17282:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6985,"nodeType":"RevertStatement","src":"17275:41:27"}]}},{"expression":{"arguments":[{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"17351:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:27","typeDescriptions":{}}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6978,"id":6992,"nodeType":"Return","src":"17336:21:27"}]},"documentation":{"id":6972,"nodeType":"StructuredDocumentation","src":"17006:160:27","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:27","nodeType":"FunctionDefinition","parameters":{"id":6975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"value","nameLocation":"17197:5:27","nodeType":"VariableDeclaration","scope":6994,"src":"17190:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6973,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:27"},"returnParameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6994,"src":"17227:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:27"},"scope":7841,"src":"17171:193:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7019,"nodeType":"Block","src":"17761:150:27","statements":[{"expression":{"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"17771:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"17791:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7003,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:27","typeDescriptions":{}}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7008,"nodeType":"ExpressionStatement","src":"17771:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"17811:10:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"17825:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7018,"nodeType":"IfStatement","src":"17807:98:27","trueBody":{"id":7017,"nodeType":"Block","src":"17832:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:27","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"17888:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"17853:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7016,"nodeType":"RevertStatement","src":"17846:48:27"}]}}]},"documentation":{"id":6995,"nodeType":"StructuredDocumentation","src":"17370:312:27","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:27","nodeType":"FunctionDefinition","parameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"value","nameLocation":"17712:5:27","nodeType":"VariableDeclaration","scope":7020,"src":"17705:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6996,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:27"},"returnParameters":{"id":7001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:27","nodeType":"VariableDeclaration","scope":7020,"src":"17742:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6999,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:27","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:27"},"scope":7841,"src":"17687:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7045,"nodeType":"Block","src":"18308:150:27","statements":[{"expression":{"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"18318:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"18338:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7029,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:27","typeDescriptions":{}}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7034,"nodeType":"ExpressionStatement","src":"18318:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"18358:10:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"18372:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7044,"nodeType":"IfStatement","src":"18354:98:27","trueBody":{"id":7043,"nodeType":"Block","src":"18379:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:27","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"18435:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"18400:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7042,"nodeType":"RevertStatement","src":"18393:48:27"}]}}]},"documentation":{"id":7021,"nodeType":"StructuredDocumentation","src":"17917:312:27","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:27","nodeType":"FunctionDefinition","parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"value","nameLocation":"18259:5:27","nodeType":"VariableDeclaration","scope":7046,"src":"18252:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7022,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:27"},"returnParameters":{"id":7027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7026,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:27","nodeType":"VariableDeclaration","scope":7046,"src":"18289:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7025,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:27","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:27"},"scope":7841,"src":"18234:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7071,"nodeType":"Block","src":"18855:150:27","statements":[{"expression":{"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"18865:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"18885:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7055,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:27","typeDescriptions":{}}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7060,"nodeType":"ExpressionStatement","src":"18865:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"18905:10:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"18919:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"18901:98:27","trueBody":{"id":7069,"nodeType":"Block","src":"18926:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:27","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"18982:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"18947:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7068,"nodeType":"RevertStatement","src":"18940:48:27"}]}}]},"documentation":{"id":7047,"nodeType":"StructuredDocumentation","src":"18464:312:27","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:27","nodeType":"FunctionDefinition","parameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"value","nameLocation":"18806:5:27","nodeType":"VariableDeclaration","scope":7072,"src":"18799:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7048,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:27"},"returnParameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:27","nodeType":"VariableDeclaration","scope":7072,"src":"18836:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7051,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:27","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:27"},"scope":7841,"src":"18781:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7097,"nodeType":"Block","src":"19402:150:27","statements":[{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"19412:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"19432:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7081,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:27","typeDescriptions":{}}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7086,"nodeType":"ExpressionStatement","src":"19412:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"19452:10:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"19466:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"19448:98:27","trueBody":{"id":7095,"nodeType":"Block","src":"19473:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:27","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"19529:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"19494:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7094,"nodeType":"RevertStatement","src":"19487:48:27"}]}}]},"documentation":{"id":7073,"nodeType":"StructuredDocumentation","src":"19011:312:27","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:27","nodeType":"FunctionDefinition","parameters":{"id":7076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7075,"mutability":"mutable","name":"value","nameLocation":"19353:5:27","nodeType":"VariableDeclaration","scope":7098,"src":"19346:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7074,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:27"},"returnParameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:27","nodeType":"VariableDeclaration","scope":7098,"src":"19383:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7077,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:27","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:27"},"scope":7841,"src":"19328:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7123,"nodeType":"Block","src":"19949:150:27","statements":[{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"19959:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"19979:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7107,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:27","typeDescriptions":{}}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7112,"nodeType":"ExpressionStatement","src":"19959:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"19999:10:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"20013:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7122,"nodeType":"IfStatement","src":"19995:98:27","trueBody":{"id":7121,"nodeType":"Block","src":"20020:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:27","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"20076:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"20041:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7120,"nodeType":"RevertStatement","src":"20034:48:27"}]}}]},"documentation":{"id":7099,"nodeType":"StructuredDocumentation","src":"19558:312:27","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:27","nodeType":"FunctionDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"value","nameLocation":"19900:5:27","nodeType":"VariableDeclaration","scope":7124,"src":"19893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7100,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:27"},"returnParameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:27","nodeType":"VariableDeclaration","scope":7124,"src":"19930:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7103,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:27","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:27"},"scope":7841,"src":"19875:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7149,"nodeType":"Block","src":"20496:150:27","statements":[{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"20506:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"20526:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7133,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:27","typeDescriptions":{}}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7138,"nodeType":"ExpressionStatement","src":"20506:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"20546:10:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"20560:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7148,"nodeType":"IfStatement","src":"20542:98:27","trueBody":{"id":7147,"nodeType":"Block","src":"20567:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:27","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"20623:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"20588:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7146,"nodeType":"RevertStatement","src":"20581:48:27"}]}}]},"documentation":{"id":7125,"nodeType":"StructuredDocumentation","src":"20105:312:27","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:27","nodeType":"FunctionDefinition","parameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"value","nameLocation":"20447:5:27","nodeType":"VariableDeclaration","scope":7150,"src":"20440:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7126,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:27"},"returnParameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:27","nodeType":"VariableDeclaration","scope":7150,"src":"20477:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7129,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:27","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:27"},"scope":7841,"src":"20422:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7175,"nodeType":"Block","src":"21043:150:27","statements":[{"expression":{"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"21053:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"21073:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7159,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:27","typeDescriptions":{}}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7164,"nodeType":"ExpressionStatement","src":"21053:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"21093:10:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"21107:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7174,"nodeType":"IfStatement","src":"21089:98:27","trueBody":{"id":7173,"nodeType":"Block","src":"21114:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:27","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"21170:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"21135:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7172,"nodeType":"RevertStatement","src":"21128:48:27"}]}}]},"documentation":{"id":7151,"nodeType":"StructuredDocumentation","src":"20652:312:27","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:27","nodeType":"FunctionDefinition","parameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"mutability":"mutable","name":"value","nameLocation":"20994:5:27","nodeType":"VariableDeclaration","scope":7176,"src":"20987:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7152,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:27"},"returnParameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:27","nodeType":"VariableDeclaration","scope":7176,"src":"21024:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7155,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:27","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:27"},"scope":7841,"src":"20969:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"21590:150:27","statements":[{"expression":{"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"21600:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"21620:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7185,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:27","typeDescriptions":{}}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7190,"nodeType":"ExpressionStatement","src":"21600:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"21640:10:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"21654:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7200,"nodeType":"IfStatement","src":"21636:98:27","trueBody":{"id":7199,"nodeType":"Block","src":"21661:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:27","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"21717:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"21682:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7198,"nodeType":"RevertStatement","src":"21675:48:27"}]}}]},"documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"21199:312:27","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:27","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"value","nameLocation":"21541:5:27","nodeType":"VariableDeclaration","scope":7202,"src":"21534:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7178,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:27"},"returnParameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:27","nodeType":"VariableDeclaration","scope":7202,"src":"21571:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7181,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:27","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:27"},"scope":7841,"src":"21516:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7227,"nodeType":"Block","src":"22137:150:27","statements":[{"expression":{"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"22147:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"22167:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7211,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:27","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7216,"nodeType":"ExpressionStatement","src":"22147:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"22187:10:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"22201:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"IfStatement","src":"22183:98:27","trueBody":{"id":7225,"nodeType":"Block","src":"22208:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:27","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"22264:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"22229:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7224,"nodeType":"RevertStatement","src":"22222:48:27"}]}}]},"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"21746:312:27","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:27","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"value","nameLocation":"22088:5:27","nodeType":"VariableDeclaration","scope":7228,"src":"22081:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7204,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:27"},"returnParameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:27","nodeType":"VariableDeclaration","scope":7228,"src":"22118:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7207,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:27","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:27"},"scope":7841,"src":"22063:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7253,"nodeType":"Block","src":"22684:150:27","statements":[{"expression":{"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"22694:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"22714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7237,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:27","typeDescriptions":{}}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7242,"nodeType":"ExpressionStatement","src":"22694:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"22734:10:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"22748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7252,"nodeType":"IfStatement","src":"22730:98:27","trueBody":{"id":7251,"nodeType":"Block","src":"22755:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"22811:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"22776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7250,"nodeType":"RevertStatement","src":"22769:48:27"}]}}]},"documentation":{"id":7229,"nodeType":"StructuredDocumentation","src":"22293:312:27","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:27","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"value","nameLocation":"22635:5:27","nodeType":"VariableDeclaration","scope":7254,"src":"22628:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7230,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:27"},"returnParameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:27","nodeType":"VariableDeclaration","scope":7254,"src":"22665:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7233,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:27","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:27"},"scope":7841,"src":"22610:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7279,"nodeType":"Block","src":"23231:150:27","statements":[{"expression":{"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"23241:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"23261:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7263,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:27","typeDescriptions":{}}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7268,"nodeType":"ExpressionStatement","src":"23241:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"23281:10:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"23295:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7278,"nodeType":"IfStatement","src":"23277:98:27","trueBody":{"id":7277,"nodeType":"Block","src":"23302:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:27","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"23358:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"23323:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7276,"nodeType":"RevertStatement","src":"23316:48:27"}]}}]},"documentation":{"id":7255,"nodeType":"StructuredDocumentation","src":"22840:312:27","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:27","nodeType":"FunctionDefinition","parameters":{"id":7258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"value","nameLocation":"23182:5:27","nodeType":"VariableDeclaration","scope":7280,"src":"23175:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7256,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:27"},"returnParameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:27","nodeType":"VariableDeclaration","scope":7280,"src":"23212:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7259,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:27","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:27"},"scope":7841,"src":"23157:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7305,"nodeType":"Block","src":"23778:150:27","statements":[{"expression":{"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"23788:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"23808:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7289,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:27","typeDescriptions":{}}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7294,"nodeType":"ExpressionStatement","src":"23788:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"23828:10:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"23842:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7304,"nodeType":"IfStatement","src":"23824:98:27","trueBody":{"id":7303,"nodeType":"Block","src":"23849:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:27","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"23905:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"23870:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7302,"nodeType":"RevertStatement","src":"23863:48:27"}]}}]},"documentation":{"id":7281,"nodeType":"StructuredDocumentation","src":"23387:312:27","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:27","nodeType":"FunctionDefinition","parameters":{"id":7284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"value","nameLocation":"23729:5:27","nodeType":"VariableDeclaration","scope":7306,"src":"23722:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7282,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:27"},"returnParameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:27","nodeType":"VariableDeclaration","scope":7306,"src":"23759:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7285,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:27","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:27"},"scope":7841,"src":"23704:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7331,"nodeType":"Block","src":"24325:150:27","statements":[{"expression":{"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"24335:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"24355:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7315,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:27","typeDescriptions":{}}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7320,"nodeType":"ExpressionStatement","src":"24335:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"24375:10:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"24389:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7330,"nodeType":"IfStatement","src":"24371:98:27","trueBody":{"id":7329,"nodeType":"Block","src":"24396:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:27","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"24452:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"24417:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7328,"nodeType":"RevertStatement","src":"24410:48:27"}]}}]},"documentation":{"id":7307,"nodeType":"StructuredDocumentation","src":"23934:312:27","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:27","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"value","nameLocation":"24276:5:27","nodeType":"VariableDeclaration","scope":7332,"src":"24269:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7308,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:27"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:27","nodeType":"VariableDeclaration","scope":7332,"src":"24306:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7311,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:27","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:27"},"scope":7841,"src":"24251:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7357,"nodeType":"Block","src":"24872:150:27","statements":[{"expression":{"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"24882:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"24902:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7341,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:27","typeDescriptions":{}}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7346,"nodeType":"ExpressionStatement","src":"24882:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"24922:10:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"24936:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7356,"nodeType":"IfStatement","src":"24918:98:27","trueBody":{"id":7355,"nodeType":"Block","src":"24943:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:27","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"24999:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"24964:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7354,"nodeType":"RevertStatement","src":"24957:48:27"}]}}]},"documentation":{"id":7333,"nodeType":"StructuredDocumentation","src":"24481:312:27","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:27","nodeType":"FunctionDefinition","parameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"value","nameLocation":"24823:5:27","nodeType":"VariableDeclaration","scope":7358,"src":"24816:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7334,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:27"},"returnParameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:27","nodeType":"VariableDeclaration","scope":7358,"src":"24853:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7337,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:27","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:27"},"scope":7841,"src":"24798:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7383,"nodeType":"Block","src":"25419:150:27","statements":[{"expression":{"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"25429:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"25449:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7367,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:27","typeDescriptions":{}}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7372,"nodeType":"ExpressionStatement","src":"25429:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"25469:10:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"25483:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7382,"nodeType":"IfStatement","src":"25465:98:27","trueBody":{"id":7381,"nodeType":"Block","src":"25490:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:27","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"25546:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"25511:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7380,"nodeType":"RevertStatement","src":"25504:48:27"}]}}]},"documentation":{"id":7359,"nodeType":"StructuredDocumentation","src":"25028:312:27","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:27","nodeType":"FunctionDefinition","parameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"value","nameLocation":"25370:5:27","nodeType":"VariableDeclaration","scope":7384,"src":"25363:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7360,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:27"},"returnParameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:27","nodeType":"VariableDeclaration","scope":7384,"src":"25400:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7363,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:27","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:27"},"scope":7841,"src":"25345:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7409,"nodeType":"Block","src":"25966:150:27","statements":[{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"25976:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"25996:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7393,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:27","typeDescriptions":{}}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7398,"nodeType":"ExpressionStatement","src":"25976:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"26016:10:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"26030:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7408,"nodeType":"IfStatement","src":"26012:98:27","trueBody":{"id":7407,"nodeType":"Block","src":"26037:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"26093:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26058:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7406,"nodeType":"RevertStatement","src":"26051:48:27"}]}}]},"documentation":{"id":7385,"nodeType":"StructuredDocumentation","src":"25575:312:27","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:27","nodeType":"FunctionDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7387,"mutability":"mutable","name":"value","nameLocation":"25917:5:27","nodeType":"VariableDeclaration","scope":7410,"src":"25910:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7386,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:27"},"returnParameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:27","nodeType":"VariableDeclaration","scope":7410,"src":"25947:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7389,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:27","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:27"},"scope":7841,"src":"25892:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7435,"nodeType":"Block","src":"26513:150:27","statements":[{"expression":{"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"26523:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"26543:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7419,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:27","typeDescriptions":{}}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7424,"nodeType":"ExpressionStatement","src":"26523:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"26563:10:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"26577:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7434,"nodeType":"IfStatement","src":"26559:98:27","trueBody":{"id":7433,"nodeType":"Block","src":"26584:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:27","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"26640:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26605:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7432,"nodeType":"RevertStatement","src":"26598:48:27"}]}}]},"documentation":{"id":7411,"nodeType":"StructuredDocumentation","src":"26122:312:27","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:27","nodeType":"FunctionDefinition","parameters":{"id":7414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"value","nameLocation":"26464:5:27","nodeType":"VariableDeclaration","scope":7436,"src":"26457:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7412,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:27"},"returnParameters":{"id":7417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:27","nodeType":"VariableDeclaration","scope":7436,"src":"26494:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7415,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:27","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:27"},"scope":7841,"src":"26439:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"27060:150:27","statements":[{"expression":{"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"27070:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"27090:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7445,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:27","typeDescriptions":{}}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7450,"nodeType":"ExpressionStatement","src":"27070:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"27110:10:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"27124:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7460,"nodeType":"IfStatement","src":"27106:98:27","trueBody":{"id":7459,"nodeType":"Block","src":"27131:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:27","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"27187:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"27152:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7458,"nodeType":"RevertStatement","src":"27145:48:27"}]}}]},"documentation":{"id":7437,"nodeType":"StructuredDocumentation","src":"26669:312:27","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:27","nodeType":"FunctionDefinition","parameters":{"id":7440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"value","nameLocation":"27011:5:27","nodeType":"VariableDeclaration","scope":7462,"src":"27004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7438,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:27"},"returnParameters":{"id":7443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7442,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:27","nodeType":"VariableDeclaration","scope":7462,"src":"27041:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7441,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:27","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:27"},"scope":7841,"src":"26986:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7487,"nodeType":"Block","src":"27607:150:27","statements":[{"expression":{"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"27617:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"27637:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7471,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:27","typeDescriptions":{}}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7476,"nodeType":"ExpressionStatement","src":"27617:26:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"27657:10:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"27671:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7486,"nodeType":"IfStatement","src":"27653:98:27","trueBody":{"id":7485,"nodeType":"Block","src":"27678:73:27","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:27","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"27734:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"27699:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7484,"nodeType":"RevertStatement","src":"27692:48:27"}]}}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"27216:312:27","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:27","nodeType":"FunctionDefinition","parameters":{"id":7466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"value","nameLocation":"27558:5:27","nodeType":"VariableDeclaration","scope":7488,"src":"27551:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7464,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:27"},"returnParameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:27","nodeType":"VariableDeclaration","scope":7488,"src":"27588:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7467,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:27","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:27"},"scope":7841,"src":"27533:224:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7513,"nodeType":"Block","src":"28147:148:27","statements":[{"expression":{"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"28157:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"28176:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7497,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:27","typeDescriptions":{}}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7502,"nodeType":"ExpressionStatement","src":"28157:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"28196:10:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"28210:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7512,"nodeType":"IfStatement","src":"28192:97:27","trueBody":{"id":7511,"nodeType":"Block","src":"28217:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"28272:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"28238:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7510,"nodeType":"RevertStatement","src":"28231:47:27"}]}}]},"documentation":{"id":7489,"nodeType":"StructuredDocumentation","src":"27763:307:27","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:27","nodeType":"FunctionDefinition","parameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"value","nameLocation":"28099:5:27","nodeType":"VariableDeclaration","scope":7514,"src":"28092:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7490,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:27"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:27","nodeType":"VariableDeclaration","scope":7514,"src":"28129:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7493,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:27","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:27"},"scope":7841,"src":"28075:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7539,"nodeType":"Block","src":"28685:148:27","statements":[{"expression":{"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"28695:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"28714:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7523,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:27","typeDescriptions":{}}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7528,"nodeType":"ExpressionStatement","src":"28695:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"28734:10:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"28748:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7538,"nodeType":"IfStatement","src":"28730:97:27","trueBody":{"id":7537,"nodeType":"Block","src":"28755:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:27","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"28810:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"28776:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7536,"nodeType":"RevertStatement","src":"28769:47:27"}]}}]},"documentation":{"id":7515,"nodeType":"StructuredDocumentation","src":"28301:307:27","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:27","nodeType":"FunctionDefinition","parameters":{"id":7518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7517,"mutability":"mutable","name":"value","nameLocation":"28637:5:27","nodeType":"VariableDeclaration","scope":7540,"src":"28630:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7516,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:27"},"returnParameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7520,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:27","nodeType":"VariableDeclaration","scope":7540,"src":"28667:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7519,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:27","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:27"},"scope":7841,"src":"28613:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7565,"nodeType":"Block","src":"29223:148:27","statements":[{"expression":{"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"29233:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"29252:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7549,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:27","typeDescriptions":{}}},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7554,"nodeType":"ExpressionStatement","src":"29233:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"29272:10:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"29286:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7564,"nodeType":"IfStatement","src":"29268:97:27","trueBody":{"id":7563,"nodeType":"Block","src":"29293:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:27","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"29348:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"29314:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7562,"nodeType":"RevertStatement","src":"29307:47:27"}]}}]},"documentation":{"id":7541,"nodeType":"StructuredDocumentation","src":"28839:307:27","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:27","nodeType":"FunctionDefinition","parameters":{"id":7544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"value","nameLocation":"29175:5:27","nodeType":"VariableDeclaration","scope":7566,"src":"29168:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7542,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:27"},"returnParameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7546,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:27","nodeType":"VariableDeclaration","scope":7566,"src":"29205:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7545,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:27","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:27"},"scope":7841,"src":"29151:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7591,"nodeType":"Block","src":"29761:148:27","statements":[{"expression":{"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"29771:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"29790:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7575,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:27","typeDescriptions":{}}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7580,"nodeType":"ExpressionStatement","src":"29771:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"29810:10:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"29824:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7590,"nodeType":"IfStatement","src":"29806:97:27","trueBody":{"id":7589,"nodeType":"Block","src":"29831:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:27","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"29886:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"29852:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7588,"nodeType":"RevertStatement","src":"29845:47:27"}]}}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"29377:307:27","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:27","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"value","nameLocation":"29713:5:27","nodeType":"VariableDeclaration","scope":7592,"src":"29706:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7568,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:27"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:27","nodeType":"VariableDeclaration","scope":7592,"src":"29743:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7571,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:27","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:27"},"scope":7841,"src":"29689:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7617,"nodeType":"Block","src":"30299:148:27","statements":[{"expression":{"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"30309:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30328:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7601,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:27","typeDescriptions":{}}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7606,"nodeType":"ExpressionStatement","src":"30309:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"30348:10:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30362:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7616,"nodeType":"IfStatement","src":"30344:97:27","trueBody":{"id":7615,"nodeType":"Block","src":"30369:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30424:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"30390:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7614,"nodeType":"RevertStatement","src":"30383:47:27"}]}}]},"documentation":{"id":7593,"nodeType":"StructuredDocumentation","src":"29915:307:27","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:27","nodeType":"FunctionDefinition","parameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"value","nameLocation":"30251:5:27","nodeType":"VariableDeclaration","scope":7618,"src":"30244:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7594,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:27"},"returnParameters":{"id":7599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7598,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:27","nodeType":"VariableDeclaration","scope":7618,"src":"30281:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7597,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:27"},"scope":7841,"src":"30227:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7643,"nodeType":"Block","src":"30837:148:27","statements":[{"expression":{"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"30847:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"30866:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7627,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:27","typeDescriptions":{}}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7632,"nodeType":"ExpressionStatement","src":"30847:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"30886:10:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"30900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7642,"nodeType":"IfStatement","src":"30882:97:27","trueBody":{"id":7641,"nodeType":"Block","src":"30907:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:27","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"30962:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"30928:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7640,"nodeType":"RevertStatement","src":"30921:47:27"}]}}]},"documentation":{"id":7619,"nodeType":"StructuredDocumentation","src":"30453:307:27","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:27","nodeType":"FunctionDefinition","parameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7621,"mutability":"mutable","name":"value","nameLocation":"30789:5:27","nodeType":"VariableDeclaration","scope":7644,"src":"30782:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7620,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:27"},"returnParameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:27","nodeType":"VariableDeclaration","scope":7644,"src":"30819:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7623,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:27","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:27"},"scope":7841,"src":"30765:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7669,"nodeType":"Block","src":"31375:148:27","statements":[{"expression":{"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"31385:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"31404:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7653,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:27","typeDescriptions":{}}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7658,"nodeType":"ExpressionStatement","src":"31385:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"31424:10:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"31438:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7668,"nodeType":"IfStatement","src":"31420:97:27","trueBody":{"id":7667,"nodeType":"Block","src":"31445:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"31500:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"31466:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7666,"nodeType":"RevertStatement","src":"31459:47:27"}]}}]},"documentation":{"id":7645,"nodeType":"StructuredDocumentation","src":"30991:307:27","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:27","nodeType":"FunctionDefinition","parameters":{"id":7648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"mutability":"mutable","name":"value","nameLocation":"31327:5:27","nodeType":"VariableDeclaration","scope":7670,"src":"31320:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7646,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:27"},"returnParameters":{"id":7651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7650,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:27","nodeType":"VariableDeclaration","scope":7670,"src":"31357:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7649,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:27","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:27"},"scope":7841,"src":"31303:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7695,"nodeType":"Block","src":"31913:148:27","statements":[{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"31923:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"31942:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7679,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:27","typeDescriptions":{}}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7684,"nodeType":"ExpressionStatement","src":"31923:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"31962:10:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"31976:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7694,"nodeType":"IfStatement","src":"31958:97:27","trueBody":{"id":7693,"nodeType":"Block","src":"31983:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"32038:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"32004:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7692,"nodeType":"RevertStatement","src":"31997:47:27"}]}}]},"documentation":{"id":7671,"nodeType":"StructuredDocumentation","src":"31529:307:27","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:27","nodeType":"FunctionDefinition","parameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7673,"mutability":"mutable","name":"value","nameLocation":"31865:5:27","nodeType":"VariableDeclaration","scope":7696,"src":"31858:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7672,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:27"},"returnParameters":{"id":7677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7676,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:27","nodeType":"VariableDeclaration","scope":7696,"src":"31895:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7675,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:27","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:27"},"scope":7841,"src":"31841:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7721,"nodeType":"Block","src":"32451:148:27","statements":[{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"32461:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"32480:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7705,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:27","typeDescriptions":{}}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7710,"nodeType":"ExpressionStatement","src":"32461:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"32500:10:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"32514:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7720,"nodeType":"IfStatement","src":"32496:97:27","trueBody":{"id":7719,"nodeType":"Block","src":"32521:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"32576:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"32542:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7718,"nodeType":"RevertStatement","src":"32535:47:27"}]}}]},"documentation":{"id":7697,"nodeType":"StructuredDocumentation","src":"32067:307:27","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:27","nodeType":"FunctionDefinition","parameters":{"id":7700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7699,"mutability":"mutable","name":"value","nameLocation":"32403:5:27","nodeType":"VariableDeclaration","scope":7722,"src":"32396:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7698,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:27"},"returnParameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7702,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:27","nodeType":"VariableDeclaration","scope":7722,"src":"32433:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7701,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:27","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:27"},"scope":7841,"src":"32379:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7747,"nodeType":"Block","src":"32989:148:27","statements":[{"expression":{"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"32999:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"33018:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7731,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:27","typeDescriptions":{}}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7736,"nodeType":"ExpressionStatement","src":"32999:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"33038:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"33052:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7746,"nodeType":"IfStatement","src":"33034:97:27","trueBody":{"id":7745,"nodeType":"Block","src":"33059:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:27","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"33114:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"33080:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7744,"nodeType":"RevertStatement","src":"33073:47:27"}]}}]},"documentation":{"id":7723,"nodeType":"StructuredDocumentation","src":"32605:307:27","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:27","nodeType":"FunctionDefinition","parameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7725,"mutability":"mutable","name":"value","nameLocation":"32941:5:27","nodeType":"VariableDeclaration","scope":7748,"src":"32934:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7724,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:27"},"returnParameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7728,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:27","nodeType":"VariableDeclaration","scope":7748,"src":"32971:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7727,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:27"},"scope":7841,"src":"32917:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7773,"nodeType":"Block","src":"33527:148:27","statements":[{"expression":{"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"33537:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"33556:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7757,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:27","typeDescriptions":{}}},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7762,"nodeType":"ExpressionStatement","src":"33537:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"33576:10:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"33590:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7772,"nodeType":"IfStatement","src":"33572:97:27","trueBody":{"id":7771,"nodeType":"Block","src":"33597:72:27","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"33652:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"33618:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7770,"nodeType":"RevertStatement","src":"33611:47:27"}]}}]},"documentation":{"id":7749,"nodeType":"StructuredDocumentation","src":"33143:307:27","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:27","nodeType":"FunctionDefinition","parameters":{"id":7752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7751,"mutability":"mutable","name":"value","nameLocation":"33479:5:27","nodeType":"VariableDeclaration","scope":7774,"src":"33472:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7750,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:27"},"returnParameters":{"id":7755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7754,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:27","nodeType":"VariableDeclaration","scope":7774,"src":"33509:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7753,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:27"},"scope":7841,"src":"33455:220:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7799,"nodeType":"Block","src":"34058:146:27","statements":[{"expression":{"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"34068:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"34086:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7783,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:27","typeDescriptions":{}}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7788,"nodeType":"ExpressionStatement","src":"34068:24:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"34106:10:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"34120:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7798,"nodeType":"IfStatement","src":"34102:96:27","trueBody":{"id":7797,"nodeType":"Block","src":"34127:71:27","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"34181:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"34148:29:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7796,"nodeType":"RevertStatement","src":"34141:46:27"}]}}]},"documentation":{"id":7775,"nodeType":"StructuredDocumentation","src":"33681:302:27","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:27","nodeType":"FunctionDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7777,"mutability":"mutable","name":"value","nameLocation":"34011:5:27","nodeType":"VariableDeclaration","scope":7800,"src":"34004:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7776,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:27"},"returnParameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7780,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:27","nodeType":"VariableDeclaration","scope":7800,"src":"34041:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7779,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:27","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:27"},"scope":7841,"src":"33988:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7829,"nodeType":"Block","src":"34444:250:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"34557:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7812,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:27","memberName":"max","nodeType":"MemberAccess","src":"34573:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:27","typeDescriptions":{}}},"id":7816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7823,"nodeType":"IfStatement","src":"34553:105:27","trueBody":{"id":7822,"nodeType":"Block","src":"34592:66:27","statements":[{"errorCall":{"arguments":[{"id":7819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"34641:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7818,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"34613:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7821,"nodeType":"RevertStatement","src":"34606:41:27"}]}},{"expression":{"arguments":[{"id":7826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"34681:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7824,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:27","typeDescriptions":{}}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7807,"id":7828,"nodeType":"Return","src":"34667:20:27"}]},"documentation":{"id":7801,"nodeType":"StructuredDocumentation","src":"34210:165:27","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7830,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:27","nodeType":"FunctionDefinition","parameters":{"id":7804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"value","nameLocation":"34406:5:27","nodeType":"VariableDeclaration","scope":7830,"src":"34398:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:27"},"returnParameters":{"id":7807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7830,"src":"34436:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7805,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:27"},"scope":7841,"src":"34380:314:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7839,"nodeType":"Block","src":"34853:87:27","statements":[{"AST":{"nativeSrc":"34888:46:27","nodeType":"YulBlock","src":"34888:46:27","statements":[{"nativeSrc":"34902:22:27","nodeType":"YulAssignment","src":"34902:22:27","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:27","nodeType":"YulIdentifier","src":"34921:1:27"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:27","nodeType":"YulIdentifier","src":"34914:6:27"},"nativeSrc":"34914:9:27","nodeType":"YulFunctionCall","src":"34914:9:27"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:27","nodeType":"YulIdentifier","src":"34907:6:27"},"nativeSrc":"34907:17:27","nodeType":"YulFunctionCall","src":"34907:17:27"},"variableNames":[{"name":"u","nativeSrc":"34902:1:27","nodeType":"YulIdentifier","src":"34902:1:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7833,"isOffset":false,"isSlot":false,"src":"34921:1:27","valueSize":1},{"declaration":7836,"isOffset":false,"isSlot":false,"src":"34902:1:27","valueSize":1}],"flags":["memory-safe"],"id":7838,"nodeType":"InlineAssembly","src":"34863:71:27"}]},"documentation":{"id":7831,"nodeType":"StructuredDocumentation","src":"34700:90:27","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7840,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:27","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"b","nameLocation":"34816:1:27","nodeType":"VariableDeclaration","scope":7840,"src":"34811:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7832,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:27"},"returnParameters":{"id":7837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7836,"mutability":"mutable","name":"u","nameLocation":"34850:1:27","nodeType":"VariableDeclaration","scope":7840,"src":"34842:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:27"},"scope":7841,"src":"34795:145:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7842,"src":"769:34173:27","usedErrors":[6086,6091,6098,6103],"usedEvents":[]}],"src":"192:34751:27"},"id":27},"contracts/UUPSMultiToken.sol":{"ast":{"absolutePath":"contracts/UUPSMultiToken.sol","exportedSymbols":{"ERC1155BurnableUpgradeable":[1737],"ERC1155PausableUpgradeable":[1792],"ERC1155Upgradeable":[1641],"Initializable":[462],"OwnableUpgradeable":[194],"UUPSMultiToken":[8010],"UUPSUpgradeable":[644]},"id":8011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7843,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:28"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","id":7845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":1642,"src":"107:108:28","symbolAliases":[{"foreign":{"id":7844,"name":"ERC1155Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"115:18:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol","id":7847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":1738,"src":"216:135:28","symbolAliases":[{"foreign":{"id":7846,"name":"ERC1155BurnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"224:26:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol","id":7849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":1793,"src":"352:135:28","symbolAliases":[{"foreign":{"id":7848,"name":"ERC1155PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"360:26:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":463,"src":"488:96:28","symbolAliases":[{"foreign":{"id":7850,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"496:13:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":7853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":195,"src":"585:101:28","symbolAliases":[{"foreign":{"id":7852,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"593:18:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7855,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8011,"sourceUnit":645,"src":"687:100:28","symbolAliases":[{"foreign":{"id":7854,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"695:15:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7856,"name":"Initializable","nameLocations":["816:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"816:13:28"},"id":7857,"nodeType":"InheritanceSpecifier","src":"816:13:28"},{"baseName":{"id":7858,"name":"ERC1155Upgradeable","nameLocations":["831:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"831:18:28"},"id":7859,"nodeType":"InheritanceSpecifier","src":"831:18:28"},{"baseName":{"id":7860,"name":"OwnableUpgradeable","nameLocations":["851:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"851:18:28"},"id":7861,"nodeType":"InheritanceSpecifier","src":"851:18:28"},{"baseName":{"id":7862,"name":"ERC1155PausableUpgradeable","nameLocations":["871:26:28"],"nodeType":"IdentifierPath","referencedDeclaration":1792,"src":"871:26:28"},"id":7863,"nodeType":"InheritanceSpecifier","src":"871:26:28"},{"baseName":{"id":7864,"name":"ERC1155BurnableUpgradeable","nameLocations":["899:26:28"],"nodeType":"IdentifierPath","referencedDeclaration":1737,"src":"899:26:28"},"id":7865,"nodeType":"InheritanceSpecifier","src":"899:26:28"},{"baseName":{"id":7866,"name":"UUPSUpgradeable","nameLocations":["927:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"927:15:28"},"id":7867,"nodeType":"InheritanceSpecifier","src":"927:15:28"}],"canonicalName":"UUPSMultiToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8010,"linearizedBaseContracts":[8010,644,2069,1737,1792,1998,194,1641,2206,2691,2633,2038,4455,1838,462],"name":"UUPSMultiToken","nameLocation":"798:14:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7874,"nodeType":"Block","src":"1016:39:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7871,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1026:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"ExpressionStatement","src":"1026:22:28"}]},"documentation":{"id":7868,"nodeType":"StructuredDocumentation","src":"949:48:28","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":7875,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[],"src":"1013:2:28"},"returnParameters":{"id":7870,"nodeType":"ParameterList","parameters":[],"src":"1016:0:28"},"scope":8010,"src":"1002:53:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7899,"nodeType":"Block","src":"1122:198:28","statements":[{"expression":{"arguments":[{"hexValue":"697066733a2f2f516d555550532f7b69647d2e6a736f6e","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1147:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3edb8a0416f688748176adfe433739ca9eb27340f9ed57d80d6e55a635e6e755","typeString":"literal_string \"ipfs://QmUUPS/{id}.json\""},"value":"ipfs://QmUUPS/{id}.json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3edb8a0416f688748176adfe433739ca9eb27340f9ed57d80d6e55a635e6e755","typeString":"literal_string \"ipfs://QmUUPS/{id}.json\""}],"id":7882,"name":"__ERC1155_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"1132:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1132:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7885,"nodeType":"ExpressionStatement","src":"1132:41:28"},{"expression":{"arguments":[{"id":7887,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"1198:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7886,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1183:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7889,"nodeType":"ExpressionStatement","src":"1183:28:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7890,"name":"__ERC1155Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"1221:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7892,"nodeType":"ExpressionStatement","src":"1221:24:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7893,"name":"__ERC1155Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"1255:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1255:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7895,"nodeType":"ExpressionStatement","src":"1255:24:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7896,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1289:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7898,"nodeType":"ExpressionStatement","src":"1289:24:28"}]},"functionSelector":"c4d66de8","id":7900,"implemented":true,"kind":"function","modifiers":[{"id":7880,"kind":"modifierInvocation","modifierName":{"id":7879,"name":"initializer","nameLocations":["1110:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1110:11:28"},"nodeType":"ModifierInvocation","src":"1110:11:28"}],"name":"initialize","nameLocation":"1070:10:28","nodeType":"FunctionDefinition","parameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"initialOwner","nameLocation":"1089:12:28","nodeType":"VariableDeclaration","scope":7900,"src":"1081:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7876,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1080:22:28"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[],"src":"1122:0:28"},"scope":8010,"src":"1061:259:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7911,"nodeType":"Block","src":"1381:32:28","statements":[{"expression":{"arguments":[{"id":7908,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7902,"src":"1399:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7907,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1391:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1391:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7910,"nodeType":"ExpressionStatement","src":"1391:15:28"}]},"functionSelector":"02fe5305","id":7912,"implemented":true,"kind":"function","modifiers":[{"id":7905,"kind":"modifierInvocation","modifierName":{"id":7904,"name":"onlyOwner","nameLocations":["1371:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1371:9:28"},"nodeType":"ModifierInvocation","src":"1371:9:28"}],"name":"setURI","nameLocation":"1335:6:28","nodeType":"FunctionDefinition","parameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"newuri","nameLocation":"1356:6:28","nodeType":"VariableDeclaration","scope":7912,"src":"1342:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7901,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:22:28"},"returnParameters":{"id":7906,"nodeType":"ParameterList","parameters":[],"src":"1381:0:28"},"scope":8010,"src":"1326:87:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7920,"nodeType":"Block","src":"1453:25:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7917,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1463:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7919,"nodeType":"ExpressionStatement","src":"1463:8:28"}]},"functionSelector":"8456cb59","id":7921,"implemented":true,"kind":"function","modifiers":[{"id":7915,"kind":"modifierInvocation","modifierName":{"id":7914,"name":"onlyOwner","nameLocations":["1443:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1443:9:28"},"nodeType":"ModifierInvocation","src":"1443:9:28"}],"name":"pause","nameLocation":"1428:5:28","nodeType":"FunctionDefinition","parameters":{"id":7913,"nodeType":"ParameterList","parameters":[],"src":"1433:2:28"},"returnParameters":{"id":7916,"nodeType":"ParameterList","parameters":[],"src":"1453:0:28"},"scope":8010,"src":"1419:59:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7929,"nodeType":"Block","src":"1520:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7926,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1530:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7928,"nodeType":"ExpressionStatement","src":"1530:10:28"}]},"functionSelector":"3f4ba83a","id":7930,"implemented":true,"kind":"function","modifiers":[{"id":7924,"kind":"modifierInvocation","modifierName":{"id":7923,"name":"onlyOwner","nameLocations":["1510:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1510:9:28"},"nodeType":"ModifierInvocation","src":"1510:9:28"}],"name":"unpause","nameLocation":"1493:7:28","nodeType":"FunctionDefinition","parameters":{"id":7922,"nodeType":"ParameterList","parameters":[],"src":"1500:2:28"},"returnParameters":{"id":7925,"nodeType":"ParameterList","parameters":[],"src":"1520:0:28"},"scope":8010,"src":"1484:63:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7950,"nodeType":"Block","src":"1668:49:28","statements":[{"expression":{"arguments":[{"id":7944,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"1684:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7945,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"1693:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7946,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"1697:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"1705:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7943,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"1678:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7949,"nodeType":"ExpressionStatement","src":"1678:32:28"}]},"functionSelector":"731133e9","id":7951,"implemented":true,"kind":"function","modifiers":[{"id":7941,"kind":"modifierInvocation","modifierName":{"id":7940,"name":"onlyOwner","nameLocations":["1654:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1654:9:28"},"nodeType":"ModifierInvocation","src":"1654:9:28"}],"name":"mint","nameLocation":"1562:4:28","nodeType":"FunctionDefinition","parameters":{"id":7939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"account","nameLocation":"1575:7:28","nodeType":"VariableDeclaration","scope":7951,"src":"1567:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7931,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7934,"mutability":"mutable","name":"id","nameLocation":"1592:2:28","nodeType":"VariableDeclaration","scope":7951,"src":"1584:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1584:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7936,"mutability":"mutable","name":"amount","nameLocation":"1604:6:28","nodeType":"VariableDeclaration","scope":7951,"src":"1596:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7938,"mutability":"mutable","name":"data","nameLocation":"1625:4:28","nodeType":"VariableDeclaration","scope":7951,"src":"1612:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7937,"name":"bytes","nodeType":"ElementaryTypeName","src":"1612:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1566:64:28"},"returnParameters":{"id":7942,"nodeType":"ParameterList","parameters":[],"src":"1668:0:28"},"scope":8010,"src":"1553:164:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7973,"nodeType":"Block","src":"1858:51:28","statements":[{"expression":{"arguments":[{"id":7967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"1879:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7968,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"1883:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7969,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"1888:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7970,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"1897:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7966,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1868:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7972,"nodeType":"ExpressionStatement","src":"1868:34:28"}]},"functionSelector":"1f7fdffa","id":7974,"implemented":true,"kind":"function","modifiers":[{"id":7964,"kind":"modifierInvocation","modifierName":{"id":7963,"name":"onlyOwner","nameLocations":["1844:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1844:9:28"},"nodeType":"ModifierInvocation","src":"1844:9:28"}],"name":"mintBatch","nameLocation":"1732:9:28","nodeType":"FunctionDefinition","parameters":{"id":7962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7953,"mutability":"mutable","name":"to","nameLocation":"1750:2:28","nodeType":"VariableDeclaration","scope":7974,"src":"1742:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7952,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7956,"mutability":"mutable","name":"ids","nameLocation":"1771:3:28","nodeType":"VariableDeclaration","scope":7974,"src":"1754:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7955,"nodeType":"ArrayTypeName","src":"1754:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7959,"mutability":"mutable","name":"amounts","nameLocation":"1793:7:28","nodeType":"VariableDeclaration","scope":7974,"src":"1776:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7958,"nodeType":"ArrayTypeName","src":"1776:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7961,"mutability":"mutable","name":"data","nameLocation":"1815:4:28","nodeType":"VariableDeclaration","scope":7974,"src":"1802:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7960,"name":"bytes","nodeType":"ElementaryTypeName","src":"1802:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1741:79:28"},"returnParameters":{"id":7965,"nodeType":"ParameterList","parameters":[],"src":"1858:0:28"},"scope":8010,"src":"1723:186:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[598],"body":{"id":7982,"nodeType":"Block","src":"2025:2:28","statements":[]},"id":7983,"implemented":true,"kind":"function","modifiers":[{"id":7980,"kind":"modifierInvocation","modifierName":{"id":7979,"name":"onlyOwner","nameLocations":["2011:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2011:9:28"},"nodeType":"ModifierInvocation","src":"2011:9:28"}],"name":"_authorizeUpgrade","nameLocation":"1924:17:28","nodeType":"FunctionDefinition","overrides":{"id":7978,"nodeType":"OverrideSpecifier","overrides":[],"src":"1994:8:28"},"parameters":{"id":7977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7976,"mutability":"mutable","name":"newImplementation","nameLocation":"1950:17:28","nodeType":"VariableDeclaration","scope":7983,"src":"1942:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7975,"name":"address","nodeType":"ElementaryTypeName","src":"1942:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1941:27:28"},"returnParameters":{"id":7981,"nodeType":"ParameterList","parameters":[],"src":"2025:0:28"},"scope":8010,"src":"1915:112:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1174,1791],"body":{"id":8008,"nodeType":"Block","src":"2277:53:28","statements":[{"expression":{"arguments":[{"id":8002,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"2301:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7987,"src":"2307:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8004,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"2311:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8005,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"2316:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":7999,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2287:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UUPSMultiToken_$8010_$","typeString":"type(contract super UUPSMultiToken)"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2293:7:28","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1791,"src":"2287:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8007,"nodeType":"ExpressionStatement","src":"2287:36:28"}]},"id":8009,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2110:7:28","nodeType":"FunctionDefinition","overrides":{"id":7997,"nodeType":"OverrideSpecifier","overrides":[{"id":7995,"name":"ERC1155Upgradeable","nameLocations":["2225:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"2225:18:28"},{"id":7996,"name":"ERC1155PausableUpgradeable","nameLocations":["2245:26:28"],"nodeType":"IdentifierPath","referencedDeclaration":1792,"src":"2245:26:28"}],"src":"2216:56:28"},"parameters":{"id":7994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7985,"mutability":"mutable","name":"from","nameLocation":"2126:4:28","nodeType":"VariableDeclaration","scope":8009,"src":"2118:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7984,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7987,"mutability":"mutable","name":"to","nameLocation":"2140:2:28","nodeType":"VariableDeclaration","scope":8009,"src":"2132:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7986,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7990,"mutability":"mutable","name":"ids","nameLocation":"2161:3:28","nodeType":"VariableDeclaration","scope":8009,"src":"2144:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7989,"nodeType":"ArrayTypeName","src":"2144:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7993,"mutability":"mutable","name":"values","nameLocation":"2183:6:28","nodeType":"VariableDeclaration","scope":8009,"src":"2166:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7992,"nodeType":"ArrayTypeName","src":"2166:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2117:73:28"},"returnParameters":{"id":7998,"nodeType":"ParameterList","parameters":[],"src":"2277:0:28"},"scope":8010,"src":"2101:229:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8011,"src":"789:1543:28","usedErrors":[30,35,211,214,489,494,1877,1880,2171,2176,2181,2188,2193,2198,2205,2226,2239,2855,4128],"usedEvents":[41,219,1869,1874,2046,2530,2545,2554,2561]}],"src":"81:2252:28"},"id":28}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol":{"ERC1155BurnableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol\":\"ERC1155BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol\":{\"keccak256\":\"0x235663392e8add928a0bfa535d22c7304eb81703f6c73e755f3145120d47319e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10efbeed0e0892488f3499a444f4fdce06f25072807a924d4afd9a482cd4aab8\",\"dweb:/ipfs/QmNhC6ruQc7q5yBtH2f4h4HiFRDij1pmYZady4CGEWJ8WP\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol":{"ERC1155PausableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","paused()":"5c975abb","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":\"ERC1155PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":{\"keccak256\":\"0xdb9e44a214d97544cf0d65db9794a7d2bf67285cbfd14ed296665f7b13182ccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2879c15dd81f2fb7d630f1bb8e6e0e86f84b337c871d49f7636ef343392fa362\",\"dweb:/ipfs/QmYzxzLibEbmbdMqXsxdjwXn6gdGrKdLFJZLkCoDQTNjwt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047427e8711704a331d8017081f85c1a3fb817c982765b6fa0dad83f4043be28264736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE TIMESTAMP PUSH31 0x8711704A331D8017081F85C1A3FB817C982765B6FA0DAD83F4043BE2826473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"496:5741:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047427e8711704a331d8017081f85c1a3fb817c982765b6fa0dad83f4043be28264736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE TIMESTAMP PUSH31 0x8711704A331D8017081F85C1A3FB817C982765B6FA0DAD83F4043BE2826473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"496:5741:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9a3cce9da392c71bf606b91abcd25c63a800ddfc250a67a9af7f4c28d91b86364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 0xCC 0xE9 0xDA CODECOPY 0x2C PUSH18 0xBF606B91ABCD25C63A800DDFC250A67A9AF7 DELEGATECALL 0xC2 DUP14 SWAP2 0xB8 PUSH4 0x64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"439:3114:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3114:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9a3cce9da392c71bf606b91abcd25c63a800ddfc250a67a9af7f4c28d91b86364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 0xCC 0xE9 0xDA CODECOPY 0x2C PUSH18 0xBF606B91ABCD25C63A800DDFC250A67A9AF7 DELEGATECALL 0xC2 DUP14 SWAP2 0xB8 PUSH4 0x64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"439:3114:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052e92128220d2ac019f7354cfe74f18425054ee413c48861ca71a9c8ba242b1864736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xE9 0x21 0x28 0x22 0xD 0x2A 0xC0 NOT 0xF7 CALLDATALOAD 0x4C INVALID PUSH21 0xF18425054EE413C48861CA71A9C8BA242B1864736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"233:5762:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052e92128220d2ac019f7354cfe74f18425054ee413c48861ca71a9c8ba242b1864736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xE9 0x21 0x28 0x22 0xD 0x2A 0xC0 NOT 0xF7 CALLDATALOAD 0x4C INVALID PUSH21 0xF18425054EE413C48861CA71A9C8BA242B1864736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"233:5762:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d6c0ef18e4758080ccb2a72c56a53d43f347ddf7edeb27b95fd161e1f7b100364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH13 0xEF18E4758080CCB2A72C56A53 0xD4 EXTCODEHASH CALLVALUE PUSH30 0xDF7EDEB27B95FD161E1F7B100364736F6C634300081B0033000000000000 ","sourceMap":"459:20446:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:20446:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d6c0ef18e4758080ccb2a72c56a53d43f347ddf7edeb27b95fd161e1f7b100364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH13 0xEF18E4758080CCB2A72C56A53 0xD4 EXTCODEHASH CALLVALUE PUSH30 0xDF7EDEB27B95FD161E1F7B100364736F6C634300081B0033000000000000 ","sourceMap":"459:20446:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030d32b487b64e7bb940925acbe0cec2abaab0fe21db482dd0bf179158ee42b2264736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xD3 0x2B BASEFEE PUSH28 0x64E7BB940925ACBE0CEC2ABAAB0FE21DB482DD0BF179158EE42B2264 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"224:218:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122030d32b487b64e7bb940925acbe0cec2abaab0fe21db482dd0bf179158ee42b2264736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xD3 0x2B BASEFEE PUSH28 0x64E7BB940925ACBE0CEC2ABAAB0FE21DB482DD0BF179158EE42B2264 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"224:218:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCB 0xBF 0xCC SUB 0xC4 PUSH1 0x26 SWAP2 CREATE 0xAD PUSH6 0xDE9EC6369AEA 0xDA SWAP8 LOG4 SWAP10 REVERT 0xC5 0xD6 PUSH12 0x7E00FB39ED8564736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dcbbfcc03c4602691f0ad65de9ec6369aeada97a499fdc5d66b7e00fb39ed8564736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCB 0xBF 0xCC SUB 0xC4 PUSH1 0x26 SWAP2 CREATE 0xAD PUSH6 0xDE9EC6369AEA 0xDA SWAP8 LOG4 SWAP10 REVERT 0xC5 0xD6 PUSH12 0x7E00FB39ED8564736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc3b563bce080e73bd6a1e9b10922264765dfc0ef12e0e298363cf853c78405964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC EXTCODESIZE JUMP EXTCODESIZE 0xCE ADDMOD 0xE PUSH20 0xBD6A1E9B10922264765DFC0EF12E0E298363CF85 EXTCODECOPY PUSH25 0x405964736F6C634300081B0033000000000000000000000000 ","sourceMap":"1599:3723:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc3b563bce080e73bd6a1e9b10922264765dfc0ef12e0e298363cf853c78405964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC EXTCODESIZE JUMP EXTCODESIZE 0xCE ADDMOD 0xE PUSH20 0xBD6A1E9B10922264765DFC0EF12E0E298363CF85 EXTCODECOPY PUSH25 0x405964736F6C634300081B0033000000000000000000000000 ","sourceMap":"1599:3723:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/UUPSMultiToken.sol":{"UUPSMultiToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7875":{"entryPoint":null,"id":7875,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":34,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:216:29","nodeType":"YulBlock","src":"0:216:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"113:101:29","nodeType":"YulBlock","src":"113:101:29","statements":[{"nativeSrc":"123:26:29","nodeType":"YulAssignment","src":"123:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:29","nodeType":"YulIdentifier","src":"135:9:29"},{"kind":"number","nativeSrc":"146:2:29","nodeType":"YulLiteral","src":"146:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:29","nodeType":"YulIdentifier","src":"131:3:29"},"nativeSrc":"131:18:29","nodeType":"YulFunctionCall","src":"131:18:29"},"variableNames":[{"name":"tail","nativeSrc":"123:4:29","nodeType":"YulIdentifier","src":"123:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:29","nodeType":"YulIdentifier","src":"165:9:29"},{"arguments":[{"name":"value0","nativeSrc":"180:6:29","nodeType":"YulIdentifier","src":"180:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"196:2:29","nodeType":"YulLiteral","src":"196:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"200:1:29","nodeType":"YulLiteral","src":"200:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"192:3:29","nodeType":"YulIdentifier","src":"192:3:29"},"nativeSrc":"192:10:29","nodeType":"YulFunctionCall","src":"192:10:29"},{"kind":"number","nativeSrc":"204:1:29","nodeType":"YulLiteral","src":"204:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"188:3:29","nodeType":"YulIdentifier","src":"188:3:29"},"nativeSrc":"188:18:29","nodeType":"YulFunctionCall","src":"188:18:29"}],"functionName":{"name":"and","nativeSrc":"176:3:29","nodeType":"YulIdentifier","src":"176:3:29"},"nativeSrc":"176:31:29","nodeType":"YulFunctionCall","src":"176:31:29"}],"functionName":{"name":"mstore","nativeSrc":"158:6:29","nodeType":"YulIdentifier","src":"158:6:29"},"nativeSrc":"158:50:29","nodeType":"YulFunctionCall","src":"158:50:29"},"nativeSrc":"158:50:29","nodeType":"YulExpressionStatement","src":"158:50:29"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:29","nodeType":"YulTypedName","src":"82:9:29","type":""},{"name":"value0","nativeSrc":"93:6:29","nodeType":"YulTypedName","src":"93:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:29","nodeType":"YulTypedName","src":"104:4:29","type":""}],"src":"14:200:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516122736100fd60003960008181610c1701528181610c400152610d8101526122736000f3fe60806040526004361061013f5760003560e01c80636b20c454116100b6578063ad3cb1cc1161006f578063ad3cb1cc14610396578063c4d66de8146103c7578063e985e9c5146103e7578063f242432a14610407578063f2fde38b14610427578063f5298aca1461044757600080fd5b80636b20c454146102c5578063715018a6146102e5578063731133e9146102fa5780638456cb591461031a5780638da5cb5b1461032f578063a22cb4651461037657600080fd5b80632eb2c2d6116101085780632eb2c2d6146102165780633f4ba83a146102365780634e1273f41461024b5780634f1ef2861461027857806352d1902d1461028b5780635c975abb146102a057600080fd5b8062fdd58e1461014457806301ffc9a71461017757806302fe5305146101a75780630e89341c146101c95780631f7fdffa146101f6575b600080fd5b34801561015057600080fd5b5061016461015f366004611851565b610467565b6040519081526020015b60405180910390f35b34801561018357600080fd5b50610197610192366004611891565b61049e565b604051901515815260200161016e565b3480156101b357600080fd5b506101c76101c236600461194f565b6104ee565b005b3480156101d557600080fd5b506101e96101e436600461199f565b610502565b60405161016e9190611a08565b34801561020257600080fd5b506101c7610211366004611acb565b6105c7565b34801561022257600080fd5b506101c7610231366004611b6d565b6105e1565b34801561024257600080fd5b506101c761064d565b34801561025757600080fd5b5061026b610266366004611c20565b61065f565b60405161016e9190611d23565b6101c7610286366004611d36565b61072b565b34801561029757600080fd5b5061016461074a565b3480156102ac57600080fd5b5060008051602061221e8339815191525460ff16610197565b3480156102d157600080fd5b506101c76102e0366004611d79565b610767565b3480156102f157600080fd5b506101c76107cb565b34801561030657600080fd5b506101c7610315366004611df0565b6107dd565b34801561032657600080fd5b506101c76107f1565b34801561033b57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161016e565b34801561038257600080fd5b506101c7610391366004611e38565b610801565b3480156103a257600080fd5b506101e9604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103d357600080fd5b506101c76103e2366004611e74565b61080c565b3480156103f357600080fd5b50610197610402366004611e8f565b61095b565b34801561041357600080fd5b506101c7610422366004611ec2565b6109a8565b34801561043357600080fd5b506101c7610442366004611e74565b610a07565b34801561045357600080fd5b506101c7610462366004611f1a565b610a42565b60008181526000805160206121fe833981519152602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806104cf57506001600160e01b031982166303a24d0760e21b145b8061049857506301ffc9a760e01b6001600160e01b0319831614610498565b6104f6610a78565b6104ff81610ad3565b50565b7f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c450280546060916000805160206121fe8339815191529161054190611f4d565b80601f016020809104026020016040519081016040528092919081815260200182805461056d90611f4d565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b5050505050915050919050565b6105cf610a78565b6105db84848484610b0d565b50505050565b336001600160a01b03861681148015906106025750610600868261095b565b155b156106385760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6106458686868686610b45565b505050505050565b610655610a78565b61065d610bac565b565b606081518351146106905781518351604051635b05999160e01b81526004810192909252602482015260440161062f565b600083516001600160401b038111156106ab576106ab6118ae565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060005b8451811015610723576020808202860101516106fe90602080840287010151610467565b82828151811061071057610710611f87565b60209081029190910101526001016106da565b509392505050565b610733610c0c565b61073c82610cb1565b6107468282610cb9565b5050565b6000610754610d76565b506000805160206121de83398151915290565b6001600160a01b03831633148015906107875750610785833361095b565b155b156107bb57335b60405163711bec9160e11b81526001600160a01b039182166004820152908416602482015260440161062f565b6107c6838383610dbf565b505050565b6107d3610a78565b61065d6000610e05565b6107e5610a78565b6105db84848484610e76565b6107f9610a78565b61065d610ed3565b610746338383610f1c565b6000610816610fc4565b805490915060ff600160401b82041615906001600160401b031660008115801561083d5750825b90506000826001600160401b031660011480156108595750303b155b905081158015610867575080155b156108855760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108af57845460ff60401b1916600160401b1785555b6108ed6040518060400160405280601781526020017f697066733a2f2f516d555550532f7b69647d2e6a736f6e000000000000000000815250610fed565b6108f686610ffe565b6108fe61100f565b61090661100f565b61090e61100f565b831561064557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6001600160a01b0391821660009081527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906109c957506109c7868261095b565b155b156109fa5760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161062f565b6106458686868686611017565b610a0f610a78565b6001600160a01b038116610a3957604051631e4fbdf760e01b81526000600482015260240161062f565b6104ff81610e05565b6001600160a01b0383163314801590610a625750610a60833361095b565b155b15610a6d573361078e565b6107c68383836110a5565b33610aaa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461065d5760405163118cdaa760e01b815233600482015260240161062f565b6000805160206121fe8339815191527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45026107c68382611fe4565b6001600160a01b038416610b3757604051632bfa23e760e11b81526000600482015260240161062f565b6105db600085858585611109565b6001600160a01b038416610b6f57604051632bfa23e760e11b81526000600482015260240161062f565b6001600160a01b038516610b9857604051626a0d4560e21b81526000600482015260240161062f565b610ba58585858585611109565b5050505050565b610bb461115c565b60008051602061221e833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c9357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c876000805160206121de833981519152546001600160a01b031690565b6001600160a01b031614155b1561065d5760405163703e46dd60e11b815260040160405180910390fd5b6104ff610a78565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d13575060408051601f3d908101601f19168201909252610d10918101906120a2565b60015b610d3b57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161062f565b6000805160206121de8339815191528114610d6c57604051632a87526960e21b81526004810182905260240161062f565b6107c6838361118c565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065d5760405163703e46dd60e11b815260040160405180910390fd5b6001600160a01b038316610de857604051626a0d4560e21b81526000600482015260240161062f565b6107c6836000848460405180602001604052806000815250611109565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6001600160a01b038416610ea057604051632bfa23e760e11b81526000600482015260240161062f565b60408051600180825260208201869052818301908152606082018590526080820190925290610645600087848487611109565b610edb6111e2565b60008051602061221e833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610bee565b6000805160206121fe8339815191526001600160a01b038316610f545760405162ced3e160e81b81526000600482015260240161062f565b6001600160a01b038481166000818152600184016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610498565b610ff5611213565b6104ff81611238565b611006611213565b6104ff81611240565b61065d611213565b6001600160a01b03841661104157604051632bfa23e760e11b81526000600482015260240161062f565b6001600160a01b03851661106a57604051626a0d4560e21b81526000600482015260240161062f565b6040805160018082526020820186905281830190815260608201859052608082019092529061109c8787848487611109565b50505050505050565b6001600160a01b0383166110ce57604051626a0d4560e21b81526000600482015260240161062f565b604080516001808252602082018590528183019081526060820184905260a08201909252600060808201818152919291610ba5918791859085905b61111585858585611248565b6001600160a01b03841615610ba5578251339060010361114e5760208481015190840151611147838989858589611254565b5050610645565b610645818787878787611378565b60008051602061221e8339815191525460ff1661065d57604051638dfc202b60e01b815260040160405180910390fd5b61119582611461565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156111da576107c682826114c6565b61074661153c565b60008051602061221e8339815191525460ff161561065d5760405163d93c066560e01b815260040160405180910390fd5b61121b61155b565b61065d57604051631afcd79f60e31b815260040160405180910390fd5b6104f6611213565b610a0f611213565b6105db84848484611575565b6001600160a01b0384163b156106455760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061129890899089908890889088906004016120bb565b6020604051808303816000875af19250505080156112d3575060408051601f3d908101601f191682019092526112d091810190612100565b60015b61133c573d808015611301576040519150601f19603f3d011682016040523d82523d6000602084013e611306565b606091505b50805160000361133457604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b1461109c57604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b6001600160a01b0384163b156106455760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113bc908990899088908890889060040161211d565b6020604051808303816000875af19250505080156113f7575060408051601f3d908101601f191682019092526113f491810190612100565b60015b611425573d808015611301576040519150601f19603f3d011682016040523d82523d6000602084013e611306565b6001600160e01b0319811663bc197c8160e01b1461109c57604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b806001600160a01b03163b60000361149757604051634c9c8ce360e01b81526001600160a01b038216600482015260240161062f565b6000805160206121de83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114e3919061217b565b600060405180830381855af49150503d806000811461151e576040519150601f19603f3d011682016040523d82523d6000602084013e611523565b606091505b5091509150611533858383611589565b95945050505050565b341561065d5760405163b398979f60e01b815260040160405180910390fd5b6000611565610fc4565b54600160401b900460ff16919050565b61157d6111e2565b6105db848484846115e8565b60608261159e576115998261180d565b6115e1565b81511580156115b557506001600160a01b0384163b155b156115de57604051639996b31560e01b81526001600160a01b038516600482015260240161062f565b50805b9392505050565b805182516000805160206121fe83398151915291146116275782518251604051635b05999160e01b81526004810192909252602482015260440161062f565b3360005b845181101561172d576020818102868101820151908601909101516001600160a01b038916156116de576000828152602086815260408083206001600160a01b038d168452909152902054818110156116b7576040516303dee4c560e01b81526001600160a01b038b16600482015260248101829052604481018390526064810184905260840161062f565b6000838152602087815260408083206001600160a01b038e16845290915290209082900390555b6001600160a01b03881615611723576000828152602086815260408083206001600160a01b038c1684529091528120805483929061171d908490612197565b90915550505b505060010161162b565b5083516001036117ae5760208401516000906020850151909150866001600160a01b0316886001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161179f929190918252602082015260400190565b60405180910390a45050610645565b846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516117fd9291906121b8565b60405180910390a4505050505050565b80511561181c57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b038116811461184c57600080fd5b919050565b6000806040838503121561186457600080fd5b61186d83611835565b946020939093013593505050565b6001600160e01b0319811681146104ff57600080fd5b6000602082840312156118a357600080fd5b81356115e18161187b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118ec576118ec6118ae565b604052919050565b6000806001600160401b0384111561190e5761190e6118ae565b50601f8301601f1916602001611923816118c4565b91505082815283838301111561193857600080fd5b828260208301376000602084830101529392505050565b60006020828403121561196157600080fd5b81356001600160401b0381111561197757600080fd5b8201601f8101841361198857600080fd5b611997848235602084016118f4565b949350505050565b6000602082840312156119b157600080fd5b5035919050565b60005b838110156119d35781810151838201526020016119bb565b50506000910152565b600081518084526119f48160208601602086016119b8565b601f01601f19169290920160200192915050565b6020815260006115e160208301846119dc565b60006001600160401b03821115611a3457611a346118ae565b5060051b60200190565b600082601f830112611a4f57600080fd5b8135611a62611a5d82611a1b565b6118c4565b8082825260208201915060208360051b860101925085831115611a8457600080fd5b602085015b83811015611aa1578035835260209283019201611a89565b5095945050505050565b600082601f830112611abc57600080fd5b6115e1838335602085016118f4565b60008060008060808587031215611ae157600080fd5b611aea85611835565b935060208501356001600160401b03811115611b0557600080fd5b611b1187828801611a3e565b93505060408501356001600160401b03811115611b2d57600080fd5b611b3987828801611a3e565b92505060608501356001600160401b03811115611b5557600080fd5b611b6187828801611aab565b91505092959194509250565b600080600080600060a08688031215611b8557600080fd5b611b8e86611835565b9450611b9c60208701611835565b935060408601356001600160401b03811115611bb757600080fd5b611bc388828901611a3e565b93505060608601356001600160401b03811115611bdf57600080fd5b611beb88828901611a3e565b92505060808601356001600160401b03811115611c0757600080fd5b611c1388828901611aab565b9150509295509295909350565b60008060408385031215611c3357600080fd5b82356001600160401b03811115611c4957600080fd5b8301601f81018513611c5a57600080fd5b8035611c68611a5d82611a1b565b8082825260208201915060208360051b850101925087831115611c8a57600080fd5b6020840193505b82841015611cb357611ca284611835565b825260209384019390910190611c91565b945050505060208301356001600160401b03811115611cd157600080fd5b611cdd85828601611a3e565b9150509250929050565b600081518084526020840193506020830160005b82811015611d19578151865260209586019590910190600101611cfb565b5093949350505050565b6020815260006115e16020830184611ce7565b60008060408385031215611d4957600080fd5b611d5283611835565b915060208301356001600160401b03811115611d6d57600080fd5b611cdd85828601611aab565b600080600060608486031215611d8e57600080fd5b611d9784611835565b925060208401356001600160401b03811115611db257600080fd5b611dbe86828701611a3e565b92505060408401356001600160401b03811115611dda57600080fd5b611de686828701611a3e565b9150509250925092565b60008060008060808587031215611e0657600080fd5b611e0f85611835565b9350602085013592506040850135915060608501356001600160401b03811115611b5557600080fd5b60008060408385031215611e4b57600080fd5b611e5483611835565b915060208301358015158114611e6957600080fd5b809150509250929050565b600060208284031215611e8657600080fd5b6115e182611835565b60008060408385031215611ea257600080fd5b611eab83611835565b9150611eb960208401611835565b90509250929050565b600080600080600060a08688031215611eda57600080fd5b611ee386611835565b9450611ef160208701611835565b9350604086013592506060860135915060808601356001600160401b03811115611c0757600080fd5b600080600060608486031215611f2f57600080fd5b611f3884611835565b95602085013595506040909401359392505050565b600181811c90821680611f6157607f821691505b602082108103611f8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f8211156107c657806000526020600020601f840160051c81016020851015611fc45750805b601f840160051c820191505b81811015610ba55760008155600101611fd0565b81516001600160401b03811115611ffd57611ffd6118ae565b6120118161200b8454611f4d565b84611f9d565b6020601f821160018114612045576000831561202d5750848201515b600019600385901b1c1916600184901b178455610ba5565b600084815260208120601f198516915b828110156120755787850151825560209485019460019092019101612055565b50848210156120935786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000602082840312156120b457600080fd5b5051919050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906120f5908301846119dc565b979650505050505050565b60006020828403121561211257600080fd5b81516115e18161187b565b6001600160a01b0386811682528516602082015260a06040820181905260009061214990830186611ce7565b828103606084015261215b8186611ce7565b9050828103608084015261216f81856119dc565b98975050505050505050565b6000825161218d8184602087016119b8565b9190910192915050565b8082018082111561049857634e487b7160e01b600052601160045260246000fd5b6040815260006121cb6040830185611ce7565b82810360208401526115338185611ce756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203a064c90ddf6e2170e7357e5baef41af5fff5efbf13ffd42ce31136261de631064736f6c634300081b0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x72 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD1 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2273 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC17 ADD MSTORE DUP2 DUP2 PUSH2 0xC40 ADD MSTORE PUSH2 0xD81 ADD MSTORE PUSH2 0x2273 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1F6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x64D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C20 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x7CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x7F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E38 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4CF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x498 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x498 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0xAD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x541 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x1F4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CF PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x602 JUMPI POP PUSH2 0x600 DUP7 DUP3 PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x645 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x655 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xBAC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x690 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x6FE SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x467 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x710 JUMPI PUSH2 0x710 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6DA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x733 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x746 DUP3 DUP3 PUSH2 0xCB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x754 PUSH2 0xD76 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x787 JUMPI POP PUSH2 0x785 DUP4 CALLER PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7BB JUMPI CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 DUP4 PUSH2 0xDBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH1 0x0 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x746 CALLER DUP4 DUP4 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x816 PUSH2 0xFC4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x859 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x8AF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x8ED PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F516D555550532F7B69647D2E6A736F6E000000000000000000 DUP2 MSTORE POP PUSH2 0xFED JUMP JUMPDEST PUSH2 0x8F6 DUP7 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x100F JUMP JUMPDEST PUSH2 0x906 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x90E PUSH2 0x100F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x645 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x9C9 JUMPI POP PUSH2 0x9C7 DUP7 DUP3 PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x645 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA62 JUMPI POP PUSH2 0xA60 DUP4 CALLER PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA6D JUMPI CALLER PUSH2 0x78E JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 DUP4 PUSH2 0x10A5 JUMP JUMPDEST CALLER PUSH2 0xAAA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 PUSH2 0x7C6 DUP4 DUP3 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x5DB PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0xBA5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xC93 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC87 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FF PUSH2 0xA78 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD13 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD10 SWAP2 DUP2 ADD SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1109 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x645 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x498 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x65D PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x109C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1109 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0xBA5 SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 JUMPDEST PUSH2 0x1115 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xBA5 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x114E JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1147 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1254 JUMP JUMPDEST POP POP PUSH2 0x645 JUMP JUMPDEST PUSH2 0x645 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1195 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x11DA JUMPI PUSH2 0x7C6 DUP3 DUP3 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121B PUSH2 0x155B JUMP JUMPDEST PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F6 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1298 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x12D0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x133C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1334 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x13BC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x211D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13F4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1425 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1497 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1533 DUP6 DUP4 DUP4 PUSH2 0x1589 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0xFC4 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157D PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x159E JUMPI PUSH2 0x1599 DUP3 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 EQ PUSH2 0x1627 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x172D JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP7 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x171D SWAP1 DUP5 SWAP1 PUSH2 0x2197 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x162B JUMP JUMPDEST POP DUP4 MLOAD PUSH1 0x1 SUB PUSH2 0x17AE JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x179F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x645 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x17FD SWAP3 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x181C JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x184C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x186D DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15E1 DUP2 PUSH2 0x187B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18EC JUMPI PUSH2 0x18EC PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x190E JUMPI PUSH2 0x190E PUSH2 0x18AE JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1923 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1997 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x18F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19BB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19F4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A34 PUSH2 0x18AE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A62 PUSH2 0x1A5D DUP3 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x18C4 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x1A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1A89 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B39 DUP8 DUP3 DUP9 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B61 DUP8 DUP3 DUP9 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8E DUP7 PUSH2 0x1835 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B9C PUSH1 0x20 DUP8 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC3 DUP9 DUP3 DUP10 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEB DUP9 DUP3 DUP10 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C13 DUP9 DUP3 DUP10 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C68 PUSH2 0x1A5D DUP3 PUSH2 0x1A1B JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x1C8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1CB3 JUMPI PUSH2 0x1CA2 DUP5 PUSH2 0x1835 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D19 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CFB JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D52 DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D97 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBE DUP7 DUP3 DUP8 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0F DUP6 PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E54 DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E1 DUP3 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EAB DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 PUSH1 0x20 DUP5 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE3 DUP7 PUSH2 0x1835 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EF1 PUSH1 0x20 DUP8 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F38 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7C6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1FC4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FD0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFD PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x2011 DUP2 PUSH2 0x200B DUP5 SLOAD PUSH2 0x1F4D JUMP JUMPDEST DUP5 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2045 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x202D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2075 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2055 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2093 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x20F5 SWAP1 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15E1 DUP2 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2149 SWAP1 DUP4 ADD DUP7 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x215B DUP2 DUP7 PUSH2 0x1CE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x216F DUP2 DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x218D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x19B8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x498 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21CB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1533 DUP2 DUP6 PUSH2 0x1CE7 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC88BE536D5240C274A3B1D3 LOG1 0xBE SLOAD BASEFEE 0x2F 0xD9 0xCA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C4500CD5ED15C6E XOR PUSH31 0x77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300A26469706673 PC 0x22 SLT KECCAK256 GASPRICE MOD 0x4C SWAP1 0xDD 0xF6 0xE2 OR 0xE PUSH20 0x57E5BAEF41AF5FFF5EFBF13FFD42CE31136261DE PUSH4 0x1064736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"789:1543:28:-:0;;;1171:4:2;1128:48;;1002:53:28;;;;;;;;;-1:-1:-1;1026:22:28;:20;:22::i;:::-;789:1543;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:29;;;8085:29:1;;146:2:29;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:29:-;789:1543:28;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_486":{"entryPoint":null,"id":486,"parameterSlots":0,"returnSlots":0},"@__ERC1155Burnable_init_1658":{"entryPoint":null,"id":1658,"parameterSlots":0,"returnSlots":0},"@__ERC1155Pausable_init_1758":{"entryPoint":4111,"id":1758,"parameterSlots":0,"returnSlots":0},"@__ERC1155_init_725":{"entryPoint":4077,"id":725,"parameterSlots":1,"returnSlots":0},"@__ERC1155_init_unchained_737":{"entryPoint":4664,"id":737,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":4094,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":4672,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_516":{"entryPoint":null,"id":516,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1640":{"entryPoint":null,"id":1640,"parameterSlots":2,"returnSlots":2},"@_authorizeUpgrade_7983":{"entryPoint":3249,"id":7983,"parameterSlots":1,"returnSlots":0},"@_burnBatch_1576":{"entryPoint":3519,"id":1576,"parameterSlots":3,"returnSlots":0},"@_burn_1537":{"entryPoint":4261,"id":1537,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":4627,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2499":{"entryPoint":5436,"id":2499,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_592":{"entryPoint":3446,"id":592,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":2680,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_576":{"entryPoint":3084,"id":576,"parameterSlots":0,"returnSlots":0},"@_getERC1155Storage_712":{"entryPoint":null,"id":712,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_461":{"entryPoint":4036,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1864":{"entryPoint":null,"id":1864,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":5467,"id":438,"parameterSlots":0,"returnSlots":1},"@_mintBatch_1487":{"entryPoint":2829,"id":1487,"parameterSlots":4,"returnSlots":0},"@_mint_1446":{"entryPoint":3702,"id":1446,"parameterSlots":4,"returnSlots":0},"@_msgSender_1820":{"entryPoint":null,"id":1820,"parameterSlots":0,"returnSlots":1},"@_pause_1973":{"entryPoint":3795,"id":1973,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1936":{"entryPoint":4578,"id":1936,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1949":{"entryPoint":4444,"id":1949,"parameterSlots":0,"returnSlots":0},"@_revert_3104":{"entryPoint":6157,"id":3104,"parameterSlots":1,"returnSlots":0},"@_safeBatchTransferFrom_1375":{"entryPoint":2885,"id":1375,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1320":{"entryPoint":4119,"id":1320,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1624":{"entryPoint":3868,"id":1624,"parameterSlots":3,"returnSlots":0},"@_setImplementation_2279":{"entryPoint":5217,"id":2279,"parameterSlots":1,"returnSlots":0},"@_setURI_1394":{"entryPoint":2771,"id":1394,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":3589,"id":193,"parameterSlots":1,"returnSlots":0},"@_unpause_1997":{"entryPoint":2988,"id":1997,"parameterSlots":0,"returnSlots":0},"@_updateWithAcceptanceCheck_1254":{"entryPoint":4361,"id":1254,"parameterSlots":5,"returnSlots":0},"@_update_1174":{"entryPoint":5608,"id":1174,"parameterSlots":4,"returnSlots":0},"@_update_1791":{"entryPoint":5493,"id":1791,"parameterSlots":4,"returnSlots":0},"@_update_8009":{"entryPoint":4680,"id":8009,"parameterSlots":4,"returnSlots":0},"@_upgradeToAndCallUUPS_643":{"entryPoint":3257,"id":643,"parameterSlots":2,"returnSlots":0},"@balanceOfBatch_880":{"entryPoint":1631,"id":880,"parameterSlots":2,"returnSlots":1},"@balanceOf_810":{"entryPoint":1127,"id":810,"parameterSlots":2,"returnSlots":1},"@burnBatch_1736":{"entryPoint":1895,"id":1736,"parameterSlots":3,"returnSlots":0},"@burn_1699":{"entryPoint":2626,"id":1699,"parameterSlots":3,"returnSlots":0},"@checkOnERC1155BatchReceived_2844":{"entryPoint":4984,"id":2844,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_2770":{"entryPoint":4692,"id":2770,"parameterSlots":6,"returnSlots":0},"@functionDelegateCall_3022":{"entryPoint":5318,"id":3022,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4354":{"entryPoint":null,"id":4354,"parameterSlots":1,"returnSlots":1},"@getImplementation_2252":{"entryPoint":null,"id":2252,"parameterSlots":0,"returnSlots":1},"@initialize_7900":{"entryPoint":2060,"id":7900,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_920":{"entryPoint":2395,"id":920,"parameterSlots":2,"returnSlots":1},"@mintBatch_7974":{"entryPoint":1479,"id":7974,"parameterSlots":4,"returnSlots":0},"@mint_7951":{"entryPoint":2013,"id":7951,"parameterSlots":4,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_7921":{"entryPoint":2033,"id":7921,"parameterSlots":0,"returnSlots":0},"@paused_1924":{"entryPoint":null,"id":1924,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_534":{"entryPoint":1866,"id":534,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":1995,"id":136,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_1010":{"entryPoint":1505,"id":1010,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_964":{"entryPoint":2472,"id":964,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_896":{"entryPoint":2049,"id":896,"parameterSlots":2,"returnSlots":0},"@setURI_7912":{"entryPoint":1262,"id":7912,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2037":{"entryPoint":null,"id":2037,"parameterSlots":1,"returnSlots":1},"@supportsInterface_768":{"entryPoint":1182,"id":768,"parameterSlots":1,"returnSlots":1},"@transferOwnership_164":{"entryPoint":2567,"id":164,"parameterSlots":1,"returnSlots":0},"@unpause_7930":{"entryPoint":1613,"id":7930,"parameterSlots":0,"returnSlots":0},"@unsafeMemoryAccess_3975":{"entryPoint":null,"id":3975,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_4001":{"entryPoint":null,"id":4001,"parameterSlots":2,"returnSlots":1},"@upgradeToAndCall_2315":{"entryPoint":4492,"id":2315,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_554":{"entryPoint":1835,"id":554,"parameterSlots":2,"returnSlots":0},"@uri_786":{"entryPoint":1282,"id":786,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_3062":{"entryPoint":5513,"id":3062,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":6197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":6718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":6388,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7823,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":7021,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":7874,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7545,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6859,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7736,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":7478,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6225,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":7664,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7200,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":8354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":6289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6479,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":7399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8477,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8379,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8632,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":6340,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6683,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8599,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8093,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":8164,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6584,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8013,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":8071,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6318,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":6267,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:19082:29","nodeType":"YulBlock","src":"0:19082:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"63:124:29","nodeType":"YulBlock","src":"63:124:29","statements":[{"nativeSrc":"73:29:29","nodeType":"YulAssignment","src":"73:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:29","nodeType":"YulIdentifier","src":"95:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:29","nodeType":"YulIdentifier","src":"82:12:29"},"nativeSrc":"82:20:29","nodeType":"YulFunctionCall","src":"82:20:29"},"variableNames":[{"name":"value","nativeSrc":"73:5:29","nodeType":"YulIdentifier","src":"73:5:29"}]},{"body":{"nativeSrc":"165:16:29","nodeType":"YulBlock","src":"165:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:29","nodeType":"YulLiteral","src":"174:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:29","nodeType":"YulLiteral","src":"177:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:29","nodeType":"YulIdentifier","src":"167:6:29"},"nativeSrc":"167:12:29","nodeType":"YulFunctionCall","src":"167:12:29"},"nativeSrc":"167:12:29","nodeType":"YulExpressionStatement","src":"167:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:29","nodeType":"YulIdentifier","src":"124:5:29"},{"arguments":[{"name":"value","nativeSrc":"135:5:29","nodeType":"YulIdentifier","src":"135:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:29","nodeType":"YulLiteral","src":"150:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:29","nodeType":"YulLiteral","src":"155:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:29","nodeType":"YulIdentifier","src":"146:3:29"},"nativeSrc":"146:11:29","nodeType":"YulFunctionCall","src":"146:11:29"},{"kind":"number","nativeSrc":"159:1:29","nodeType":"YulLiteral","src":"159:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:29","nodeType":"YulIdentifier","src":"142:3:29"},"nativeSrc":"142:19:29","nodeType":"YulFunctionCall","src":"142:19:29"}],"functionName":{"name":"and","nativeSrc":"131:3:29","nodeType":"YulIdentifier","src":"131:3:29"},"nativeSrc":"131:31:29","nodeType":"YulFunctionCall","src":"131:31:29"}],"functionName":{"name":"eq","nativeSrc":"121:2:29","nodeType":"YulIdentifier","src":"121:2:29"},"nativeSrc":"121:42:29","nodeType":"YulFunctionCall","src":"121:42:29"}],"functionName":{"name":"iszero","nativeSrc":"114:6:29","nodeType":"YulIdentifier","src":"114:6:29"},"nativeSrc":"114:50:29","nodeType":"YulFunctionCall","src":"114:50:29"},"nativeSrc":"111:70:29","nodeType":"YulIf","src":"111:70:29"}]},"name":"abi_decode_address","nativeSrc":"14:173:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:29","nodeType":"YulTypedName","src":"42:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:29","nodeType":"YulTypedName","src":"53:5:29","type":""}],"src":"14:173:29"},{"body":{"nativeSrc":"279:213:29","nodeType":"YulBlock","src":"279:213:29","statements":[{"body":{"nativeSrc":"325:16:29","nodeType":"YulBlock","src":"325:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"334:1:29","nodeType":"YulLiteral","src":"334:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"337:1:29","nodeType":"YulLiteral","src":"337:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"327:6:29","nodeType":"YulIdentifier","src":"327:6:29"},"nativeSrc":"327:12:29","nodeType":"YulFunctionCall","src":"327:12:29"},"nativeSrc":"327:12:29","nodeType":"YulExpressionStatement","src":"327:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"300:7:29","nodeType":"YulIdentifier","src":"300:7:29"},{"name":"headStart","nativeSrc":"309:9:29","nodeType":"YulIdentifier","src":"309:9:29"}],"functionName":{"name":"sub","nativeSrc":"296:3:29","nodeType":"YulIdentifier","src":"296:3:29"},"nativeSrc":"296:23:29","nodeType":"YulFunctionCall","src":"296:23:29"},{"kind":"number","nativeSrc":"321:2:29","nodeType":"YulLiteral","src":"321:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"292:3:29","nodeType":"YulIdentifier","src":"292:3:29"},"nativeSrc":"292:32:29","nodeType":"YulFunctionCall","src":"292:32:29"},"nativeSrc":"289:52:29","nodeType":"YulIf","src":"289:52:29"},{"nativeSrc":"350:39:29","nodeType":"YulAssignment","src":"350:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"379:9:29","nodeType":"YulIdentifier","src":"379:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"360:18:29","nodeType":"YulIdentifier","src":"360:18:29"},"nativeSrc":"360:29:29","nodeType":"YulFunctionCall","src":"360:29:29"},"variableNames":[{"name":"value0","nativeSrc":"350:6:29","nodeType":"YulIdentifier","src":"350:6:29"}]},{"nativeSrc":"398:14:29","nodeType":"YulVariableDeclaration","src":"398:14:29","value":{"kind":"number","nativeSrc":"411:1:29","nodeType":"YulLiteral","src":"411:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"402:5:29","nodeType":"YulTypedName","src":"402:5:29","type":""}]},{"nativeSrc":"421:41:29","nodeType":"YulAssignment","src":"421:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"447:9:29","nodeType":"YulIdentifier","src":"447:9:29"},{"kind":"number","nativeSrc":"458:2:29","nodeType":"YulLiteral","src":"458:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"443:3:29","nodeType":"YulIdentifier","src":"443:3:29"},"nativeSrc":"443:18:29","nodeType":"YulFunctionCall","src":"443:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"430:12:29","nodeType":"YulIdentifier","src":"430:12:29"},"nativeSrc":"430:32:29","nodeType":"YulFunctionCall","src":"430:32:29"},"variableNames":[{"name":"value","nativeSrc":"421:5:29","nodeType":"YulIdentifier","src":"421:5:29"}]},{"nativeSrc":"471:15:29","nodeType":"YulAssignment","src":"471:15:29","value":{"name":"value","nativeSrc":"481:5:29","nodeType":"YulIdentifier","src":"481:5:29"},"variableNames":[{"name":"value1","nativeSrc":"471:6:29","nodeType":"YulIdentifier","src":"471:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"192:300:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"237:9:29","nodeType":"YulTypedName","src":"237:9:29","type":""},{"name":"dataEnd","nativeSrc":"248:7:29","nodeType":"YulTypedName","src":"248:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"260:6:29","nodeType":"YulTypedName","src":"260:6:29","type":""},{"name":"value1","nativeSrc":"268:6:29","nodeType":"YulTypedName","src":"268:6:29","type":""}],"src":"192:300:29"},{"body":{"nativeSrc":"598:76:29","nodeType":"YulBlock","src":"598:76:29","statements":[{"nativeSrc":"608:26:29","nodeType":"YulAssignment","src":"608:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"620:9:29","nodeType":"YulIdentifier","src":"620:9:29"},{"kind":"number","nativeSrc":"631:2:29","nodeType":"YulLiteral","src":"631:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"616:3:29","nodeType":"YulIdentifier","src":"616:3:29"},"nativeSrc":"616:18:29","nodeType":"YulFunctionCall","src":"616:18:29"},"variableNames":[{"name":"tail","nativeSrc":"608:4:29","nodeType":"YulIdentifier","src":"608:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"650:9:29","nodeType":"YulIdentifier","src":"650:9:29"},{"name":"value0","nativeSrc":"661:6:29","nodeType":"YulIdentifier","src":"661:6:29"}],"functionName":{"name":"mstore","nativeSrc":"643:6:29","nodeType":"YulIdentifier","src":"643:6:29"},"nativeSrc":"643:25:29","nodeType":"YulFunctionCall","src":"643:25:29"},"nativeSrc":"643:25:29","nodeType":"YulExpressionStatement","src":"643:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"497:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"567:9:29","nodeType":"YulTypedName","src":"567:9:29","type":""},{"name":"value0","nativeSrc":"578:6:29","nodeType":"YulTypedName","src":"578:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"589:4:29","nodeType":"YulTypedName","src":"589:4:29","type":""}],"src":"497:177:29"},{"body":{"nativeSrc":"723:87:29","nodeType":"YulBlock","src":"723:87:29","statements":[{"body":{"nativeSrc":"788:16:29","nodeType":"YulBlock","src":"788:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:29","nodeType":"YulLiteral","src":"797:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"800:1:29","nodeType":"YulLiteral","src":"800:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"790:6:29","nodeType":"YulIdentifier","src":"790:6:29"},"nativeSrc":"790:12:29","nodeType":"YulFunctionCall","src":"790:12:29"},"nativeSrc":"790:12:29","nodeType":"YulExpressionStatement","src":"790:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"746:5:29","nodeType":"YulIdentifier","src":"746:5:29"},{"arguments":[{"name":"value","nativeSrc":"757:5:29","nodeType":"YulIdentifier","src":"757:5:29"},{"arguments":[{"kind":"number","nativeSrc":"768:3:29","nodeType":"YulLiteral","src":"768:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"773:10:29","nodeType":"YulLiteral","src":"773:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"764:3:29","nodeType":"YulIdentifier","src":"764:3:29"},"nativeSrc":"764:20:29","nodeType":"YulFunctionCall","src":"764:20:29"}],"functionName":{"name":"and","nativeSrc":"753:3:29","nodeType":"YulIdentifier","src":"753:3:29"},"nativeSrc":"753:32:29","nodeType":"YulFunctionCall","src":"753:32:29"}],"functionName":{"name":"eq","nativeSrc":"743:2:29","nodeType":"YulIdentifier","src":"743:2:29"},"nativeSrc":"743:43:29","nodeType":"YulFunctionCall","src":"743:43:29"}],"functionName":{"name":"iszero","nativeSrc":"736:6:29","nodeType":"YulIdentifier","src":"736:6:29"},"nativeSrc":"736:51:29","nodeType":"YulFunctionCall","src":"736:51:29"},"nativeSrc":"733:71:29","nodeType":"YulIf","src":"733:71:29"}]},"name":"validator_revert_bytes4","nativeSrc":"679:131:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"712:5:29","nodeType":"YulTypedName","src":"712:5:29","type":""}],"src":"679:131:29"},{"body":{"nativeSrc":"884:176:29","nodeType":"YulBlock","src":"884:176:29","statements":[{"body":{"nativeSrc":"930:16:29","nodeType":"YulBlock","src":"930:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"939:1:29","nodeType":"YulLiteral","src":"939:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"942:1:29","nodeType":"YulLiteral","src":"942:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"932:6:29","nodeType":"YulIdentifier","src":"932:6:29"},"nativeSrc":"932:12:29","nodeType":"YulFunctionCall","src":"932:12:29"},"nativeSrc":"932:12:29","nodeType":"YulExpressionStatement","src":"932:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"905:7:29","nodeType":"YulIdentifier","src":"905:7:29"},{"name":"headStart","nativeSrc":"914:9:29","nodeType":"YulIdentifier","src":"914:9:29"}],"functionName":{"name":"sub","nativeSrc":"901:3:29","nodeType":"YulIdentifier","src":"901:3:29"},"nativeSrc":"901:23:29","nodeType":"YulFunctionCall","src":"901:23:29"},{"kind":"number","nativeSrc":"926:2:29","nodeType":"YulLiteral","src":"926:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"897:3:29","nodeType":"YulIdentifier","src":"897:3:29"},"nativeSrc":"897:32:29","nodeType":"YulFunctionCall","src":"897:32:29"},"nativeSrc":"894:52:29","nodeType":"YulIf","src":"894:52:29"},{"nativeSrc":"955:36:29","nodeType":"YulVariableDeclaration","src":"955:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"981:9:29","nodeType":"YulIdentifier","src":"981:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"968:12:29","nodeType":"YulIdentifier","src":"968:12:29"},"nativeSrc":"968:23:29","nodeType":"YulFunctionCall","src":"968:23:29"},"variables":[{"name":"value","nativeSrc":"959:5:29","nodeType":"YulTypedName","src":"959:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:29","nodeType":"YulIdentifier","src":"1024:5:29"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"1000:23:29","nodeType":"YulIdentifier","src":"1000:23:29"},"nativeSrc":"1000:30:29","nodeType":"YulFunctionCall","src":"1000:30:29"},"nativeSrc":"1000:30:29","nodeType":"YulExpressionStatement","src":"1000:30:29"},{"nativeSrc":"1039:15:29","nodeType":"YulAssignment","src":"1039:15:29","value":{"name":"value","nativeSrc":"1049:5:29","nodeType":"YulIdentifier","src":"1049:5:29"},"variableNames":[{"name":"value0","nativeSrc":"1039:6:29","nodeType":"YulIdentifier","src":"1039:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"815:245:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"850:9:29","nodeType":"YulTypedName","src":"850:9:29","type":""},{"name":"dataEnd","nativeSrc":"861:7:29","nodeType":"YulTypedName","src":"861:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"873:6:29","nodeType":"YulTypedName","src":"873:6:29","type":""}],"src":"815:245:29"},{"body":{"nativeSrc":"1160:92:29","nodeType":"YulBlock","src":"1160:92:29","statements":[{"nativeSrc":"1170:26:29","nodeType":"YulAssignment","src":"1170:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1182:9:29","nodeType":"YulIdentifier","src":"1182:9:29"},{"kind":"number","nativeSrc":"1193:2:29","nodeType":"YulLiteral","src":"1193:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1178:3:29","nodeType":"YulIdentifier","src":"1178:3:29"},"nativeSrc":"1178:18:29","nodeType":"YulFunctionCall","src":"1178:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1170:4:29","nodeType":"YulIdentifier","src":"1170:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1212:9:29","nodeType":"YulIdentifier","src":"1212:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1237:6:29","nodeType":"YulIdentifier","src":"1237:6:29"}],"functionName":{"name":"iszero","nativeSrc":"1230:6:29","nodeType":"YulIdentifier","src":"1230:6:29"},"nativeSrc":"1230:14:29","nodeType":"YulFunctionCall","src":"1230:14:29"}],"functionName":{"name":"iszero","nativeSrc":"1223:6:29","nodeType":"YulIdentifier","src":"1223:6:29"},"nativeSrc":"1223:22:29","nodeType":"YulFunctionCall","src":"1223:22:29"}],"functionName":{"name":"mstore","nativeSrc":"1205:6:29","nodeType":"YulIdentifier","src":"1205:6:29"},"nativeSrc":"1205:41:29","nodeType":"YulFunctionCall","src":"1205:41:29"},"nativeSrc":"1205:41:29","nodeType":"YulExpressionStatement","src":"1205:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1065:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1129:9:29","nodeType":"YulTypedName","src":"1129:9:29","type":""},{"name":"value0","nativeSrc":"1140:6:29","nodeType":"YulTypedName","src":"1140:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1151:4:29","nodeType":"YulTypedName","src":"1151:4:29","type":""}],"src":"1065:187:29"},{"body":{"nativeSrc":"1289:95:29","nodeType":"YulBlock","src":"1289:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1306:1:29","nodeType":"YulLiteral","src":"1306:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1313:3:29","nodeType":"YulLiteral","src":"1313:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"1318:10:29","nodeType":"YulLiteral","src":"1318:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1309:3:29","nodeType":"YulIdentifier","src":"1309:3:29"},"nativeSrc":"1309:20:29","nodeType":"YulFunctionCall","src":"1309:20:29"}],"functionName":{"name":"mstore","nativeSrc":"1299:6:29","nodeType":"YulIdentifier","src":"1299:6:29"},"nativeSrc":"1299:31:29","nodeType":"YulFunctionCall","src":"1299:31:29"},"nativeSrc":"1299:31:29","nodeType":"YulExpressionStatement","src":"1299:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1346:1:29","nodeType":"YulLiteral","src":"1346:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"1349:4:29","nodeType":"YulLiteral","src":"1349:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1339:6:29","nodeType":"YulIdentifier","src":"1339:6:29"},"nativeSrc":"1339:15:29","nodeType":"YulFunctionCall","src":"1339:15:29"},"nativeSrc":"1339:15:29","nodeType":"YulExpressionStatement","src":"1339:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:1:29","nodeType":"YulLiteral","src":"1370:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1373:4:29","nodeType":"YulLiteral","src":"1373:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1363:6:29","nodeType":"YulIdentifier","src":"1363:6:29"},"nativeSrc":"1363:15:29","nodeType":"YulFunctionCall","src":"1363:15:29"},"nativeSrc":"1363:15:29","nodeType":"YulExpressionStatement","src":"1363:15:29"}]},"name":"panic_error_0x41","nativeSrc":"1257:127:29","nodeType":"YulFunctionDefinition","src":"1257:127:29"},{"body":{"nativeSrc":"1434:230:29","nodeType":"YulBlock","src":"1434:230:29","statements":[{"nativeSrc":"1444:19:29","nodeType":"YulAssignment","src":"1444:19:29","value":{"arguments":[{"kind":"number","nativeSrc":"1460:2:29","nodeType":"YulLiteral","src":"1460:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1454:5:29","nodeType":"YulIdentifier","src":"1454:5:29"},"nativeSrc":"1454:9:29","nodeType":"YulFunctionCall","src":"1454:9:29"},"variableNames":[{"name":"memPtr","nativeSrc":"1444:6:29","nodeType":"YulIdentifier","src":"1444:6:29"}]},{"nativeSrc":"1472:58:29","nodeType":"YulVariableDeclaration","src":"1472:58:29","value":{"arguments":[{"name":"memPtr","nativeSrc":"1494:6:29","nodeType":"YulIdentifier","src":"1494:6:29"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"1510:4:29","nodeType":"YulIdentifier","src":"1510:4:29"},{"kind":"number","nativeSrc":"1516:2:29","nodeType":"YulLiteral","src":"1516:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1506:3:29","nodeType":"YulIdentifier","src":"1506:3:29"},"nativeSrc":"1506:13:29","nodeType":"YulFunctionCall","src":"1506:13:29"},{"arguments":[{"kind":"number","nativeSrc":"1525:2:29","nodeType":"YulLiteral","src":"1525:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1521:3:29","nodeType":"YulIdentifier","src":"1521:3:29"},"nativeSrc":"1521:7:29","nodeType":"YulFunctionCall","src":"1521:7:29"}],"functionName":{"name":"and","nativeSrc":"1502:3:29","nodeType":"YulIdentifier","src":"1502:3:29"},"nativeSrc":"1502:27:29","nodeType":"YulFunctionCall","src":"1502:27:29"}],"functionName":{"name":"add","nativeSrc":"1490:3:29","nodeType":"YulIdentifier","src":"1490:3:29"},"nativeSrc":"1490:40:29","nodeType":"YulFunctionCall","src":"1490:40:29"},"variables":[{"name":"newFreePtr","nativeSrc":"1476:10:29","nodeType":"YulTypedName","src":"1476:10:29","type":""}]},{"body":{"nativeSrc":"1605:22:29","nodeType":"YulBlock","src":"1605:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1607:16:29","nodeType":"YulIdentifier","src":"1607:16:29"},"nativeSrc":"1607:18:29","nodeType":"YulFunctionCall","src":"1607:18:29"},"nativeSrc":"1607:18:29","nodeType":"YulExpressionStatement","src":"1607:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1548:10:29","nodeType":"YulIdentifier","src":"1548:10:29"},{"kind":"number","nativeSrc":"1560:18:29","nodeType":"YulLiteral","src":"1560:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1545:2:29","nodeType":"YulIdentifier","src":"1545:2:29"},"nativeSrc":"1545:34:29","nodeType":"YulFunctionCall","src":"1545:34:29"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1584:10:29","nodeType":"YulIdentifier","src":"1584:10:29"},{"name":"memPtr","nativeSrc":"1596:6:29","nodeType":"YulIdentifier","src":"1596:6:29"}],"functionName":{"name":"lt","nativeSrc":"1581:2:29","nodeType":"YulIdentifier","src":"1581:2:29"},"nativeSrc":"1581:22:29","nodeType":"YulFunctionCall","src":"1581:22:29"}],"functionName":{"name":"or","nativeSrc":"1542:2:29","nodeType":"YulIdentifier","src":"1542:2:29"},"nativeSrc":"1542:62:29","nodeType":"YulFunctionCall","src":"1542:62:29"},"nativeSrc":"1539:88:29","nodeType":"YulIf","src":"1539:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1643:2:29","nodeType":"YulLiteral","src":"1643:2:29","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1647:10:29","nodeType":"YulIdentifier","src":"1647:10:29"}],"functionName":{"name":"mstore","nativeSrc":"1636:6:29","nodeType":"YulIdentifier","src":"1636:6:29"},"nativeSrc":"1636:22:29","nodeType":"YulFunctionCall","src":"1636:22:29"},"nativeSrc":"1636:22:29","nodeType":"YulExpressionStatement","src":"1636:22:29"}]},"name":"allocate_memory","nativeSrc":"1389:275:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1414:4:29","nodeType":"YulTypedName","src":"1414:4:29","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1423:6:29","nodeType":"YulTypedName","src":"1423:6:29","type":""}],"src":"1389:275:29"},{"body":{"nativeSrc":"1744:375:29","nodeType":"YulBlock","src":"1744:375:29","statements":[{"nativeSrc":"1754:13:29","nodeType":"YulVariableDeclaration","src":"1754:13:29","value":{"kind":"number","nativeSrc":"1766:1:29","nodeType":"YulLiteral","src":"1766:1:29","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"1758:4:29","nodeType":"YulTypedName","src":"1758:4:29","type":""}]},{"body":{"nativeSrc":"1810:22:29","nodeType":"YulBlock","src":"1810:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1812:16:29","nodeType":"YulIdentifier","src":"1812:16:29"},"nativeSrc":"1812:18:29","nodeType":"YulFunctionCall","src":"1812:18:29"},"nativeSrc":"1812:18:29","nodeType":"YulExpressionStatement","src":"1812:18:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1782:6:29","nodeType":"YulIdentifier","src":"1782:6:29"},{"kind":"number","nativeSrc":"1790:18:29","nodeType":"YulLiteral","src":"1790:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1779:2:29","nodeType":"YulIdentifier","src":"1779:2:29"},"nativeSrc":"1779:30:29","nodeType":"YulFunctionCall","src":"1779:30:29"},"nativeSrc":"1776:56:29","nodeType":"YulIf","src":"1776:56:29"},{"nativeSrc":"1841:48:29","nodeType":"YulAssignment","src":"1841:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1861:6:29","nodeType":"YulIdentifier","src":"1861:6:29"},{"kind":"number","nativeSrc":"1869:2:29","nodeType":"YulLiteral","src":"1869:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1857:3:29","nodeType":"YulIdentifier","src":"1857:3:29"},"nativeSrc":"1857:15:29","nodeType":"YulFunctionCall","src":"1857:15:29"},{"arguments":[{"kind":"number","nativeSrc":"1878:2:29","nodeType":"YulLiteral","src":"1878:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1874:3:29","nodeType":"YulIdentifier","src":"1874:3:29"},"nativeSrc":"1874:7:29","nodeType":"YulFunctionCall","src":"1874:7:29"}],"functionName":{"name":"and","nativeSrc":"1853:3:29","nodeType":"YulIdentifier","src":"1853:3:29"},"nativeSrc":"1853:29:29","nodeType":"YulFunctionCall","src":"1853:29:29"},{"kind":"number","nativeSrc":"1884:4:29","nodeType":"YulLiteral","src":"1884:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1849:3:29","nodeType":"YulIdentifier","src":"1849:3:29"},"nativeSrc":"1849:40:29","nodeType":"YulFunctionCall","src":"1849:40:29"},"variableNames":[{"name":"size","nativeSrc":"1841:4:29","nodeType":"YulIdentifier","src":"1841:4:29"}]},{"nativeSrc":"1898:30:29","nodeType":"YulAssignment","src":"1898:30:29","value":{"arguments":[{"name":"size","nativeSrc":"1923:4:29","nodeType":"YulIdentifier","src":"1923:4:29"}],"functionName":{"name":"allocate_memory","nativeSrc":"1907:15:29","nodeType":"YulIdentifier","src":"1907:15:29"},"nativeSrc":"1907:21:29","nodeType":"YulFunctionCall","src":"1907:21:29"},"variableNames":[{"name":"array","nativeSrc":"1898:5:29","nodeType":"YulIdentifier","src":"1898:5:29"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"1944:5:29","nodeType":"YulIdentifier","src":"1944:5:29"},{"name":"length","nativeSrc":"1951:6:29","nodeType":"YulIdentifier","src":"1951:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1937:6:29","nodeType":"YulIdentifier","src":"1937:6:29"},"nativeSrc":"1937:21:29","nodeType":"YulFunctionCall","src":"1937:21:29"},"nativeSrc":"1937:21:29","nodeType":"YulExpressionStatement","src":"1937:21:29"},{"body":{"nativeSrc":"1996:16:29","nodeType":"YulBlock","src":"1996:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2005:1:29","nodeType":"YulLiteral","src":"2005:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2008:1:29","nodeType":"YulLiteral","src":"2008:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1998:6:29","nodeType":"YulIdentifier","src":"1998:6:29"},"nativeSrc":"1998:12:29","nodeType":"YulFunctionCall","src":"1998:12:29"},"nativeSrc":"1998:12:29","nodeType":"YulExpressionStatement","src":"1998:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1977:3:29","nodeType":"YulIdentifier","src":"1977:3:29"},{"name":"length","nativeSrc":"1982:6:29","nodeType":"YulIdentifier","src":"1982:6:29"}],"functionName":{"name":"add","nativeSrc":"1973:3:29","nodeType":"YulIdentifier","src":"1973:3:29"},"nativeSrc":"1973:16:29","nodeType":"YulFunctionCall","src":"1973:16:29"},{"name":"end","nativeSrc":"1991:3:29","nodeType":"YulIdentifier","src":"1991:3:29"}],"functionName":{"name":"gt","nativeSrc":"1970:2:29","nodeType":"YulIdentifier","src":"1970:2:29"},"nativeSrc":"1970:25:29","nodeType":"YulFunctionCall","src":"1970:25:29"},"nativeSrc":"1967:45:29","nodeType":"YulIf","src":"1967:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"2038:5:29","nodeType":"YulIdentifier","src":"2038:5:29"},{"kind":"number","nativeSrc":"2045:4:29","nodeType":"YulLiteral","src":"2045:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2034:3:29","nodeType":"YulIdentifier","src":"2034:3:29"},"nativeSrc":"2034:16:29","nodeType":"YulFunctionCall","src":"2034:16:29"},{"name":"src","nativeSrc":"2052:3:29","nodeType":"YulIdentifier","src":"2052:3:29"},{"name":"length","nativeSrc":"2057:6:29","nodeType":"YulIdentifier","src":"2057:6:29"}],"functionName":{"name":"calldatacopy","nativeSrc":"2021:12:29","nodeType":"YulIdentifier","src":"2021:12:29"},"nativeSrc":"2021:43:29","nodeType":"YulFunctionCall","src":"2021:43:29"},"nativeSrc":"2021:43:29","nodeType":"YulExpressionStatement","src":"2021:43:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"2088:5:29","nodeType":"YulIdentifier","src":"2088:5:29"},{"name":"length","nativeSrc":"2095:6:29","nodeType":"YulIdentifier","src":"2095:6:29"}],"functionName":{"name":"add","nativeSrc":"2084:3:29","nodeType":"YulIdentifier","src":"2084:3:29"},"nativeSrc":"2084:18:29","nodeType":"YulFunctionCall","src":"2084:18:29"},{"kind":"number","nativeSrc":"2104:4:29","nodeType":"YulLiteral","src":"2104:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2080:3:29","nodeType":"YulIdentifier","src":"2080:3:29"},"nativeSrc":"2080:29:29","nodeType":"YulFunctionCall","src":"2080:29:29"},{"kind":"number","nativeSrc":"2111:1:29","nodeType":"YulLiteral","src":"2111:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2073:6:29","nodeType":"YulIdentifier","src":"2073:6:29"},"nativeSrc":"2073:40:29","nodeType":"YulFunctionCall","src":"2073:40:29"},"nativeSrc":"2073:40:29","nodeType":"YulExpressionStatement","src":"2073:40:29"}]},"name":"abi_decode_available_length_string","nativeSrc":"1669:450:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1713:3:29","nodeType":"YulTypedName","src":"1713:3:29","type":""},{"name":"length","nativeSrc":"1718:6:29","nodeType":"YulTypedName","src":"1718:6:29","type":""},{"name":"end","nativeSrc":"1726:3:29","nodeType":"YulTypedName","src":"1726:3:29","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1734:5:29","nodeType":"YulTypedName","src":"1734:5:29","type":""}],"src":"1669:450:29"},{"body":{"nativeSrc":"2204:371:29","nodeType":"YulBlock","src":"2204:371:29","statements":[{"body":{"nativeSrc":"2250:16:29","nodeType":"YulBlock","src":"2250:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2259:1:29","nodeType":"YulLiteral","src":"2259:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2262:1:29","nodeType":"YulLiteral","src":"2262:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2252:6:29","nodeType":"YulIdentifier","src":"2252:6:29"},"nativeSrc":"2252:12:29","nodeType":"YulFunctionCall","src":"2252:12:29"},"nativeSrc":"2252:12:29","nodeType":"YulExpressionStatement","src":"2252:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2225:7:29","nodeType":"YulIdentifier","src":"2225:7:29"},{"name":"headStart","nativeSrc":"2234:9:29","nodeType":"YulIdentifier","src":"2234:9:29"}],"functionName":{"name":"sub","nativeSrc":"2221:3:29","nodeType":"YulIdentifier","src":"2221:3:29"},"nativeSrc":"2221:23:29","nodeType":"YulFunctionCall","src":"2221:23:29"},{"kind":"number","nativeSrc":"2246:2:29","nodeType":"YulLiteral","src":"2246:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2217:3:29","nodeType":"YulIdentifier","src":"2217:3:29"},"nativeSrc":"2217:32:29","nodeType":"YulFunctionCall","src":"2217:32:29"},"nativeSrc":"2214:52:29","nodeType":"YulIf","src":"2214:52:29"},{"nativeSrc":"2275:37:29","nodeType":"YulVariableDeclaration","src":"2275:37:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2302:9:29","nodeType":"YulIdentifier","src":"2302:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2289:12:29","nodeType":"YulIdentifier","src":"2289:12:29"},"nativeSrc":"2289:23:29","nodeType":"YulFunctionCall","src":"2289:23:29"},"variables":[{"name":"offset","nativeSrc":"2279:6:29","nodeType":"YulTypedName","src":"2279:6:29","type":""}]},{"body":{"nativeSrc":"2355:16:29","nodeType":"YulBlock","src":"2355:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2364:1:29","nodeType":"YulLiteral","src":"2364:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2367:1:29","nodeType":"YulLiteral","src":"2367:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2357:6:29","nodeType":"YulIdentifier","src":"2357:6:29"},"nativeSrc":"2357:12:29","nodeType":"YulFunctionCall","src":"2357:12:29"},"nativeSrc":"2357:12:29","nodeType":"YulExpressionStatement","src":"2357:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2327:6:29","nodeType":"YulIdentifier","src":"2327:6:29"},{"kind":"number","nativeSrc":"2335:18:29","nodeType":"YulLiteral","src":"2335:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2324:2:29","nodeType":"YulIdentifier","src":"2324:2:29"},"nativeSrc":"2324:30:29","nodeType":"YulFunctionCall","src":"2324:30:29"},"nativeSrc":"2321:50:29","nodeType":"YulIf","src":"2321:50:29"},{"nativeSrc":"2380:32:29","nodeType":"YulVariableDeclaration","src":"2380:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2394:9:29","nodeType":"YulIdentifier","src":"2394:9:29"},{"name":"offset","nativeSrc":"2405:6:29","nodeType":"YulIdentifier","src":"2405:6:29"}],"functionName":{"name":"add","nativeSrc":"2390:3:29","nodeType":"YulIdentifier","src":"2390:3:29"},"nativeSrc":"2390:22:29","nodeType":"YulFunctionCall","src":"2390:22:29"},"variables":[{"name":"_1","nativeSrc":"2384:2:29","nodeType":"YulTypedName","src":"2384:2:29","type":""}]},{"body":{"nativeSrc":"2460:16:29","nodeType":"YulBlock","src":"2460:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2469:1:29","nodeType":"YulLiteral","src":"2469:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2472:1:29","nodeType":"YulLiteral","src":"2472:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2462:6:29","nodeType":"YulIdentifier","src":"2462:6:29"},"nativeSrc":"2462:12:29","nodeType":"YulFunctionCall","src":"2462:12:29"},"nativeSrc":"2462:12:29","nodeType":"YulExpressionStatement","src":"2462:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2439:2:29","nodeType":"YulIdentifier","src":"2439:2:29"},{"kind":"number","nativeSrc":"2443:4:29","nodeType":"YulLiteral","src":"2443:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2435:3:29","nodeType":"YulIdentifier","src":"2435:3:29"},"nativeSrc":"2435:13:29","nodeType":"YulFunctionCall","src":"2435:13:29"},{"name":"dataEnd","nativeSrc":"2450:7:29","nodeType":"YulIdentifier","src":"2450:7:29"}],"functionName":{"name":"slt","nativeSrc":"2431:3:29","nodeType":"YulIdentifier","src":"2431:3:29"},"nativeSrc":"2431:27:29","nodeType":"YulFunctionCall","src":"2431:27:29"}],"functionName":{"name":"iszero","nativeSrc":"2424:6:29","nodeType":"YulIdentifier","src":"2424:6:29"},"nativeSrc":"2424:35:29","nodeType":"YulFunctionCall","src":"2424:35:29"},"nativeSrc":"2421:55:29","nodeType":"YulIf","src":"2421:55:29"},{"nativeSrc":"2485:84:29","nodeType":"YulAssignment","src":"2485:84:29","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2534:2:29","nodeType":"YulIdentifier","src":"2534:2:29"},{"kind":"number","nativeSrc":"2538:2:29","nodeType":"YulLiteral","src":"2538:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2530:3:29","nodeType":"YulIdentifier","src":"2530:3:29"},"nativeSrc":"2530:11:29","nodeType":"YulFunctionCall","src":"2530:11:29"},{"arguments":[{"name":"_1","nativeSrc":"2556:2:29","nodeType":"YulIdentifier","src":"2556:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"2543:12:29","nodeType":"YulIdentifier","src":"2543:12:29"},"nativeSrc":"2543:16:29","nodeType":"YulFunctionCall","src":"2543:16:29"},{"name":"dataEnd","nativeSrc":"2561:7:29","nodeType":"YulIdentifier","src":"2561:7:29"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"2495:34:29","nodeType":"YulIdentifier","src":"2495:34:29"},"nativeSrc":"2495:74:29","nodeType":"YulFunctionCall","src":"2495:74:29"},"variableNames":[{"name":"value0","nativeSrc":"2485:6:29","nodeType":"YulIdentifier","src":"2485:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"2124:451:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2170:9:29","nodeType":"YulTypedName","src":"2170:9:29","type":""},{"name":"dataEnd","nativeSrc":"2181:7:29","nodeType":"YulTypedName","src":"2181:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2193:6:29","nodeType":"YulTypedName","src":"2193:6:29","type":""}],"src":"2124:451:29"},{"body":{"nativeSrc":"2650:156:29","nodeType":"YulBlock","src":"2650:156:29","statements":[{"body":{"nativeSrc":"2696:16:29","nodeType":"YulBlock","src":"2696:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2705:1:29","nodeType":"YulLiteral","src":"2705:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2708:1:29","nodeType":"YulLiteral","src":"2708:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2698:6:29","nodeType":"YulIdentifier","src":"2698:6:29"},"nativeSrc":"2698:12:29","nodeType":"YulFunctionCall","src":"2698:12:29"},"nativeSrc":"2698:12:29","nodeType":"YulExpressionStatement","src":"2698:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2671:7:29","nodeType":"YulIdentifier","src":"2671:7:29"},{"name":"headStart","nativeSrc":"2680:9:29","nodeType":"YulIdentifier","src":"2680:9:29"}],"functionName":{"name":"sub","nativeSrc":"2667:3:29","nodeType":"YulIdentifier","src":"2667:3:29"},"nativeSrc":"2667:23:29","nodeType":"YulFunctionCall","src":"2667:23:29"},{"kind":"number","nativeSrc":"2692:2:29","nodeType":"YulLiteral","src":"2692:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2663:3:29","nodeType":"YulIdentifier","src":"2663:3:29"},"nativeSrc":"2663:32:29","nodeType":"YulFunctionCall","src":"2663:32:29"},"nativeSrc":"2660:52:29","nodeType":"YulIf","src":"2660:52:29"},{"nativeSrc":"2721:14:29","nodeType":"YulVariableDeclaration","src":"2721:14:29","value":{"kind":"number","nativeSrc":"2734:1:29","nodeType":"YulLiteral","src":"2734:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2725:5:29","nodeType":"YulTypedName","src":"2725:5:29","type":""}]},{"nativeSrc":"2744:32:29","nodeType":"YulAssignment","src":"2744:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2766:9:29","nodeType":"YulIdentifier","src":"2766:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2753:12:29","nodeType":"YulIdentifier","src":"2753:12:29"},"nativeSrc":"2753:23:29","nodeType":"YulFunctionCall","src":"2753:23:29"},"variableNames":[{"name":"value","nativeSrc":"2744:5:29","nodeType":"YulIdentifier","src":"2744:5:29"}]},{"nativeSrc":"2785:15:29","nodeType":"YulAssignment","src":"2785:15:29","value":{"name":"value","nativeSrc":"2795:5:29","nodeType":"YulIdentifier","src":"2795:5:29"},"variableNames":[{"name":"value0","nativeSrc":"2785:6:29","nodeType":"YulIdentifier","src":"2785:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2580:226:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2616:9:29","nodeType":"YulTypedName","src":"2616:9:29","type":""},{"name":"dataEnd","nativeSrc":"2627:7:29","nodeType":"YulTypedName","src":"2627:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2639:6:29","nodeType":"YulTypedName","src":"2639:6:29","type":""}],"src":"2580:226:29"},{"body":{"nativeSrc":"2877:184:29","nodeType":"YulBlock","src":"2877:184:29","statements":[{"nativeSrc":"2887:10:29","nodeType":"YulVariableDeclaration","src":"2887:10:29","value":{"kind":"number","nativeSrc":"2896:1:29","nodeType":"YulLiteral","src":"2896:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2891:1:29","nodeType":"YulTypedName","src":"2891:1:29","type":""}]},{"body":{"nativeSrc":"2956:63:29","nodeType":"YulBlock","src":"2956:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2981:3:29","nodeType":"YulIdentifier","src":"2981:3:29"},{"name":"i","nativeSrc":"2986:1:29","nodeType":"YulIdentifier","src":"2986:1:29"}],"functionName":{"name":"add","nativeSrc":"2977:3:29","nodeType":"YulIdentifier","src":"2977:3:29"},"nativeSrc":"2977:11:29","nodeType":"YulFunctionCall","src":"2977:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3000:3:29","nodeType":"YulIdentifier","src":"3000:3:29"},{"name":"i","nativeSrc":"3005:1:29","nodeType":"YulIdentifier","src":"3005:1:29"}],"functionName":{"name":"add","nativeSrc":"2996:3:29","nodeType":"YulIdentifier","src":"2996:3:29"},"nativeSrc":"2996:11:29","nodeType":"YulFunctionCall","src":"2996:11:29"}],"functionName":{"name":"mload","nativeSrc":"2990:5:29","nodeType":"YulIdentifier","src":"2990:5:29"},"nativeSrc":"2990:18:29","nodeType":"YulFunctionCall","src":"2990:18:29"}],"functionName":{"name":"mstore","nativeSrc":"2970:6:29","nodeType":"YulIdentifier","src":"2970:6:29"},"nativeSrc":"2970:39:29","nodeType":"YulFunctionCall","src":"2970:39:29"},"nativeSrc":"2970:39:29","nodeType":"YulExpressionStatement","src":"2970:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2917:1:29","nodeType":"YulIdentifier","src":"2917:1:29"},{"name":"length","nativeSrc":"2920:6:29","nodeType":"YulIdentifier","src":"2920:6:29"}],"functionName":{"name":"lt","nativeSrc":"2914:2:29","nodeType":"YulIdentifier","src":"2914:2:29"},"nativeSrc":"2914:13:29","nodeType":"YulFunctionCall","src":"2914:13:29"},"nativeSrc":"2906:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"2928:19:29","nodeType":"YulBlock","src":"2928:19:29","statements":[{"nativeSrc":"2930:15:29","nodeType":"YulAssignment","src":"2930:15:29","value":{"arguments":[{"name":"i","nativeSrc":"2939:1:29","nodeType":"YulIdentifier","src":"2939:1:29"},{"kind":"number","nativeSrc":"2942:2:29","nodeType":"YulLiteral","src":"2942:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2935:3:29","nodeType":"YulIdentifier","src":"2935:3:29"},"nativeSrc":"2935:10:29","nodeType":"YulFunctionCall","src":"2935:10:29"},"variableNames":[{"name":"i","nativeSrc":"2930:1:29","nodeType":"YulIdentifier","src":"2930:1:29"}]}]},"pre":{"nativeSrc":"2910:3:29","nodeType":"YulBlock","src":"2910:3:29","statements":[]},"src":"2906:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3039:3:29","nodeType":"YulIdentifier","src":"3039:3:29"},{"name":"length","nativeSrc":"3044:6:29","nodeType":"YulIdentifier","src":"3044:6:29"}],"functionName":{"name":"add","nativeSrc":"3035:3:29","nodeType":"YulIdentifier","src":"3035:3:29"},"nativeSrc":"3035:16:29","nodeType":"YulFunctionCall","src":"3035:16:29"},{"kind":"number","nativeSrc":"3053:1:29","nodeType":"YulLiteral","src":"3053:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3028:6:29","nodeType":"YulIdentifier","src":"3028:6:29"},"nativeSrc":"3028:27:29","nodeType":"YulFunctionCall","src":"3028:27:29"},"nativeSrc":"3028:27:29","nodeType":"YulExpressionStatement","src":"3028:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2811:250:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2855:3:29","nodeType":"YulTypedName","src":"2855:3:29","type":""},{"name":"dst","nativeSrc":"2860:3:29","nodeType":"YulTypedName","src":"2860:3:29","type":""},{"name":"length","nativeSrc":"2865:6:29","nodeType":"YulTypedName","src":"2865:6:29","type":""}],"src":"2811:250:29"},{"body":{"nativeSrc":"3116:221:29","nodeType":"YulBlock","src":"3116:221:29","statements":[{"nativeSrc":"3126:26:29","nodeType":"YulVariableDeclaration","src":"3126:26:29","value":{"arguments":[{"name":"value","nativeSrc":"3146:5:29","nodeType":"YulIdentifier","src":"3146:5:29"}],"functionName":{"name":"mload","nativeSrc":"3140:5:29","nodeType":"YulIdentifier","src":"3140:5:29"},"nativeSrc":"3140:12:29","nodeType":"YulFunctionCall","src":"3140:12:29"},"variables":[{"name":"length","nativeSrc":"3130:6:29","nodeType":"YulTypedName","src":"3130:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3168:3:29","nodeType":"YulIdentifier","src":"3168:3:29"},{"name":"length","nativeSrc":"3173:6:29","nodeType":"YulIdentifier","src":"3173:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3161:6:29","nodeType":"YulIdentifier","src":"3161:6:29"},"nativeSrc":"3161:19:29","nodeType":"YulFunctionCall","src":"3161:19:29"},"nativeSrc":"3161:19:29","nodeType":"YulExpressionStatement","src":"3161:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3228:5:29","nodeType":"YulIdentifier","src":"3228:5:29"},{"kind":"number","nativeSrc":"3235:4:29","nodeType":"YulLiteral","src":"3235:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3224:3:29","nodeType":"YulIdentifier","src":"3224:3:29"},"nativeSrc":"3224:16:29","nodeType":"YulFunctionCall","src":"3224:16:29"},{"arguments":[{"name":"pos","nativeSrc":"3246:3:29","nodeType":"YulIdentifier","src":"3246:3:29"},{"kind":"number","nativeSrc":"3251:4:29","nodeType":"YulLiteral","src":"3251:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3242:3:29","nodeType":"YulIdentifier","src":"3242:3:29"},"nativeSrc":"3242:14:29","nodeType":"YulFunctionCall","src":"3242:14:29"},{"name":"length","nativeSrc":"3258:6:29","nodeType":"YulIdentifier","src":"3258:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3189:34:29","nodeType":"YulIdentifier","src":"3189:34:29"},"nativeSrc":"3189:76:29","nodeType":"YulFunctionCall","src":"3189:76:29"},"nativeSrc":"3189:76:29","nodeType":"YulExpressionStatement","src":"3189:76:29"},{"nativeSrc":"3274:57:29","nodeType":"YulAssignment","src":"3274:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"3289:3:29","nodeType":"YulIdentifier","src":"3289:3:29"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3302:6:29","nodeType":"YulIdentifier","src":"3302:6:29"},{"kind":"number","nativeSrc":"3310:2:29","nodeType":"YulLiteral","src":"3310:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3298:3:29","nodeType":"YulIdentifier","src":"3298:3:29"},"nativeSrc":"3298:15:29","nodeType":"YulFunctionCall","src":"3298:15:29"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:29","nodeType":"YulLiteral","src":"3319:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3315:3:29","nodeType":"YulIdentifier","src":"3315:3:29"},"nativeSrc":"3315:7:29","nodeType":"YulFunctionCall","src":"3315:7:29"}],"functionName":{"name":"and","nativeSrc":"3294:3:29","nodeType":"YulIdentifier","src":"3294:3:29"},"nativeSrc":"3294:29:29","nodeType":"YulFunctionCall","src":"3294:29:29"}],"functionName":{"name":"add","nativeSrc":"3285:3:29","nodeType":"YulIdentifier","src":"3285:3:29"},"nativeSrc":"3285:39:29","nodeType":"YulFunctionCall","src":"3285:39:29"},{"kind":"number","nativeSrc":"3326:4:29","nodeType":"YulLiteral","src":"3326:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3281:3:29","nodeType":"YulIdentifier","src":"3281:3:29"},"nativeSrc":"3281:50:29","nodeType":"YulFunctionCall","src":"3281:50:29"},"variableNames":[{"name":"end","nativeSrc":"3274:3:29","nodeType":"YulIdentifier","src":"3274:3:29"}]}]},"name":"abi_encode_string","nativeSrc":"3066:271:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3093:5:29","nodeType":"YulTypedName","src":"3093:5:29","type":""},{"name":"pos","nativeSrc":"3100:3:29","nodeType":"YulTypedName","src":"3100:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3108:3:29","nodeType":"YulTypedName","src":"3108:3:29","type":""}],"src":"3066:271:29"},{"body":{"nativeSrc":"3463:99:29","nodeType":"YulBlock","src":"3463:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3480:9:29","nodeType":"YulIdentifier","src":"3480:9:29"},{"kind":"number","nativeSrc":"3491:2:29","nodeType":"YulLiteral","src":"3491:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3473:6:29","nodeType":"YulIdentifier","src":"3473:6:29"},"nativeSrc":"3473:21:29","nodeType":"YulFunctionCall","src":"3473:21:29"},"nativeSrc":"3473:21:29","nodeType":"YulExpressionStatement","src":"3473:21:29"},{"nativeSrc":"3503:53:29","nodeType":"YulAssignment","src":"3503:53:29","value":{"arguments":[{"name":"value0","nativeSrc":"3529:6:29","nodeType":"YulIdentifier","src":"3529:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"3541:9:29","nodeType":"YulIdentifier","src":"3541:9:29"},{"kind":"number","nativeSrc":"3552:2:29","nodeType":"YulLiteral","src":"3552:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3537:3:29","nodeType":"YulIdentifier","src":"3537:3:29"},"nativeSrc":"3537:18:29","nodeType":"YulFunctionCall","src":"3537:18:29"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3511:17:29","nodeType":"YulIdentifier","src":"3511:17:29"},"nativeSrc":"3511:45:29","nodeType":"YulFunctionCall","src":"3511:45:29"},"variableNames":[{"name":"tail","nativeSrc":"3503:4:29","nodeType":"YulIdentifier","src":"3503:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3342:220:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3432:9:29","nodeType":"YulTypedName","src":"3432:9:29","type":""},{"name":"value0","nativeSrc":"3443:6:29","nodeType":"YulTypedName","src":"3443:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3454:4:29","nodeType":"YulTypedName","src":"3454:4:29","type":""}],"src":"3342:220:29"},{"body":{"nativeSrc":"3636:114:29","nodeType":"YulBlock","src":"3636:114:29","statements":[{"body":{"nativeSrc":"3680:22:29","nodeType":"YulBlock","src":"3680:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3682:16:29","nodeType":"YulIdentifier","src":"3682:16:29"},"nativeSrc":"3682:18:29","nodeType":"YulFunctionCall","src":"3682:18:29"},"nativeSrc":"3682:18:29","nodeType":"YulExpressionStatement","src":"3682:18:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3652:6:29","nodeType":"YulIdentifier","src":"3652:6:29"},{"kind":"number","nativeSrc":"3660:18:29","nodeType":"YulLiteral","src":"3660:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3649:2:29","nodeType":"YulIdentifier","src":"3649:2:29"},"nativeSrc":"3649:30:29","nodeType":"YulFunctionCall","src":"3649:30:29"},"nativeSrc":"3646:56:29","nodeType":"YulIf","src":"3646:56:29"},{"nativeSrc":"3711:33:29","nodeType":"YulAssignment","src":"3711:33:29","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3727:1:29","nodeType":"YulLiteral","src":"3727:1:29","type":"","value":"5"},{"name":"length","nativeSrc":"3730:6:29","nodeType":"YulIdentifier","src":"3730:6:29"}],"functionName":{"name":"shl","nativeSrc":"3723:3:29","nodeType":"YulIdentifier","src":"3723:3:29"},"nativeSrc":"3723:14:29","nodeType":"YulFunctionCall","src":"3723:14:29"},{"kind":"number","nativeSrc":"3739:4:29","nodeType":"YulLiteral","src":"3739:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3719:3:29","nodeType":"YulIdentifier","src":"3719:3:29"},"nativeSrc":"3719:25:29","nodeType":"YulFunctionCall","src":"3719:25:29"},"variableNames":[{"name":"size","nativeSrc":"3711:4:29","nodeType":"YulIdentifier","src":"3711:4:29"}]}]},"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"3567:183:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3616:6:29","nodeType":"YulTypedName","src":"3616:6:29","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3627:4:29","nodeType":"YulTypedName","src":"3627:4:29","type":""}],"src":"3567:183:29"},{"body":{"nativeSrc":"3819:659:29","nodeType":"YulBlock","src":"3819:659:29","statements":[{"body":{"nativeSrc":"3868:16:29","nodeType":"YulBlock","src":"3868:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3877:1:29","nodeType":"YulLiteral","src":"3877:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3880:1:29","nodeType":"YulLiteral","src":"3880:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3870:6:29","nodeType":"YulIdentifier","src":"3870:6:29"},"nativeSrc":"3870:12:29","nodeType":"YulFunctionCall","src":"3870:12:29"},"nativeSrc":"3870:12:29","nodeType":"YulExpressionStatement","src":"3870:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3847:6:29","nodeType":"YulIdentifier","src":"3847:6:29"},{"kind":"number","nativeSrc":"3855:4:29","nodeType":"YulLiteral","src":"3855:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3843:3:29","nodeType":"YulIdentifier","src":"3843:3:29"},"nativeSrc":"3843:17:29","nodeType":"YulFunctionCall","src":"3843:17:29"},{"name":"end","nativeSrc":"3862:3:29","nodeType":"YulIdentifier","src":"3862:3:29"}],"functionName":{"name":"slt","nativeSrc":"3839:3:29","nodeType":"YulIdentifier","src":"3839:3:29"},"nativeSrc":"3839:27:29","nodeType":"YulFunctionCall","src":"3839:27:29"}],"functionName":{"name":"iszero","nativeSrc":"3832:6:29","nodeType":"YulIdentifier","src":"3832:6:29"},"nativeSrc":"3832:35:29","nodeType":"YulFunctionCall","src":"3832:35:29"},"nativeSrc":"3829:55:29","nodeType":"YulIf","src":"3829:55:29"},{"nativeSrc":"3893:34:29","nodeType":"YulVariableDeclaration","src":"3893:34:29","value":{"arguments":[{"name":"offset","nativeSrc":"3920:6:29","nodeType":"YulIdentifier","src":"3920:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"3907:12:29","nodeType":"YulIdentifier","src":"3907:12:29"},"nativeSrc":"3907:20:29","nodeType":"YulFunctionCall","src":"3907:20:29"},"variables":[{"name":"length","nativeSrc":"3897:6:29","nodeType":"YulTypedName","src":"3897:6:29","type":""}]},{"nativeSrc":"3936:75:29","nodeType":"YulVariableDeclaration","src":"3936:75:29","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4003:6:29","nodeType":"YulIdentifier","src":"4003:6:29"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"3963:39:29","nodeType":"YulIdentifier","src":"3963:39:29"},"nativeSrc":"3963:47:29","nodeType":"YulFunctionCall","src":"3963:47:29"}],"functionName":{"name":"allocate_memory","nativeSrc":"3947:15:29","nodeType":"YulIdentifier","src":"3947:15:29"},"nativeSrc":"3947:64:29","nodeType":"YulFunctionCall","src":"3947:64:29"},"variables":[{"name":"dst","nativeSrc":"3940:3:29","nodeType":"YulTypedName","src":"3940:3:29","type":""}]},{"nativeSrc":"4020:18:29","nodeType":"YulVariableDeclaration","src":"4020:18:29","value":{"name":"dst","nativeSrc":"4035:3:29","nodeType":"YulIdentifier","src":"4035:3:29"},"variables":[{"name":"array_1","nativeSrc":"4024:7:29","nodeType":"YulTypedName","src":"4024:7:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"4054:3:29","nodeType":"YulIdentifier","src":"4054:3:29"},{"name":"length","nativeSrc":"4059:6:29","nodeType":"YulIdentifier","src":"4059:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4047:6:29","nodeType":"YulIdentifier","src":"4047:6:29"},"nativeSrc":"4047:19:29","nodeType":"YulFunctionCall","src":"4047:19:29"},"nativeSrc":"4047:19:29","nodeType":"YulExpressionStatement","src":"4047:19:29"},{"nativeSrc":"4075:21:29","nodeType":"YulAssignment","src":"4075:21:29","value":{"arguments":[{"name":"dst","nativeSrc":"4086:3:29","nodeType":"YulIdentifier","src":"4086:3:29"},{"kind":"number","nativeSrc":"4091:4:29","nodeType":"YulLiteral","src":"4091:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4082:3:29","nodeType":"YulIdentifier","src":"4082:3:29"},"nativeSrc":"4082:14:29","nodeType":"YulFunctionCall","src":"4082:14:29"},"variableNames":[{"name":"dst","nativeSrc":"4075:3:29","nodeType":"YulIdentifier","src":"4075:3:29"}]},{"nativeSrc":"4105:52:29","nodeType":"YulVariableDeclaration","src":"4105:52:29","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4127:6:29","nodeType":"YulIdentifier","src":"4127:6:29"},{"arguments":[{"kind":"number","nativeSrc":"4139:1:29","nodeType":"YulLiteral","src":"4139:1:29","type":"","value":"5"},{"name":"length","nativeSrc":"4142:6:29","nodeType":"YulIdentifier","src":"4142:6:29"}],"functionName":{"name":"shl","nativeSrc":"4135:3:29","nodeType":"YulIdentifier","src":"4135:3:29"},"nativeSrc":"4135:14:29","nodeType":"YulFunctionCall","src":"4135:14:29"}],"functionName":{"name":"add","nativeSrc":"4123:3:29","nodeType":"YulIdentifier","src":"4123:3:29"},"nativeSrc":"4123:27:29","nodeType":"YulFunctionCall","src":"4123:27:29"},{"kind":"number","nativeSrc":"4152:4:29","nodeType":"YulLiteral","src":"4152:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4119:3:29","nodeType":"YulIdentifier","src":"4119:3:29"},"nativeSrc":"4119:38:29","nodeType":"YulFunctionCall","src":"4119:38:29"},"variables":[{"name":"srcEnd","nativeSrc":"4109:6:29","nodeType":"YulTypedName","src":"4109:6:29","type":""}]},{"body":{"nativeSrc":"4185:16:29","nodeType":"YulBlock","src":"4185:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4194:1:29","nodeType":"YulLiteral","src":"4194:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4197:1:29","nodeType":"YulLiteral","src":"4197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4187:6:29","nodeType":"YulIdentifier","src":"4187:6:29"},"nativeSrc":"4187:12:29","nodeType":"YulFunctionCall","src":"4187:12:29"},"nativeSrc":"4187:12:29","nodeType":"YulExpressionStatement","src":"4187:12:29"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"4172:6:29","nodeType":"YulIdentifier","src":"4172:6:29"},{"name":"end","nativeSrc":"4180:3:29","nodeType":"YulIdentifier","src":"4180:3:29"}],"functionName":{"name":"gt","nativeSrc":"4169:2:29","nodeType":"YulIdentifier","src":"4169:2:29"},"nativeSrc":"4169:15:29","nodeType":"YulFunctionCall","src":"4169:15:29"},"nativeSrc":"4166:35:29","nodeType":"YulIf","src":"4166:35:29"},{"nativeSrc":"4210:28:29","nodeType":"YulVariableDeclaration","src":"4210:28:29","value":{"arguments":[{"name":"offset","nativeSrc":"4225:6:29","nodeType":"YulIdentifier","src":"4225:6:29"},{"kind":"number","nativeSrc":"4233:4:29","nodeType":"YulLiteral","src":"4233:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4221:3:29","nodeType":"YulIdentifier","src":"4221:3:29"},"nativeSrc":"4221:17:29","nodeType":"YulFunctionCall","src":"4221:17:29"},"variables":[{"name":"src","nativeSrc":"4214:3:29","nodeType":"YulTypedName","src":"4214:3:29","type":""}]},{"body":{"nativeSrc":"4305:142:29","nodeType":"YulBlock","src":"4305:142:29","statements":[{"nativeSrc":"4319:14:29","nodeType":"YulVariableDeclaration","src":"4319:14:29","value":{"kind":"number","nativeSrc":"4332:1:29","nodeType":"YulLiteral","src":"4332:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4323:5:29","nodeType":"YulTypedName","src":"4323:5:29","type":""}]},{"nativeSrc":"4346:26:29","nodeType":"YulAssignment","src":"4346:26:29","value":{"arguments":[{"name":"src","nativeSrc":"4368:3:29","nodeType":"YulIdentifier","src":"4368:3:29"}],"functionName":{"name":"calldataload","nativeSrc":"4355:12:29","nodeType":"YulIdentifier","src":"4355:12:29"},"nativeSrc":"4355:17:29","nodeType":"YulFunctionCall","src":"4355:17:29"},"variableNames":[{"name":"value","nativeSrc":"4346:5:29","nodeType":"YulIdentifier","src":"4346:5:29"}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"4392:3:29","nodeType":"YulIdentifier","src":"4392:3:29"},{"name":"value","nativeSrc":"4397:5:29","nodeType":"YulIdentifier","src":"4397:5:29"}],"functionName":{"name":"mstore","nativeSrc":"4385:6:29","nodeType":"YulIdentifier","src":"4385:6:29"},"nativeSrc":"4385:18:29","nodeType":"YulFunctionCall","src":"4385:18:29"},"nativeSrc":"4385:18:29","nodeType":"YulExpressionStatement","src":"4385:18:29"},{"nativeSrc":"4416:21:29","nodeType":"YulAssignment","src":"4416:21:29","value":{"arguments":[{"name":"dst","nativeSrc":"4427:3:29","nodeType":"YulIdentifier","src":"4427:3:29"},{"kind":"number","nativeSrc":"4432:4:29","nodeType":"YulLiteral","src":"4432:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4423:3:29","nodeType":"YulIdentifier","src":"4423:3:29"},"nativeSrc":"4423:14:29","nodeType":"YulFunctionCall","src":"4423:14:29"},"variableNames":[{"name":"dst","nativeSrc":"4416:3:29","nodeType":"YulIdentifier","src":"4416:3:29"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"4258:3:29","nodeType":"YulIdentifier","src":"4258:3:29"},{"name":"srcEnd","nativeSrc":"4263:6:29","nodeType":"YulIdentifier","src":"4263:6:29"}],"functionName":{"name":"lt","nativeSrc":"4255:2:29","nodeType":"YulIdentifier","src":"4255:2:29"},"nativeSrc":"4255:15:29","nodeType":"YulFunctionCall","src":"4255:15:29"},"nativeSrc":"4247:200:29","nodeType":"YulForLoop","post":{"nativeSrc":"4271:25:29","nodeType":"YulBlock","src":"4271:25:29","statements":[{"nativeSrc":"4273:21:29","nodeType":"YulAssignment","src":"4273:21:29","value":{"arguments":[{"name":"src","nativeSrc":"4284:3:29","nodeType":"YulIdentifier","src":"4284:3:29"},{"kind":"number","nativeSrc":"4289:4:29","nodeType":"YulLiteral","src":"4289:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4280:3:29","nodeType":"YulIdentifier","src":"4280:3:29"},"nativeSrc":"4280:14:29","nodeType":"YulFunctionCall","src":"4280:14:29"},"variableNames":[{"name":"src","nativeSrc":"4273:3:29","nodeType":"YulIdentifier","src":"4273:3:29"}]}]},"pre":{"nativeSrc":"4251:3:29","nodeType":"YulBlock","src":"4251:3:29","statements":[]},"src":"4247:200:29"},{"nativeSrc":"4456:16:29","nodeType":"YulAssignment","src":"4456:16:29","value":{"name":"array_1","nativeSrc":"4465:7:29","nodeType":"YulIdentifier","src":"4465:7:29"},"variableNames":[{"name":"array","nativeSrc":"4456:5:29","nodeType":"YulIdentifier","src":"4456:5:29"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"3755:723:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3793:6:29","nodeType":"YulTypedName","src":"3793:6:29","type":""},{"name":"end","nativeSrc":"3801:3:29","nodeType":"YulTypedName","src":"3801:3:29","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3809:5:29","nodeType":"YulTypedName","src":"3809:5:29","type":""}],"src":"3755:723:29"},{"body":{"nativeSrc":"4535:169:29","nodeType":"YulBlock","src":"4535:169:29","statements":[{"body":{"nativeSrc":"4584:16:29","nodeType":"YulBlock","src":"4584:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4593:1:29","nodeType":"YulLiteral","src":"4593:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4596:1:29","nodeType":"YulLiteral","src":"4596:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4586:6:29","nodeType":"YulIdentifier","src":"4586:6:29"},"nativeSrc":"4586:12:29","nodeType":"YulFunctionCall","src":"4586:12:29"},"nativeSrc":"4586:12:29","nodeType":"YulExpressionStatement","src":"4586:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4563:6:29","nodeType":"YulIdentifier","src":"4563:6:29"},{"kind":"number","nativeSrc":"4571:4:29","nodeType":"YulLiteral","src":"4571:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4559:3:29","nodeType":"YulIdentifier","src":"4559:3:29"},"nativeSrc":"4559:17:29","nodeType":"YulFunctionCall","src":"4559:17:29"},{"name":"end","nativeSrc":"4578:3:29","nodeType":"YulIdentifier","src":"4578:3:29"}],"functionName":{"name":"slt","nativeSrc":"4555:3:29","nodeType":"YulIdentifier","src":"4555:3:29"},"nativeSrc":"4555:27:29","nodeType":"YulFunctionCall","src":"4555:27:29"}],"functionName":{"name":"iszero","nativeSrc":"4548:6:29","nodeType":"YulIdentifier","src":"4548:6:29"},"nativeSrc":"4548:35:29","nodeType":"YulFunctionCall","src":"4548:35:29"},"nativeSrc":"4545:55:29","nodeType":"YulIf","src":"4545:55:29"},{"nativeSrc":"4609:89:29","nodeType":"YulAssignment","src":"4609:89:29","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4657:6:29","nodeType":"YulIdentifier","src":"4657:6:29"},{"kind":"number","nativeSrc":"4665:4:29","nodeType":"YulLiteral","src":"4665:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4653:3:29","nodeType":"YulIdentifier","src":"4653:3:29"},"nativeSrc":"4653:17:29","nodeType":"YulFunctionCall","src":"4653:17:29"},{"arguments":[{"name":"offset","nativeSrc":"4685:6:29","nodeType":"YulIdentifier","src":"4685:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"4672:12:29","nodeType":"YulIdentifier","src":"4672:12:29"},"nativeSrc":"4672:20:29","nodeType":"YulFunctionCall","src":"4672:20:29"},{"name":"end","nativeSrc":"4694:3:29","nodeType":"YulIdentifier","src":"4694:3:29"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"4618:34:29","nodeType":"YulIdentifier","src":"4618:34:29"},"nativeSrc":"4618:80:29","nodeType":"YulFunctionCall","src":"4618:80:29"},"variableNames":[{"name":"array","nativeSrc":"4609:5:29","nodeType":"YulIdentifier","src":"4609:5:29"}]}]},"name":"abi_decode_bytes","nativeSrc":"4483:221:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4509:6:29","nodeType":"YulTypedName","src":"4509:6:29","type":""},{"name":"end","nativeSrc":"4517:3:29","nodeType":"YulTypedName","src":"4517:3:29","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4525:5:29","nodeType":"YulTypedName","src":"4525:5:29","type":""}],"src":"4483:221:29"},{"body":{"nativeSrc":"4889:699:29","nodeType":"YulBlock","src":"4889:699:29","statements":[{"body":{"nativeSrc":"4936:16:29","nodeType":"YulBlock","src":"4936:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4945:1:29","nodeType":"YulLiteral","src":"4945:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4948:1:29","nodeType":"YulLiteral","src":"4948:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4938:6:29","nodeType":"YulIdentifier","src":"4938:6:29"},"nativeSrc":"4938:12:29","nodeType":"YulFunctionCall","src":"4938:12:29"},"nativeSrc":"4938:12:29","nodeType":"YulExpressionStatement","src":"4938:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4910:7:29","nodeType":"YulIdentifier","src":"4910:7:29"},{"name":"headStart","nativeSrc":"4919:9:29","nodeType":"YulIdentifier","src":"4919:9:29"}],"functionName":{"name":"sub","nativeSrc":"4906:3:29","nodeType":"YulIdentifier","src":"4906:3:29"},"nativeSrc":"4906:23:29","nodeType":"YulFunctionCall","src":"4906:23:29"},{"kind":"number","nativeSrc":"4931:3:29","nodeType":"YulLiteral","src":"4931:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4902:3:29","nodeType":"YulIdentifier","src":"4902:3:29"},"nativeSrc":"4902:33:29","nodeType":"YulFunctionCall","src":"4902:33:29"},"nativeSrc":"4899:53:29","nodeType":"YulIf","src":"4899:53:29"},{"nativeSrc":"4961:39:29","nodeType":"YulAssignment","src":"4961:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4990:9:29","nodeType":"YulIdentifier","src":"4990:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4971:18:29","nodeType":"YulIdentifier","src":"4971:18:29"},"nativeSrc":"4971:29:29","nodeType":"YulFunctionCall","src":"4971:29:29"},"variableNames":[{"name":"value0","nativeSrc":"4961:6:29","nodeType":"YulIdentifier","src":"4961:6:29"}]},{"nativeSrc":"5009:46:29","nodeType":"YulVariableDeclaration","src":"5009:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5040:9:29","nodeType":"YulIdentifier","src":"5040:9:29"},{"kind":"number","nativeSrc":"5051:2:29","nodeType":"YulLiteral","src":"5051:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5036:3:29","nodeType":"YulIdentifier","src":"5036:3:29"},"nativeSrc":"5036:18:29","nodeType":"YulFunctionCall","src":"5036:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"5023:12:29","nodeType":"YulIdentifier","src":"5023:12:29"},"nativeSrc":"5023:32:29","nodeType":"YulFunctionCall","src":"5023:32:29"},"variables":[{"name":"offset","nativeSrc":"5013:6:29","nodeType":"YulTypedName","src":"5013:6:29","type":""}]},{"body":{"nativeSrc":"5098:16:29","nodeType":"YulBlock","src":"5098:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5107:1:29","nodeType":"YulLiteral","src":"5107:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5110:1:29","nodeType":"YulLiteral","src":"5110:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5100:6:29","nodeType":"YulIdentifier","src":"5100:6:29"},"nativeSrc":"5100:12:29","nodeType":"YulFunctionCall","src":"5100:12:29"},"nativeSrc":"5100:12:29","nodeType":"YulExpressionStatement","src":"5100:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5070:6:29","nodeType":"YulIdentifier","src":"5070:6:29"},{"kind":"number","nativeSrc":"5078:18:29","nodeType":"YulLiteral","src":"5078:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5067:2:29","nodeType":"YulIdentifier","src":"5067:2:29"},"nativeSrc":"5067:30:29","nodeType":"YulFunctionCall","src":"5067:30:29"},"nativeSrc":"5064:50:29","nodeType":"YulIf","src":"5064:50:29"},{"nativeSrc":"5123:71:29","nodeType":"YulAssignment","src":"5123:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5166:9:29","nodeType":"YulIdentifier","src":"5166:9:29"},{"name":"offset","nativeSrc":"5177:6:29","nodeType":"YulIdentifier","src":"5177:6:29"}],"functionName":{"name":"add","nativeSrc":"5162:3:29","nodeType":"YulIdentifier","src":"5162:3:29"},"nativeSrc":"5162:22:29","nodeType":"YulFunctionCall","src":"5162:22:29"},{"name":"dataEnd","nativeSrc":"5186:7:29","nodeType":"YulIdentifier","src":"5186:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"5133:28:29","nodeType":"YulIdentifier","src":"5133:28:29"},"nativeSrc":"5133:61:29","nodeType":"YulFunctionCall","src":"5133:61:29"},"variableNames":[{"name":"value1","nativeSrc":"5123:6:29","nodeType":"YulIdentifier","src":"5123:6:29"}]},{"nativeSrc":"5203:48:29","nodeType":"YulVariableDeclaration","src":"5203:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5236:9:29","nodeType":"YulIdentifier","src":"5236:9:29"},{"kind":"number","nativeSrc":"5247:2:29","nodeType":"YulLiteral","src":"5247:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5232:3:29","nodeType":"YulIdentifier","src":"5232:3:29"},"nativeSrc":"5232:18:29","nodeType":"YulFunctionCall","src":"5232:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"5219:12:29","nodeType":"YulIdentifier","src":"5219:12:29"},"nativeSrc":"5219:32:29","nodeType":"YulFunctionCall","src":"5219:32:29"},"variables":[{"name":"offset_1","nativeSrc":"5207:8:29","nodeType":"YulTypedName","src":"5207:8:29","type":""}]},{"body":{"nativeSrc":"5296:16:29","nodeType":"YulBlock","src":"5296:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5305:1:29","nodeType":"YulLiteral","src":"5305:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5308:1:29","nodeType":"YulLiteral","src":"5308:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5298:6:29","nodeType":"YulIdentifier","src":"5298:6:29"},"nativeSrc":"5298:12:29","nodeType":"YulFunctionCall","src":"5298:12:29"},"nativeSrc":"5298:12:29","nodeType":"YulExpressionStatement","src":"5298:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"5266:8:29","nodeType":"YulIdentifier","src":"5266:8:29"},{"kind":"number","nativeSrc":"5276:18:29","nodeType":"YulLiteral","src":"5276:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5263:2:29","nodeType":"YulIdentifier","src":"5263:2:29"},"nativeSrc":"5263:32:29","nodeType":"YulFunctionCall","src":"5263:32:29"},"nativeSrc":"5260:52:29","nodeType":"YulIf","src":"5260:52:29"},{"nativeSrc":"5321:73:29","nodeType":"YulAssignment","src":"5321:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5364:9:29","nodeType":"YulIdentifier","src":"5364:9:29"},{"name":"offset_1","nativeSrc":"5375:8:29","nodeType":"YulIdentifier","src":"5375:8:29"}],"functionName":{"name":"add","nativeSrc":"5360:3:29","nodeType":"YulIdentifier","src":"5360:3:29"},"nativeSrc":"5360:24:29","nodeType":"YulFunctionCall","src":"5360:24:29"},{"name":"dataEnd","nativeSrc":"5386:7:29","nodeType":"YulIdentifier","src":"5386:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"5331:28:29","nodeType":"YulIdentifier","src":"5331:28:29"},"nativeSrc":"5331:63:29","nodeType":"YulFunctionCall","src":"5331:63:29"},"variableNames":[{"name":"value2","nativeSrc":"5321:6:29","nodeType":"YulIdentifier","src":"5321:6:29"}]},{"nativeSrc":"5403:48:29","nodeType":"YulVariableDeclaration","src":"5403:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5436:9:29","nodeType":"YulIdentifier","src":"5436:9:29"},{"kind":"number","nativeSrc":"5447:2:29","nodeType":"YulLiteral","src":"5447:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5432:3:29","nodeType":"YulIdentifier","src":"5432:3:29"},"nativeSrc":"5432:18:29","nodeType":"YulFunctionCall","src":"5432:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"5419:12:29","nodeType":"YulIdentifier","src":"5419:12:29"},"nativeSrc":"5419:32:29","nodeType":"YulFunctionCall","src":"5419:32:29"},"variables":[{"name":"offset_2","nativeSrc":"5407:8:29","nodeType":"YulTypedName","src":"5407:8:29","type":""}]},{"body":{"nativeSrc":"5496:16:29","nodeType":"YulBlock","src":"5496:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5505:1:29","nodeType":"YulLiteral","src":"5505:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5508:1:29","nodeType":"YulLiteral","src":"5508:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5498:6:29","nodeType":"YulIdentifier","src":"5498:6:29"},"nativeSrc":"5498:12:29","nodeType":"YulFunctionCall","src":"5498:12:29"},"nativeSrc":"5498:12:29","nodeType":"YulExpressionStatement","src":"5498:12:29"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"5466:8:29","nodeType":"YulIdentifier","src":"5466:8:29"},{"kind":"number","nativeSrc":"5476:18:29","nodeType":"YulLiteral","src":"5476:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5463:2:29","nodeType":"YulIdentifier","src":"5463:2:29"},"nativeSrc":"5463:32:29","nodeType":"YulFunctionCall","src":"5463:32:29"},"nativeSrc":"5460:52:29","nodeType":"YulIf","src":"5460:52:29"},{"nativeSrc":"5521:61:29","nodeType":"YulAssignment","src":"5521:61:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5552:9:29","nodeType":"YulIdentifier","src":"5552:9:29"},{"name":"offset_2","nativeSrc":"5563:8:29","nodeType":"YulIdentifier","src":"5563:8:29"}],"functionName":{"name":"add","nativeSrc":"5548:3:29","nodeType":"YulIdentifier","src":"5548:3:29"},"nativeSrc":"5548:24:29","nodeType":"YulFunctionCall","src":"5548:24:29"},{"name":"dataEnd","nativeSrc":"5574:7:29","nodeType":"YulIdentifier","src":"5574:7:29"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"5531:16:29","nodeType":"YulIdentifier","src":"5531:16:29"},"nativeSrc":"5531:51:29","nodeType":"YulFunctionCall","src":"5531:51:29"},"variableNames":[{"name":"value3","nativeSrc":"5521:6:29","nodeType":"YulIdentifier","src":"5521:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"4709:879:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4831:9:29","nodeType":"YulTypedName","src":"4831:9:29","type":""},{"name":"dataEnd","nativeSrc":"4842:7:29","nodeType":"YulTypedName","src":"4842:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4854:6:29","nodeType":"YulTypedName","src":"4854:6:29","type":""},{"name":"value1","nativeSrc":"4862:6:29","nodeType":"YulTypedName","src":"4862:6:29","type":""},{"name":"value2","nativeSrc":"4870:6:29","nodeType":"YulTypedName","src":"4870:6:29","type":""},{"name":"value3","nativeSrc":"4878:6:29","nodeType":"YulTypedName","src":"4878:6:29","type":""}],"src":"4709:879:29"},{"body":{"nativeSrc":"5790:757:29","nodeType":"YulBlock","src":"5790:757:29","statements":[{"body":{"nativeSrc":"5837:16:29","nodeType":"YulBlock","src":"5837:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5846:1:29","nodeType":"YulLiteral","src":"5846:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5849:1:29","nodeType":"YulLiteral","src":"5849:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5839:6:29","nodeType":"YulIdentifier","src":"5839:6:29"},"nativeSrc":"5839:12:29","nodeType":"YulFunctionCall","src":"5839:12:29"},"nativeSrc":"5839:12:29","nodeType":"YulExpressionStatement","src":"5839:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5811:7:29","nodeType":"YulIdentifier","src":"5811:7:29"},{"name":"headStart","nativeSrc":"5820:9:29","nodeType":"YulIdentifier","src":"5820:9:29"}],"functionName":{"name":"sub","nativeSrc":"5807:3:29","nodeType":"YulIdentifier","src":"5807:3:29"},"nativeSrc":"5807:23:29","nodeType":"YulFunctionCall","src":"5807:23:29"},{"kind":"number","nativeSrc":"5832:3:29","nodeType":"YulLiteral","src":"5832:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"5803:3:29","nodeType":"YulIdentifier","src":"5803:3:29"},"nativeSrc":"5803:33:29","nodeType":"YulFunctionCall","src":"5803:33:29"},"nativeSrc":"5800:53:29","nodeType":"YulIf","src":"5800:53:29"},{"nativeSrc":"5862:39:29","nodeType":"YulAssignment","src":"5862:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5891:9:29","nodeType":"YulIdentifier","src":"5891:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5872:18:29","nodeType":"YulIdentifier","src":"5872:18:29"},"nativeSrc":"5872:29:29","nodeType":"YulFunctionCall","src":"5872:29:29"},"variableNames":[{"name":"value0","nativeSrc":"5862:6:29","nodeType":"YulIdentifier","src":"5862:6:29"}]},{"nativeSrc":"5910:48:29","nodeType":"YulAssignment","src":"5910:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5943:9:29","nodeType":"YulIdentifier","src":"5943:9:29"},{"kind":"number","nativeSrc":"5954:2:29","nodeType":"YulLiteral","src":"5954:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5939:3:29","nodeType":"YulIdentifier","src":"5939:3:29"},"nativeSrc":"5939:18:29","nodeType":"YulFunctionCall","src":"5939:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5920:18:29","nodeType":"YulIdentifier","src":"5920:18:29"},"nativeSrc":"5920:38:29","nodeType":"YulFunctionCall","src":"5920:38:29"},"variableNames":[{"name":"value1","nativeSrc":"5910:6:29","nodeType":"YulIdentifier","src":"5910:6:29"}]},{"nativeSrc":"5967:46:29","nodeType":"YulVariableDeclaration","src":"5967:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5998:9:29","nodeType":"YulIdentifier","src":"5998:9:29"},{"kind":"number","nativeSrc":"6009:2:29","nodeType":"YulLiteral","src":"6009:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5994:3:29","nodeType":"YulIdentifier","src":"5994:3:29"},"nativeSrc":"5994:18:29","nodeType":"YulFunctionCall","src":"5994:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"5981:12:29","nodeType":"YulIdentifier","src":"5981:12:29"},"nativeSrc":"5981:32:29","nodeType":"YulFunctionCall","src":"5981:32:29"},"variables":[{"name":"offset","nativeSrc":"5971:6:29","nodeType":"YulTypedName","src":"5971:6:29","type":""}]},{"body":{"nativeSrc":"6056:16:29","nodeType":"YulBlock","src":"6056:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6065:1:29","nodeType":"YulLiteral","src":"6065:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6068:1:29","nodeType":"YulLiteral","src":"6068:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6058:6:29","nodeType":"YulIdentifier","src":"6058:6:29"},"nativeSrc":"6058:12:29","nodeType":"YulFunctionCall","src":"6058:12:29"},"nativeSrc":"6058:12:29","nodeType":"YulExpressionStatement","src":"6058:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6028:6:29","nodeType":"YulIdentifier","src":"6028:6:29"},{"kind":"number","nativeSrc":"6036:18:29","nodeType":"YulLiteral","src":"6036:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6025:2:29","nodeType":"YulIdentifier","src":"6025:2:29"},"nativeSrc":"6025:30:29","nodeType":"YulFunctionCall","src":"6025:30:29"},"nativeSrc":"6022:50:29","nodeType":"YulIf","src":"6022:50:29"},{"nativeSrc":"6081:71:29","nodeType":"YulAssignment","src":"6081:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6124:9:29","nodeType":"YulIdentifier","src":"6124:9:29"},{"name":"offset","nativeSrc":"6135:6:29","nodeType":"YulIdentifier","src":"6135:6:29"}],"functionName":{"name":"add","nativeSrc":"6120:3:29","nodeType":"YulIdentifier","src":"6120:3:29"},"nativeSrc":"6120:22:29","nodeType":"YulFunctionCall","src":"6120:22:29"},{"name":"dataEnd","nativeSrc":"6144:7:29","nodeType":"YulIdentifier","src":"6144:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"6091:28:29","nodeType":"YulIdentifier","src":"6091:28:29"},"nativeSrc":"6091:61:29","nodeType":"YulFunctionCall","src":"6091:61:29"},"variableNames":[{"name":"value2","nativeSrc":"6081:6:29","nodeType":"YulIdentifier","src":"6081:6:29"}]},{"nativeSrc":"6161:48:29","nodeType":"YulVariableDeclaration","src":"6161:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6194:9:29","nodeType":"YulIdentifier","src":"6194:9:29"},{"kind":"number","nativeSrc":"6205:2:29","nodeType":"YulLiteral","src":"6205:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6190:3:29","nodeType":"YulIdentifier","src":"6190:3:29"},"nativeSrc":"6190:18:29","nodeType":"YulFunctionCall","src":"6190:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"6177:12:29","nodeType":"YulIdentifier","src":"6177:12:29"},"nativeSrc":"6177:32:29","nodeType":"YulFunctionCall","src":"6177:32:29"},"variables":[{"name":"offset_1","nativeSrc":"6165:8:29","nodeType":"YulTypedName","src":"6165:8:29","type":""}]},{"body":{"nativeSrc":"6254:16:29","nodeType":"YulBlock","src":"6254:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6263:1:29","nodeType":"YulLiteral","src":"6263:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6266:1:29","nodeType":"YulLiteral","src":"6266:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6256:6:29","nodeType":"YulIdentifier","src":"6256:6:29"},"nativeSrc":"6256:12:29","nodeType":"YulFunctionCall","src":"6256:12:29"},"nativeSrc":"6256:12:29","nodeType":"YulExpressionStatement","src":"6256:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6224:8:29","nodeType":"YulIdentifier","src":"6224:8:29"},{"kind":"number","nativeSrc":"6234:18:29","nodeType":"YulLiteral","src":"6234:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6221:2:29","nodeType":"YulIdentifier","src":"6221:2:29"},"nativeSrc":"6221:32:29","nodeType":"YulFunctionCall","src":"6221:32:29"},"nativeSrc":"6218:52:29","nodeType":"YulIf","src":"6218:52:29"},{"nativeSrc":"6279:73:29","nodeType":"YulAssignment","src":"6279:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6322:9:29","nodeType":"YulIdentifier","src":"6322:9:29"},{"name":"offset_1","nativeSrc":"6333:8:29","nodeType":"YulIdentifier","src":"6333:8:29"}],"functionName":{"name":"add","nativeSrc":"6318:3:29","nodeType":"YulIdentifier","src":"6318:3:29"},"nativeSrc":"6318:24:29","nodeType":"YulFunctionCall","src":"6318:24:29"},{"name":"dataEnd","nativeSrc":"6344:7:29","nodeType":"YulIdentifier","src":"6344:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"6289:28:29","nodeType":"YulIdentifier","src":"6289:28:29"},"nativeSrc":"6289:63:29","nodeType":"YulFunctionCall","src":"6289:63:29"},"variableNames":[{"name":"value3","nativeSrc":"6279:6:29","nodeType":"YulIdentifier","src":"6279:6:29"}]},{"nativeSrc":"6361:49:29","nodeType":"YulVariableDeclaration","src":"6361:49:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6394:9:29","nodeType":"YulIdentifier","src":"6394:9:29"},{"kind":"number","nativeSrc":"6405:3:29","nodeType":"YulLiteral","src":"6405:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6390:3:29","nodeType":"YulIdentifier","src":"6390:3:29"},"nativeSrc":"6390:19:29","nodeType":"YulFunctionCall","src":"6390:19:29"}],"functionName":{"name":"calldataload","nativeSrc":"6377:12:29","nodeType":"YulIdentifier","src":"6377:12:29"},"nativeSrc":"6377:33:29","nodeType":"YulFunctionCall","src":"6377:33:29"},"variables":[{"name":"offset_2","nativeSrc":"6365:8:29","nodeType":"YulTypedName","src":"6365:8:29","type":""}]},{"body":{"nativeSrc":"6455:16:29","nodeType":"YulBlock","src":"6455:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6464:1:29","nodeType":"YulLiteral","src":"6464:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6467:1:29","nodeType":"YulLiteral","src":"6467:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6457:6:29","nodeType":"YulIdentifier","src":"6457:6:29"},"nativeSrc":"6457:12:29","nodeType":"YulFunctionCall","src":"6457:12:29"},"nativeSrc":"6457:12:29","nodeType":"YulExpressionStatement","src":"6457:12:29"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"6425:8:29","nodeType":"YulIdentifier","src":"6425:8:29"},{"kind":"number","nativeSrc":"6435:18:29","nodeType":"YulLiteral","src":"6435:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6422:2:29","nodeType":"YulIdentifier","src":"6422:2:29"},"nativeSrc":"6422:32:29","nodeType":"YulFunctionCall","src":"6422:32:29"},"nativeSrc":"6419:52:29","nodeType":"YulIf","src":"6419:52:29"},{"nativeSrc":"6480:61:29","nodeType":"YulAssignment","src":"6480:61:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6511:9:29","nodeType":"YulIdentifier","src":"6511:9:29"},{"name":"offset_2","nativeSrc":"6522:8:29","nodeType":"YulIdentifier","src":"6522:8:29"}],"functionName":{"name":"add","nativeSrc":"6507:3:29","nodeType":"YulIdentifier","src":"6507:3:29"},"nativeSrc":"6507:24:29","nodeType":"YulFunctionCall","src":"6507:24:29"},{"name":"dataEnd","nativeSrc":"6533:7:29","nodeType":"YulIdentifier","src":"6533:7:29"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"6490:16:29","nodeType":"YulIdentifier","src":"6490:16:29"},"nativeSrc":"6490:51:29","nodeType":"YulFunctionCall","src":"6490:51:29"},"variableNames":[{"name":"value4","nativeSrc":"6480:6:29","nodeType":"YulIdentifier","src":"6480:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"5593:954:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5724:9:29","nodeType":"YulTypedName","src":"5724:9:29","type":""},{"name":"dataEnd","nativeSrc":"5735:7:29","nodeType":"YulTypedName","src":"5735:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5747:6:29","nodeType":"YulTypedName","src":"5747:6:29","type":""},{"name":"value1","nativeSrc":"5755:6:29","nodeType":"YulTypedName","src":"5755:6:29","type":""},{"name":"value2","nativeSrc":"5763:6:29","nodeType":"YulTypedName","src":"5763:6:29","type":""},{"name":"value3","nativeSrc":"5771:6:29","nodeType":"YulTypedName","src":"5771:6:29","type":""},{"name":"value4","nativeSrc":"5779:6:29","nodeType":"YulTypedName","src":"5779:6:29","type":""}],"src":"5593:954:29"},{"body":{"nativeSrc":"6689:1009:29","nodeType":"YulBlock","src":"6689:1009:29","statements":[{"body":{"nativeSrc":"6735:16:29","nodeType":"YulBlock","src":"6735:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6744:1:29","nodeType":"YulLiteral","src":"6744:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6747:1:29","nodeType":"YulLiteral","src":"6747:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6737:6:29","nodeType":"YulIdentifier","src":"6737:6:29"},"nativeSrc":"6737:12:29","nodeType":"YulFunctionCall","src":"6737:12:29"},"nativeSrc":"6737:12:29","nodeType":"YulExpressionStatement","src":"6737:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6710:7:29","nodeType":"YulIdentifier","src":"6710:7:29"},{"name":"headStart","nativeSrc":"6719:9:29","nodeType":"YulIdentifier","src":"6719:9:29"}],"functionName":{"name":"sub","nativeSrc":"6706:3:29","nodeType":"YulIdentifier","src":"6706:3:29"},"nativeSrc":"6706:23:29","nodeType":"YulFunctionCall","src":"6706:23:29"},{"kind":"number","nativeSrc":"6731:2:29","nodeType":"YulLiteral","src":"6731:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6702:3:29","nodeType":"YulIdentifier","src":"6702:3:29"},"nativeSrc":"6702:32:29","nodeType":"YulFunctionCall","src":"6702:32:29"},"nativeSrc":"6699:52:29","nodeType":"YulIf","src":"6699:52:29"},{"nativeSrc":"6760:37:29","nodeType":"YulVariableDeclaration","src":"6760:37:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6787:9:29","nodeType":"YulIdentifier","src":"6787:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"6774:12:29","nodeType":"YulIdentifier","src":"6774:12:29"},"nativeSrc":"6774:23:29","nodeType":"YulFunctionCall","src":"6774:23:29"},"variables":[{"name":"offset","nativeSrc":"6764:6:29","nodeType":"YulTypedName","src":"6764:6:29","type":""}]},{"body":{"nativeSrc":"6840:16:29","nodeType":"YulBlock","src":"6840:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6849:1:29","nodeType":"YulLiteral","src":"6849:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6852:1:29","nodeType":"YulLiteral","src":"6852:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6842:6:29","nodeType":"YulIdentifier","src":"6842:6:29"},"nativeSrc":"6842:12:29","nodeType":"YulFunctionCall","src":"6842:12:29"},"nativeSrc":"6842:12:29","nodeType":"YulExpressionStatement","src":"6842:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6812:6:29","nodeType":"YulIdentifier","src":"6812:6:29"},{"kind":"number","nativeSrc":"6820:18:29","nodeType":"YulLiteral","src":"6820:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6809:2:29","nodeType":"YulIdentifier","src":"6809:2:29"},"nativeSrc":"6809:30:29","nodeType":"YulFunctionCall","src":"6809:30:29"},"nativeSrc":"6806:50:29","nodeType":"YulIf","src":"6806:50:29"},{"nativeSrc":"6865:32:29","nodeType":"YulVariableDeclaration","src":"6865:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6879:9:29","nodeType":"YulIdentifier","src":"6879:9:29"},{"name":"offset","nativeSrc":"6890:6:29","nodeType":"YulIdentifier","src":"6890:6:29"}],"functionName":{"name":"add","nativeSrc":"6875:3:29","nodeType":"YulIdentifier","src":"6875:3:29"},"nativeSrc":"6875:22:29","nodeType":"YulFunctionCall","src":"6875:22:29"},"variables":[{"name":"_1","nativeSrc":"6869:2:29","nodeType":"YulTypedName","src":"6869:2:29","type":""}]},{"body":{"nativeSrc":"6945:16:29","nodeType":"YulBlock","src":"6945:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6954:1:29","nodeType":"YulLiteral","src":"6954:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6957:1:29","nodeType":"YulLiteral","src":"6957:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6947:6:29","nodeType":"YulIdentifier","src":"6947:6:29"},"nativeSrc":"6947:12:29","nodeType":"YulFunctionCall","src":"6947:12:29"},"nativeSrc":"6947:12:29","nodeType":"YulExpressionStatement","src":"6947:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"6924:2:29","nodeType":"YulIdentifier","src":"6924:2:29"},{"kind":"number","nativeSrc":"6928:4:29","nodeType":"YulLiteral","src":"6928:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6920:3:29","nodeType":"YulIdentifier","src":"6920:3:29"},"nativeSrc":"6920:13:29","nodeType":"YulFunctionCall","src":"6920:13:29"},{"name":"dataEnd","nativeSrc":"6935:7:29","nodeType":"YulIdentifier","src":"6935:7:29"}],"functionName":{"name":"slt","nativeSrc":"6916:3:29","nodeType":"YulIdentifier","src":"6916:3:29"},"nativeSrc":"6916:27:29","nodeType":"YulFunctionCall","src":"6916:27:29"}],"functionName":{"name":"iszero","nativeSrc":"6909:6:29","nodeType":"YulIdentifier","src":"6909:6:29"},"nativeSrc":"6909:35:29","nodeType":"YulFunctionCall","src":"6909:35:29"},"nativeSrc":"6906:55:29","nodeType":"YulIf","src":"6906:55:29"},{"nativeSrc":"6970:30:29","nodeType":"YulVariableDeclaration","src":"6970:30:29","value":{"arguments":[{"name":"_1","nativeSrc":"6997:2:29","nodeType":"YulIdentifier","src":"6997:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"6984:12:29","nodeType":"YulIdentifier","src":"6984:12:29"},"nativeSrc":"6984:16:29","nodeType":"YulFunctionCall","src":"6984:16:29"},"variables":[{"name":"length","nativeSrc":"6974:6:29","nodeType":"YulTypedName","src":"6974:6:29","type":""}]},{"nativeSrc":"7009:75:29","nodeType":"YulVariableDeclaration","src":"7009:75:29","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7076:6:29","nodeType":"YulIdentifier","src":"7076:6:29"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nativeSrc":"7036:39:29","nodeType":"YulIdentifier","src":"7036:39:29"},"nativeSrc":"7036:47:29","nodeType":"YulFunctionCall","src":"7036:47:29"}],"functionName":{"name":"allocate_memory","nativeSrc":"7020:15:29","nodeType":"YulIdentifier","src":"7020:15:29"},"nativeSrc":"7020:64:29","nodeType":"YulFunctionCall","src":"7020:64:29"},"variables":[{"name":"dst","nativeSrc":"7013:3:29","nodeType":"YulTypedName","src":"7013:3:29","type":""}]},{"nativeSrc":"7093:16:29","nodeType":"YulVariableDeclaration","src":"7093:16:29","value":{"name":"dst","nativeSrc":"7106:3:29","nodeType":"YulIdentifier","src":"7106:3:29"},"variables":[{"name":"array","nativeSrc":"7097:5:29","nodeType":"YulTypedName","src":"7097:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"7125:3:29","nodeType":"YulIdentifier","src":"7125:3:29"},{"name":"length","nativeSrc":"7130:6:29","nodeType":"YulIdentifier","src":"7130:6:29"}],"functionName":{"name":"mstore","nativeSrc":"7118:6:29","nodeType":"YulIdentifier","src":"7118:6:29"},"nativeSrc":"7118:19:29","nodeType":"YulFunctionCall","src":"7118:19:29"},"nativeSrc":"7118:19:29","nodeType":"YulExpressionStatement","src":"7118:19:29"},{"nativeSrc":"7146:21:29","nodeType":"YulAssignment","src":"7146:21:29","value":{"arguments":[{"name":"dst","nativeSrc":"7157:3:29","nodeType":"YulIdentifier","src":"7157:3:29"},{"kind":"number","nativeSrc":"7162:4:29","nodeType":"YulLiteral","src":"7162:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7153:3:29","nodeType":"YulIdentifier","src":"7153:3:29"},"nativeSrc":"7153:14:29","nodeType":"YulFunctionCall","src":"7153:14:29"},"variableNames":[{"name":"dst","nativeSrc":"7146:3:29","nodeType":"YulIdentifier","src":"7146:3:29"}]},{"nativeSrc":"7176:48:29","nodeType":"YulVariableDeclaration","src":"7176:48:29","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7198:2:29","nodeType":"YulIdentifier","src":"7198:2:29"},{"arguments":[{"kind":"number","nativeSrc":"7206:1:29","nodeType":"YulLiteral","src":"7206:1:29","type":"","value":"5"},{"name":"length","nativeSrc":"7209:6:29","nodeType":"YulIdentifier","src":"7209:6:29"}],"functionName":{"name":"shl","nativeSrc":"7202:3:29","nodeType":"YulIdentifier","src":"7202:3:29"},"nativeSrc":"7202:14:29","nodeType":"YulFunctionCall","src":"7202:14:29"}],"functionName":{"name":"add","nativeSrc":"7194:3:29","nodeType":"YulIdentifier","src":"7194:3:29"},"nativeSrc":"7194:23:29","nodeType":"YulFunctionCall","src":"7194:23:29"},{"kind":"number","nativeSrc":"7219:4:29","nodeType":"YulLiteral","src":"7219:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7190:3:29","nodeType":"YulIdentifier","src":"7190:3:29"},"nativeSrc":"7190:34:29","nodeType":"YulFunctionCall","src":"7190:34:29"},"variables":[{"name":"srcEnd","nativeSrc":"7180:6:29","nodeType":"YulTypedName","src":"7180:6:29","type":""}]},{"body":{"nativeSrc":"7256:16:29","nodeType":"YulBlock","src":"7256:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7265:1:29","nodeType":"YulLiteral","src":"7265:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"7268:1:29","nodeType":"YulLiteral","src":"7268:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7258:6:29","nodeType":"YulIdentifier","src":"7258:6:29"},"nativeSrc":"7258:12:29","nodeType":"YulFunctionCall","src":"7258:12:29"},"nativeSrc":"7258:12:29","nodeType":"YulExpressionStatement","src":"7258:12:29"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"7239:6:29","nodeType":"YulIdentifier","src":"7239:6:29"},{"name":"dataEnd","nativeSrc":"7247:7:29","nodeType":"YulIdentifier","src":"7247:7:29"}],"functionName":{"name":"gt","nativeSrc":"7236:2:29","nodeType":"YulIdentifier","src":"7236:2:29"},"nativeSrc":"7236:19:29","nodeType":"YulFunctionCall","src":"7236:19:29"},"nativeSrc":"7233:39:29","nodeType":"YulIf","src":"7233:39:29"},{"nativeSrc":"7281:24:29","nodeType":"YulVariableDeclaration","src":"7281:24:29","value":{"arguments":[{"name":"_1","nativeSrc":"7296:2:29","nodeType":"YulIdentifier","src":"7296:2:29"},{"kind":"number","nativeSrc":"7300:4:29","nodeType":"YulLiteral","src":"7300:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7292:3:29","nodeType":"YulIdentifier","src":"7292:3:29"},"nativeSrc":"7292:13:29","nodeType":"YulFunctionCall","src":"7292:13:29"},"variables":[{"name":"src","nativeSrc":"7285:3:29","nodeType":"YulTypedName","src":"7285:3:29","type":""}]},{"body":{"nativeSrc":"7372:94:29","nodeType":"YulBlock","src":"7372:94:29","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"7393:3:29","nodeType":"YulIdentifier","src":"7393:3:29"},{"arguments":[{"name":"src","nativeSrc":"7417:3:29","nodeType":"YulIdentifier","src":"7417:3:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7398:18:29","nodeType":"YulIdentifier","src":"7398:18:29"},"nativeSrc":"7398:23:29","nodeType":"YulFunctionCall","src":"7398:23:29"}],"functionName":{"name":"mstore","nativeSrc":"7386:6:29","nodeType":"YulIdentifier","src":"7386:6:29"},"nativeSrc":"7386:36:29","nodeType":"YulFunctionCall","src":"7386:36:29"},"nativeSrc":"7386:36:29","nodeType":"YulExpressionStatement","src":"7386:36:29"},{"nativeSrc":"7435:21:29","nodeType":"YulAssignment","src":"7435:21:29","value":{"arguments":[{"name":"dst","nativeSrc":"7446:3:29","nodeType":"YulIdentifier","src":"7446:3:29"},{"kind":"number","nativeSrc":"7451:4:29","nodeType":"YulLiteral","src":"7451:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7442:3:29","nodeType":"YulIdentifier","src":"7442:3:29"},"nativeSrc":"7442:14:29","nodeType":"YulFunctionCall","src":"7442:14:29"},"variableNames":[{"name":"dst","nativeSrc":"7435:3:29","nodeType":"YulIdentifier","src":"7435:3:29"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"7325:3:29","nodeType":"YulIdentifier","src":"7325:3:29"},{"name":"srcEnd","nativeSrc":"7330:6:29","nodeType":"YulIdentifier","src":"7330:6:29"}],"functionName":{"name":"lt","nativeSrc":"7322:2:29","nodeType":"YulIdentifier","src":"7322:2:29"},"nativeSrc":"7322:15:29","nodeType":"YulFunctionCall","src":"7322:15:29"},"nativeSrc":"7314:152:29","nodeType":"YulForLoop","post":{"nativeSrc":"7338:25:29","nodeType":"YulBlock","src":"7338:25:29","statements":[{"nativeSrc":"7340:21:29","nodeType":"YulAssignment","src":"7340:21:29","value":{"arguments":[{"name":"src","nativeSrc":"7351:3:29","nodeType":"YulIdentifier","src":"7351:3:29"},{"kind":"number","nativeSrc":"7356:4:29","nodeType":"YulLiteral","src":"7356:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7347:3:29","nodeType":"YulIdentifier","src":"7347:3:29"},"nativeSrc":"7347:14:29","nodeType":"YulFunctionCall","src":"7347:14:29"},"variableNames":[{"name":"src","nativeSrc":"7340:3:29","nodeType":"YulIdentifier","src":"7340:3:29"}]}]},"pre":{"nativeSrc":"7318:3:29","nodeType":"YulBlock","src":"7318:3:29","statements":[]},"src":"7314:152:29"},{"nativeSrc":"7475:15:29","nodeType":"YulAssignment","src":"7475:15:29","value":{"name":"array","nativeSrc":"7485:5:29","nodeType":"YulIdentifier","src":"7485:5:29"},"variableNames":[{"name":"value0","nativeSrc":"7475:6:29","nodeType":"YulIdentifier","src":"7475:6:29"}]},{"nativeSrc":"7499:50:29","nodeType":"YulVariableDeclaration","src":"7499:50:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7532:9:29","nodeType":"YulIdentifier","src":"7532:9:29"},{"kind":"number","nativeSrc":"7543:4:29","nodeType":"YulLiteral","src":"7543:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7528:3:29","nodeType":"YulIdentifier","src":"7528:3:29"},"nativeSrc":"7528:20:29","nodeType":"YulFunctionCall","src":"7528:20:29"}],"functionName":{"name":"calldataload","nativeSrc":"7515:12:29","nodeType":"YulIdentifier","src":"7515:12:29"},"nativeSrc":"7515:34:29","nodeType":"YulFunctionCall","src":"7515:34:29"},"variables":[{"name":"offset_1","nativeSrc":"7503:8:29","nodeType":"YulTypedName","src":"7503:8:29","type":""}]},{"body":{"nativeSrc":"7594:16:29","nodeType":"YulBlock","src":"7594:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7603:1:29","nodeType":"YulLiteral","src":"7603:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"7606:1:29","nodeType":"YulLiteral","src":"7606:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7596:6:29","nodeType":"YulIdentifier","src":"7596:6:29"},"nativeSrc":"7596:12:29","nodeType":"YulFunctionCall","src":"7596:12:29"},"nativeSrc":"7596:12:29","nodeType":"YulExpressionStatement","src":"7596:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"7564:8:29","nodeType":"YulIdentifier","src":"7564:8:29"},{"kind":"number","nativeSrc":"7574:18:29","nodeType":"YulLiteral","src":"7574:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7561:2:29","nodeType":"YulIdentifier","src":"7561:2:29"},"nativeSrc":"7561:32:29","nodeType":"YulFunctionCall","src":"7561:32:29"},"nativeSrc":"7558:52:29","nodeType":"YulIf","src":"7558:52:29"},{"nativeSrc":"7619:73:29","nodeType":"YulAssignment","src":"7619:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7662:9:29","nodeType":"YulIdentifier","src":"7662:9:29"},{"name":"offset_1","nativeSrc":"7673:8:29","nodeType":"YulIdentifier","src":"7673:8:29"}],"functionName":{"name":"add","nativeSrc":"7658:3:29","nodeType":"YulIdentifier","src":"7658:3:29"},"nativeSrc":"7658:24:29","nodeType":"YulFunctionCall","src":"7658:24:29"},{"name":"dataEnd","nativeSrc":"7684:7:29","nodeType":"YulIdentifier","src":"7684:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"7629:28:29","nodeType":"YulIdentifier","src":"7629:28:29"},"nativeSrc":"7629:63:29","nodeType":"YulFunctionCall","src":"7629:63:29"},"variableNames":[{"name":"value1","nativeSrc":"7619:6:29","nodeType":"YulIdentifier","src":"7619:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6552:1146:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6647:9:29","nodeType":"YulTypedName","src":"6647:9:29","type":""},{"name":"dataEnd","nativeSrc":"6658:7:29","nodeType":"YulTypedName","src":"6658:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6670:6:29","nodeType":"YulTypedName","src":"6670:6:29","type":""},{"name":"value1","nativeSrc":"6678:6:29","nodeType":"YulTypedName","src":"6678:6:29","type":""}],"src":"6552:1146:29"},{"body":{"nativeSrc":"7764:359:29","nodeType":"YulBlock","src":"7764:359:29","statements":[{"nativeSrc":"7774:26:29","nodeType":"YulVariableDeclaration","src":"7774:26:29","value":{"arguments":[{"name":"value","nativeSrc":"7794:5:29","nodeType":"YulIdentifier","src":"7794:5:29"}],"functionName":{"name":"mload","nativeSrc":"7788:5:29","nodeType":"YulIdentifier","src":"7788:5:29"},"nativeSrc":"7788:12:29","nodeType":"YulFunctionCall","src":"7788:12:29"},"variables":[{"name":"length","nativeSrc":"7778:6:29","nodeType":"YulTypedName","src":"7778:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7816:3:29","nodeType":"YulIdentifier","src":"7816:3:29"},{"name":"length","nativeSrc":"7821:6:29","nodeType":"YulIdentifier","src":"7821:6:29"}],"functionName":{"name":"mstore","nativeSrc":"7809:6:29","nodeType":"YulIdentifier","src":"7809:6:29"},"nativeSrc":"7809:19:29","nodeType":"YulFunctionCall","src":"7809:19:29"},"nativeSrc":"7809:19:29","nodeType":"YulExpressionStatement","src":"7809:19:29"},{"nativeSrc":"7837:21:29","nodeType":"YulAssignment","src":"7837:21:29","value":{"arguments":[{"name":"pos","nativeSrc":"7848:3:29","nodeType":"YulIdentifier","src":"7848:3:29"},{"kind":"number","nativeSrc":"7853:4:29","nodeType":"YulLiteral","src":"7853:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7844:3:29","nodeType":"YulIdentifier","src":"7844:3:29"},"nativeSrc":"7844:14:29","nodeType":"YulFunctionCall","src":"7844:14:29"},"variableNames":[{"name":"pos","nativeSrc":"7837:3:29","nodeType":"YulIdentifier","src":"7837:3:29"}]},{"nativeSrc":"7867:30:29","nodeType":"YulVariableDeclaration","src":"7867:30:29","value":{"arguments":[{"name":"value","nativeSrc":"7885:5:29","nodeType":"YulIdentifier","src":"7885:5:29"},{"kind":"number","nativeSrc":"7892:4:29","nodeType":"YulLiteral","src":"7892:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7881:3:29","nodeType":"YulIdentifier","src":"7881:3:29"},"nativeSrc":"7881:16:29","nodeType":"YulFunctionCall","src":"7881:16:29"},"variables":[{"name":"srcPtr","nativeSrc":"7871:6:29","nodeType":"YulTypedName","src":"7871:6:29","type":""}]},{"nativeSrc":"7906:10:29","nodeType":"YulVariableDeclaration","src":"7906:10:29","value":{"kind":"number","nativeSrc":"7915:1:29","nodeType":"YulLiteral","src":"7915:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7910:1:29","nodeType":"YulTypedName","src":"7910:1:29","type":""}]},{"body":{"nativeSrc":"7974:124:29","nodeType":"YulBlock","src":"7974:124:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7995:3:29","nodeType":"YulIdentifier","src":"7995:3:29"},{"arguments":[{"name":"srcPtr","nativeSrc":"8006:6:29","nodeType":"YulIdentifier","src":"8006:6:29"}],"functionName":{"name":"mload","nativeSrc":"8000:5:29","nodeType":"YulIdentifier","src":"8000:5:29"},"nativeSrc":"8000:13:29","nodeType":"YulFunctionCall","src":"8000:13:29"}],"functionName":{"name":"mstore","nativeSrc":"7988:6:29","nodeType":"YulIdentifier","src":"7988:6:29"},"nativeSrc":"7988:26:29","nodeType":"YulFunctionCall","src":"7988:26:29"},"nativeSrc":"7988:26:29","nodeType":"YulExpressionStatement","src":"7988:26:29"},{"nativeSrc":"8027:21:29","nodeType":"YulAssignment","src":"8027:21:29","value":{"arguments":[{"name":"pos","nativeSrc":"8038:3:29","nodeType":"YulIdentifier","src":"8038:3:29"},{"kind":"number","nativeSrc":"8043:4:29","nodeType":"YulLiteral","src":"8043:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8034:3:29","nodeType":"YulIdentifier","src":"8034:3:29"},"nativeSrc":"8034:14:29","nodeType":"YulFunctionCall","src":"8034:14:29"},"variableNames":[{"name":"pos","nativeSrc":"8027:3:29","nodeType":"YulIdentifier","src":"8027:3:29"}]},{"nativeSrc":"8061:27:29","nodeType":"YulAssignment","src":"8061:27:29","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8075:6:29","nodeType":"YulIdentifier","src":"8075:6:29"},{"kind":"number","nativeSrc":"8083:4:29","nodeType":"YulLiteral","src":"8083:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8071:3:29","nodeType":"YulIdentifier","src":"8071:3:29"},"nativeSrc":"8071:17:29","nodeType":"YulFunctionCall","src":"8071:17:29"},"variableNames":[{"name":"srcPtr","nativeSrc":"8061:6:29","nodeType":"YulIdentifier","src":"8061:6:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7936:1:29","nodeType":"YulIdentifier","src":"7936:1:29"},{"name":"length","nativeSrc":"7939:6:29","nodeType":"YulIdentifier","src":"7939:6:29"}],"functionName":{"name":"lt","nativeSrc":"7933:2:29","nodeType":"YulIdentifier","src":"7933:2:29"},"nativeSrc":"7933:13:29","nodeType":"YulFunctionCall","src":"7933:13:29"},"nativeSrc":"7925:173:29","nodeType":"YulForLoop","post":{"nativeSrc":"7947:18:29","nodeType":"YulBlock","src":"7947:18:29","statements":[{"nativeSrc":"7949:14:29","nodeType":"YulAssignment","src":"7949:14:29","value":{"arguments":[{"name":"i","nativeSrc":"7958:1:29","nodeType":"YulIdentifier","src":"7958:1:29"},{"kind":"number","nativeSrc":"7961:1:29","nodeType":"YulLiteral","src":"7961:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7954:3:29","nodeType":"YulIdentifier","src":"7954:3:29"},"nativeSrc":"7954:9:29","nodeType":"YulFunctionCall","src":"7954:9:29"},"variableNames":[{"name":"i","nativeSrc":"7949:1:29","nodeType":"YulIdentifier","src":"7949:1:29"}]}]},"pre":{"nativeSrc":"7929:3:29","nodeType":"YulBlock","src":"7929:3:29","statements":[]},"src":"7925:173:29"},{"nativeSrc":"8107:10:29","nodeType":"YulAssignment","src":"8107:10:29","value":{"name":"pos","nativeSrc":"8114:3:29","nodeType":"YulIdentifier","src":"8114:3:29"},"variableNames":[{"name":"end","nativeSrc":"8107:3:29","nodeType":"YulIdentifier","src":"8107:3:29"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"7703:420:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7741:5:29","nodeType":"YulTypedName","src":"7741:5:29","type":""},{"name":"pos","nativeSrc":"7748:3:29","nodeType":"YulTypedName","src":"7748:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7756:3:29","nodeType":"YulTypedName","src":"7756:3:29","type":""}],"src":"7703:420:29"},{"body":{"nativeSrc":"8279:110:29","nodeType":"YulBlock","src":"8279:110:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8296:9:29","nodeType":"YulIdentifier","src":"8296:9:29"},{"kind":"number","nativeSrc":"8307:2:29","nodeType":"YulLiteral","src":"8307:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8289:6:29","nodeType":"YulIdentifier","src":"8289:6:29"},"nativeSrc":"8289:21:29","nodeType":"YulFunctionCall","src":"8289:21:29"},"nativeSrc":"8289:21:29","nodeType":"YulExpressionStatement","src":"8289:21:29"},{"nativeSrc":"8319:64:29","nodeType":"YulAssignment","src":"8319:64:29","value":{"arguments":[{"name":"value0","nativeSrc":"8356:6:29","nodeType":"YulIdentifier","src":"8356:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"8368:9:29","nodeType":"YulIdentifier","src":"8368:9:29"},{"kind":"number","nativeSrc":"8379:2:29","nodeType":"YulLiteral","src":"8379:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8364:3:29","nodeType":"YulIdentifier","src":"8364:3:29"},"nativeSrc":"8364:18:29","nodeType":"YulFunctionCall","src":"8364:18:29"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"8327:28:29","nodeType":"YulIdentifier","src":"8327:28:29"},"nativeSrc":"8327:56:29","nodeType":"YulFunctionCall","src":"8327:56:29"},"variableNames":[{"name":"tail","nativeSrc":"8319:4:29","nodeType":"YulIdentifier","src":"8319:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8128:261:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8248:9:29","nodeType":"YulTypedName","src":"8248:9:29","type":""},{"name":"value0","nativeSrc":"8259:6:29","nodeType":"YulTypedName","src":"8259:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8270:4:29","nodeType":"YulTypedName","src":"8270:4:29","type":""}],"src":"8128:261:29"},{"body":{"nativeSrc":"8490:298:29","nodeType":"YulBlock","src":"8490:298:29","statements":[{"body":{"nativeSrc":"8536:16:29","nodeType":"YulBlock","src":"8536:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8545:1:29","nodeType":"YulLiteral","src":"8545:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"8548:1:29","nodeType":"YulLiteral","src":"8548:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8538:6:29","nodeType":"YulIdentifier","src":"8538:6:29"},"nativeSrc":"8538:12:29","nodeType":"YulFunctionCall","src":"8538:12:29"},"nativeSrc":"8538:12:29","nodeType":"YulExpressionStatement","src":"8538:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8511:7:29","nodeType":"YulIdentifier","src":"8511:7:29"},{"name":"headStart","nativeSrc":"8520:9:29","nodeType":"YulIdentifier","src":"8520:9:29"}],"functionName":{"name":"sub","nativeSrc":"8507:3:29","nodeType":"YulIdentifier","src":"8507:3:29"},"nativeSrc":"8507:23:29","nodeType":"YulFunctionCall","src":"8507:23:29"},{"kind":"number","nativeSrc":"8532:2:29","nodeType":"YulLiteral","src":"8532:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8503:3:29","nodeType":"YulIdentifier","src":"8503:3:29"},"nativeSrc":"8503:32:29","nodeType":"YulFunctionCall","src":"8503:32:29"},"nativeSrc":"8500:52:29","nodeType":"YulIf","src":"8500:52:29"},{"nativeSrc":"8561:39:29","nodeType":"YulAssignment","src":"8561:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8590:9:29","nodeType":"YulIdentifier","src":"8590:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8571:18:29","nodeType":"YulIdentifier","src":"8571:18:29"},"nativeSrc":"8571:29:29","nodeType":"YulFunctionCall","src":"8571:29:29"},"variableNames":[{"name":"value0","nativeSrc":"8561:6:29","nodeType":"YulIdentifier","src":"8561:6:29"}]},{"nativeSrc":"8609:46:29","nodeType":"YulVariableDeclaration","src":"8609:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8640:9:29","nodeType":"YulIdentifier","src":"8640:9:29"},{"kind":"number","nativeSrc":"8651:2:29","nodeType":"YulLiteral","src":"8651:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8636:3:29","nodeType":"YulIdentifier","src":"8636:3:29"},"nativeSrc":"8636:18:29","nodeType":"YulFunctionCall","src":"8636:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"8623:12:29","nodeType":"YulIdentifier","src":"8623:12:29"},"nativeSrc":"8623:32:29","nodeType":"YulFunctionCall","src":"8623:32:29"},"variables":[{"name":"offset","nativeSrc":"8613:6:29","nodeType":"YulTypedName","src":"8613:6:29","type":""}]},{"body":{"nativeSrc":"8698:16:29","nodeType":"YulBlock","src":"8698:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8707:1:29","nodeType":"YulLiteral","src":"8707:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"8710:1:29","nodeType":"YulLiteral","src":"8710:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8700:6:29","nodeType":"YulIdentifier","src":"8700:6:29"},"nativeSrc":"8700:12:29","nodeType":"YulFunctionCall","src":"8700:12:29"},"nativeSrc":"8700:12:29","nodeType":"YulExpressionStatement","src":"8700:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8670:6:29","nodeType":"YulIdentifier","src":"8670:6:29"},{"kind":"number","nativeSrc":"8678:18:29","nodeType":"YulLiteral","src":"8678:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8667:2:29","nodeType":"YulIdentifier","src":"8667:2:29"},"nativeSrc":"8667:30:29","nodeType":"YulFunctionCall","src":"8667:30:29"},"nativeSrc":"8664:50:29","nodeType":"YulIf","src":"8664:50:29"},{"nativeSrc":"8723:59:29","nodeType":"YulAssignment","src":"8723:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8754:9:29","nodeType":"YulIdentifier","src":"8754:9:29"},{"name":"offset","nativeSrc":"8765:6:29","nodeType":"YulIdentifier","src":"8765:6:29"}],"functionName":{"name":"add","nativeSrc":"8750:3:29","nodeType":"YulIdentifier","src":"8750:3:29"},"nativeSrc":"8750:22:29","nodeType":"YulFunctionCall","src":"8750:22:29"},{"name":"dataEnd","nativeSrc":"8774:7:29","nodeType":"YulIdentifier","src":"8774:7:29"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"8733:16:29","nodeType":"YulIdentifier","src":"8733:16:29"},"nativeSrc":"8733:49:29","nodeType":"YulFunctionCall","src":"8733:49:29"},"variableNames":[{"name":"value1","nativeSrc":"8723:6:29","nodeType":"YulIdentifier","src":"8723:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"8394:394:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8448:9:29","nodeType":"YulTypedName","src":"8448:9:29","type":""},{"name":"dataEnd","nativeSrc":"8459:7:29","nodeType":"YulTypedName","src":"8459:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8471:6:29","nodeType":"YulTypedName","src":"8471:6:29","type":""},{"name":"value1","nativeSrc":"8479:6:29","nodeType":"YulTypedName","src":"8479:6:29","type":""}],"src":"8394:394:29"},{"body":{"nativeSrc":"8894:76:29","nodeType":"YulBlock","src":"8894:76:29","statements":[{"nativeSrc":"8904:26:29","nodeType":"YulAssignment","src":"8904:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8916:9:29","nodeType":"YulIdentifier","src":"8916:9:29"},{"kind":"number","nativeSrc":"8927:2:29","nodeType":"YulLiteral","src":"8927:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8912:3:29","nodeType":"YulIdentifier","src":"8912:3:29"},"nativeSrc":"8912:18:29","nodeType":"YulFunctionCall","src":"8912:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8904:4:29","nodeType":"YulIdentifier","src":"8904:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8946:9:29","nodeType":"YulIdentifier","src":"8946:9:29"},{"name":"value0","nativeSrc":"8957:6:29","nodeType":"YulIdentifier","src":"8957:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8939:6:29","nodeType":"YulIdentifier","src":"8939:6:29"},"nativeSrc":"8939:25:29","nodeType":"YulFunctionCall","src":"8939:25:29"},"nativeSrc":"8939:25:29","nodeType":"YulExpressionStatement","src":"8939:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8793:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8863:9:29","nodeType":"YulTypedName","src":"8863:9:29","type":""},{"name":"value0","nativeSrc":"8874:6:29","nodeType":"YulTypedName","src":"8874:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8885:4:29","nodeType":"YulTypedName","src":"8885:4:29","type":""}],"src":"8793:177:29"},{"body":{"nativeSrc":"9129:510:29","nodeType":"YulBlock","src":"9129:510:29","statements":[{"body":{"nativeSrc":"9175:16:29","nodeType":"YulBlock","src":"9175:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9184:1:29","nodeType":"YulLiteral","src":"9184:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9187:1:29","nodeType":"YulLiteral","src":"9187:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9177:6:29","nodeType":"YulIdentifier","src":"9177:6:29"},"nativeSrc":"9177:12:29","nodeType":"YulFunctionCall","src":"9177:12:29"},"nativeSrc":"9177:12:29","nodeType":"YulExpressionStatement","src":"9177:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9150:7:29","nodeType":"YulIdentifier","src":"9150:7:29"},{"name":"headStart","nativeSrc":"9159:9:29","nodeType":"YulIdentifier","src":"9159:9:29"}],"functionName":{"name":"sub","nativeSrc":"9146:3:29","nodeType":"YulIdentifier","src":"9146:3:29"},"nativeSrc":"9146:23:29","nodeType":"YulFunctionCall","src":"9146:23:29"},{"kind":"number","nativeSrc":"9171:2:29","nodeType":"YulLiteral","src":"9171:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"9142:3:29","nodeType":"YulIdentifier","src":"9142:3:29"},"nativeSrc":"9142:32:29","nodeType":"YulFunctionCall","src":"9142:32:29"},"nativeSrc":"9139:52:29","nodeType":"YulIf","src":"9139:52:29"},{"nativeSrc":"9200:39:29","nodeType":"YulAssignment","src":"9200:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9229:9:29","nodeType":"YulIdentifier","src":"9229:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9210:18:29","nodeType":"YulIdentifier","src":"9210:18:29"},"nativeSrc":"9210:29:29","nodeType":"YulFunctionCall","src":"9210:29:29"},"variableNames":[{"name":"value0","nativeSrc":"9200:6:29","nodeType":"YulIdentifier","src":"9200:6:29"}]},{"nativeSrc":"9248:46:29","nodeType":"YulVariableDeclaration","src":"9248:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9279:9:29","nodeType":"YulIdentifier","src":"9279:9:29"},{"kind":"number","nativeSrc":"9290:2:29","nodeType":"YulLiteral","src":"9290:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9275:3:29","nodeType":"YulIdentifier","src":"9275:3:29"},"nativeSrc":"9275:18:29","nodeType":"YulFunctionCall","src":"9275:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"9262:12:29","nodeType":"YulIdentifier","src":"9262:12:29"},"nativeSrc":"9262:32:29","nodeType":"YulFunctionCall","src":"9262:32:29"},"variables":[{"name":"offset","nativeSrc":"9252:6:29","nodeType":"YulTypedName","src":"9252:6:29","type":""}]},{"body":{"nativeSrc":"9337:16:29","nodeType":"YulBlock","src":"9337:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9346:1:29","nodeType":"YulLiteral","src":"9346:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9349:1:29","nodeType":"YulLiteral","src":"9349:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9339:6:29","nodeType":"YulIdentifier","src":"9339:6:29"},"nativeSrc":"9339:12:29","nodeType":"YulFunctionCall","src":"9339:12:29"},"nativeSrc":"9339:12:29","nodeType":"YulExpressionStatement","src":"9339:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9309:6:29","nodeType":"YulIdentifier","src":"9309:6:29"},{"kind":"number","nativeSrc":"9317:18:29","nodeType":"YulLiteral","src":"9317:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9306:2:29","nodeType":"YulIdentifier","src":"9306:2:29"},"nativeSrc":"9306:30:29","nodeType":"YulFunctionCall","src":"9306:30:29"},"nativeSrc":"9303:50:29","nodeType":"YulIf","src":"9303:50:29"},{"nativeSrc":"9362:71:29","nodeType":"YulAssignment","src":"9362:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9405:9:29","nodeType":"YulIdentifier","src":"9405:9:29"},{"name":"offset","nativeSrc":"9416:6:29","nodeType":"YulIdentifier","src":"9416:6:29"}],"functionName":{"name":"add","nativeSrc":"9401:3:29","nodeType":"YulIdentifier","src":"9401:3:29"},"nativeSrc":"9401:22:29","nodeType":"YulFunctionCall","src":"9401:22:29"},{"name":"dataEnd","nativeSrc":"9425:7:29","nodeType":"YulIdentifier","src":"9425:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"9372:28:29","nodeType":"YulIdentifier","src":"9372:28:29"},"nativeSrc":"9372:61:29","nodeType":"YulFunctionCall","src":"9372:61:29"},"variableNames":[{"name":"value1","nativeSrc":"9362:6:29","nodeType":"YulIdentifier","src":"9362:6:29"}]},{"nativeSrc":"9442:48:29","nodeType":"YulVariableDeclaration","src":"9442:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9475:9:29","nodeType":"YulIdentifier","src":"9475:9:29"},{"kind":"number","nativeSrc":"9486:2:29","nodeType":"YulLiteral","src":"9486:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9471:3:29","nodeType":"YulIdentifier","src":"9471:3:29"},"nativeSrc":"9471:18:29","nodeType":"YulFunctionCall","src":"9471:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"9458:12:29","nodeType":"YulIdentifier","src":"9458:12:29"},"nativeSrc":"9458:32:29","nodeType":"YulFunctionCall","src":"9458:32:29"},"variables":[{"name":"offset_1","nativeSrc":"9446:8:29","nodeType":"YulTypedName","src":"9446:8:29","type":""}]},{"body":{"nativeSrc":"9535:16:29","nodeType":"YulBlock","src":"9535:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9544:1:29","nodeType":"YulLiteral","src":"9544:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9547:1:29","nodeType":"YulLiteral","src":"9547:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9537:6:29","nodeType":"YulIdentifier","src":"9537:6:29"},"nativeSrc":"9537:12:29","nodeType":"YulFunctionCall","src":"9537:12:29"},"nativeSrc":"9537:12:29","nodeType":"YulExpressionStatement","src":"9537:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"9505:8:29","nodeType":"YulIdentifier","src":"9505:8:29"},{"kind":"number","nativeSrc":"9515:18:29","nodeType":"YulLiteral","src":"9515:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9502:2:29","nodeType":"YulIdentifier","src":"9502:2:29"},"nativeSrc":"9502:32:29","nodeType":"YulFunctionCall","src":"9502:32:29"},"nativeSrc":"9499:52:29","nodeType":"YulIf","src":"9499:52:29"},{"nativeSrc":"9560:73:29","nodeType":"YulAssignment","src":"9560:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9603:9:29","nodeType":"YulIdentifier","src":"9603:9:29"},{"name":"offset_1","nativeSrc":"9614:8:29","nodeType":"YulIdentifier","src":"9614:8:29"}],"functionName":{"name":"add","nativeSrc":"9599:3:29","nodeType":"YulIdentifier","src":"9599:3:29"},"nativeSrc":"9599:24:29","nodeType":"YulFunctionCall","src":"9599:24:29"},{"name":"dataEnd","nativeSrc":"9625:7:29","nodeType":"YulIdentifier","src":"9625:7:29"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"9570:28:29","nodeType":"YulIdentifier","src":"9570:28:29"},"nativeSrc":"9570:63:29","nodeType":"YulFunctionCall","src":"9570:63:29"},"variableNames":[{"name":"value2","nativeSrc":"9560:6:29","nodeType":"YulIdentifier","src":"9560:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8975:664:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9079:9:29","nodeType":"YulTypedName","src":"9079:9:29","type":""},{"name":"dataEnd","nativeSrc":"9090:7:29","nodeType":"YulTypedName","src":"9090:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9102:6:29","nodeType":"YulTypedName","src":"9102:6:29","type":""},{"name":"value1","nativeSrc":"9110:6:29","nodeType":"YulTypedName","src":"9110:6:29","type":""},{"name":"value2","nativeSrc":"9118:6:29","nodeType":"YulTypedName","src":"9118:6:29","type":""}],"src":"8975:664:29"},{"body":{"nativeSrc":"9774:499:29","nodeType":"YulBlock","src":"9774:499:29","statements":[{"body":{"nativeSrc":"9821:16:29","nodeType":"YulBlock","src":"9821:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9830:1:29","nodeType":"YulLiteral","src":"9830:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9833:1:29","nodeType":"YulLiteral","src":"9833:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9823:6:29","nodeType":"YulIdentifier","src":"9823:6:29"},"nativeSrc":"9823:12:29","nodeType":"YulFunctionCall","src":"9823:12:29"},"nativeSrc":"9823:12:29","nodeType":"YulExpressionStatement","src":"9823:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9795:7:29","nodeType":"YulIdentifier","src":"9795:7:29"},{"name":"headStart","nativeSrc":"9804:9:29","nodeType":"YulIdentifier","src":"9804:9:29"}],"functionName":{"name":"sub","nativeSrc":"9791:3:29","nodeType":"YulIdentifier","src":"9791:3:29"},"nativeSrc":"9791:23:29","nodeType":"YulFunctionCall","src":"9791:23:29"},{"kind":"number","nativeSrc":"9816:3:29","nodeType":"YulLiteral","src":"9816:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9787:3:29","nodeType":"YulIdentifier","src":"9787:3:29"},"nativeSrc":"9787:33:29","nodeType":"YulFunctionCall","src":"9787:33:29"},"nativeSrc":"9784:53:29","nodeType":"YulIf","src":"9784:53:29"},{"nativeSrc":"9846:39:29","nodeType":"YulAssignment","src":"9846:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9875:9:29","nodeType":"YulIdentifier","src":"9875:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9856:18:29","nodeType":"YulIdentifier","src":"9856:18:29"},"nativeSrc":"9856:29:29","nodeType":"YulFunctionCall","src":"9856:29:29"},"variableNames":[{"name":"value0","nativeSrc":"9846:6:29","nodeType":"YulIdentifier","src":"9846:6:29"}]},{"nativeSrc":"9894:14:29","nodeType":"YulVariableDeclaration","src":"9894:14:29","value":{"kind":"number","nativeSrc":"9907:1:29","nodeType":"YulLiteral","src":"9907:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9898:5:29","nodeType":"YulTypedName","src":"9898:5:29","type":""}]},{"nativeSrc":"9917:41:29","nodeType":"YulAssignment","src":"9917:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9943:9:29","nodeType":"YulIdentifier","src":"9943:9:29"},{"kind":"number","nativeSrc":"9954:2:29","nodeType":"YulLiteral","src":"9954:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9939:3:29","nodeType":"YulIdentifier","src":"9939:3:29"},"nativeSrc":"9939:18:29","nodeType":"YulFunctionCall","src":"9939:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"9926:12:29","nodeType":"YulIdentifier","src":"9926:12:29"},"nativeSrc":"9926:32:29","nodeType":"YulFunctionCall","src":"9926:32:29"},"variableNames":[{"name":"value","nativeSrc":"9917:5:29","nodeType":"YulIdentifier","src":"9917:5:29"}]},{"nativeSrc":"9967:15:29","nodeType":"YulAssignment","src":"9967:15:29","value":{"name":"value","nativeSrc":"9977:5:29","nodeType":"YulIdentifier","src":"9977:5:29"},"variableNames":[{"name":"value1","nativeSrc":"9967:6:29","nodeType":"YulIdentifier","src":"9967:6:29"}]},{"nativeSrc":"9991:16:29","nodeType":"YulVariableDeclaration","src":"9991:16:29","value":{"kind":"number","nativeSrc":"10006:1:29","nodeType":"YulLiteral","src":"10006:1:29","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"9995:7:29","nodeType":"YulTypedName","src":"9995:7:29","type":""}]},{"nativeSrc":"10016:43:29","nodeType":"YulAssignment","src":"10016:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10044:9:29","nodeType":"YulIdentifier","src":"10044:9:29"},{"kind":"number","nativeSrc":"10055:2:29","nodeType":"YulLiteral","src":"10055:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10040:3:29","nodeType":"YulIdentifier","src":"10040:3:29"},"nativeSrc":"10040:18:29","nodeType":"YulFunctionCall","src":"10040:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"10027:12:29","nodeType":"YulIdentifier","src":"10027:12:29"},"nativeSrc":"10027:32:29","nodeType":"YulFunctionCall","src":"10027:32:29"},"variableNames":[{"name":"value_1","nativeSrc":"10016:7:29","nodeType":"YulIdentifier","src":"10016:7:29"}]},{"nativeSrc":"10068:17:29","nodeType":"YulAssignment","src":"10068:17:29","value":{"name":"value_1","nativeSrc":"10078:7:29","nodeType":"YulIdentifier","src":"10078:7:29"},"variableNames":[{"name":"value2","nativeSrc":"10068:6:29","nodeType":"YulIdentifier","src":"10068:6:29"}]},{"nativeSrc":"10094:46:29","nodeType":"YulVariableDeclaration","src":"10094:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10125:9:29","nodeType":"YulIdentifier","src":"10125:9:29"},{"kind":"number","nativeSrc":"10136:2:29","nodeType":"YulLiteral","src":"10136:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10121:3:29","nodeType":"YulIdentifier","src":"10121:3:29"},"nativeSrc":"10121:18:29","nodeType":"YulFunctionCall","src":"10121:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"10108:12:29","nodeType":"YulIdentifier","src":"10108:12:29"},"nativeSrc":"10108:32:29","nodeType":"YulFunctionCall","src":"10108:32:29"},"variables":[{"name":"offset","nativeSrc":"10098:6:29","nodeType":"YulTypedName","src":"10098:6:29","type":""}]},{"body":{"nativeSrc":"10183:16:29","nodeType":"YulBlock","src":"10183:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10192:1:29","nodeType":"YulLiteral","src":"10192:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10195:1:29","nodeType":"YulLiteral","src":"10195:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10185:6:29","nodeType":"YulIdentifier","src":"10185:6:29"},"nativeSrc":"10185:12:29","nodeType":"YulFunctionCall","src":"10185:12:29"},"nativeSrc":"10185:12:29","nodeType":"YulExpressionStatement","src":"10185:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10155:6:29","nodeType":"YulIdentifier","src":"10155:6:29"},{"kind":"number","nativeSrc":"10163:18:29","nodeType":"YulLiteral","src":"10163:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10152:2:29","nodeType":"YulIdentifier","src":"10152:2:29"},"nativeSrc":"10152:30:29","nodeType":"YulFunctionCall","src":"10152:30:29"},"nativeSrc":"10149:50:29","nodeType":"YulIf","src":"10149:50:29"},{"nativeSrc":"10208:59:29","nodeType":"YulAssignment","src":"10208:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10239:9:29","nodeType":"YulIdentifier","src":"10239:9:29"},{"name":"offset","nativeSrc":"10250:6:29","nodeType":"YulIdentifier","src":"10250:6:29"}],"functionName":{"name":"add","nativeSrc":"10235:3:29","nodeType":"YulIdentifier","src":"10235:3:29"},"nativeSrc":"10235:22:29","nodeType":"YulFunctionCall","src":"10235:22:29"},{"name":"dataEnd","nativeSrc":"10259:7:29","nodeType":"YulIdentifier","src":"10259:7:29"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"10218:16:29","nodeType":"YulIdentifier","src":"10218:16:29"},"nativeSrc":"10218:49:29","nodeType":"YulFunctionCall","src":"10218:49:29"},"variableNames":[{"name":"value3","nativeSrc":"10208:6:29","nodeType":"YulIdentifier","src":"10208:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"9644:629:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9716:9:29","nodeType":"YulTypedName","src":"9716:9:29","type":""},{"name":"dataEnd","nativeSrc":"9727:7:29","nodeType":"YulTypedName","src":"9727:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9739:6:29","nodeType":"YulTypedName","src":"9739:6:29","type":""},{"name":"value1","nativeSrc":"9747:6:29","nodeType":"YulTypedName","src":"9747:6:29","type":""},{"name":"value2","nativeSrc":"9755:6:29","nodeType":"YulTypedName","src":"9755:6:29","type":""},{"name":"value3","nativeSrc":"9763:6:29","nodeType":"YulTypedName","src":"9763:6:29","type":""}],"src":"9644:629:29"},{"body":{"nativeSrc":"10379:102:29","nodeType":"YulBlock","src":"10379:102:29","statements":[{"nativeSrc":"10389:26:29","nodeType":"YulAssignment","src":"10389:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10401:9:29","nodeType":"YulIdentifier","src":"10401:9:29"},{"kind":"number","nativeSrc":"10412:2:29","nodeType":"YulLiteral","src":"10412:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10397:3:29","nodeType":"YulIdentifier","src":"10397:3:29"},"nativeSrc":"10397:18:29","nodeType":"YulFunctionCall","src":"10397:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10389:4:29","nodeType":"YulIdentifier","src":"10389:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10431:9:29","nodeType":"YulIdentifier","src":"10431:9:29"},{"arguments":[{"name":"value0","nativeSrc":"10446:6:29","nodeType":"YulIdentifier","src":"10446:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10462:3:29","nodeType":"YulLiteral","src":"10462:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"10467:1:29","nodeType":"YulLiteral","src":"10467:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10458:3:29","nodeType":"YulIdentifier","src":"10458:3:29"},"nativeSrc":"10458:11:29","nodeType":"YulFunctionCall","src":"10458:11:29"},{"kind":"number","nativeSrc":"10471:1:29","nodeType":"YulLiteral","src":"10471:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10454:3:29","nodeType":"YulIdentifier","src":"10454:3:29"},"nativeSrc":"10454:19:29","nodeType":"YulFunctionCall","src":"10454:19:29"}],"functionName":{"name":"and","nativeSrc":"10442:3:29","nodeType":"YulIdentifier","src":"10442:3:29"},"nativeSrc":"10442:32:29","nodeType":"YulFunctionCall","src":"10442:32:29"}],"functionName":{"name":"mstore","nativeSrc":"10424:6:29","nodeType":"YulIdentifier","src":"10424:6:29"},"nativeSrc":"10424:51:29","nodeType":"YulFunctionCall","src":"10424:51:29"},"nativeSrc":"10424:51:29","nodeType":"YulExpressionStatement","src":"10424:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10278:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10348:9:29","nodeType":"YulTypedName","src":"10348:9:29","type":""},{"name":"value0","nativeSrc":"10359:6:29","nodeType":"YulTypedName","src":"10359:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10370:4:29","nodeType":"YulTypedName","src":"10370:4:29","type":""}],"src":"10278:203:29"},{"body":{"nativeSrc":"10570:263:29","nodeType":"YulBlock","src":"10570:263:29","statements":[{"body":{"nativeSrc":"10616:16:29","nodeType":"YulBlock","src":"10616:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10625:1:29","nodeType":"YulLiteral","src":"10625:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10628:1:29","nodeType":"YulLiteral","src":"10628:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10618:6:29","nodeType":"YulIdentifier","src":"10618:6:29"},"nativeSrc":"10618:12:29","nodeType":"YulFunctionCall","src":"10618:12:29"},"nativeSrc":"10618:12:29","nodeType":"YulExpressionStatement","src":"10618:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10591:7:29","nodeType":"YulIdentifier","src":"10591:7:29"},{"name":"headStart","nativeSrc":"10600:9:29","nodeType":"YulIdentifier","src":"10600:9:29"}],"functionName":{"name":"sub","nativeSrc":"10587:3:29","nodeType":"YulIdentifier","src":"10587:3:29"},"nativeSrc":"10587:23:29","nodeType":"YulFunctionCall","src":"10587:23:29"},{"kind":"number","nativeSrc":"10612:2:29","nodeType":"YulLiteral","src":"10612:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10583:3:29","nodeType":"YulIdentifier","src":"10583:3:29"},"nativeSrc":"10583:32:29","nodeType":"YulFunctionCall","src":"10583:32:29"},"nativeSrc":"10580:52:29","nodeType":"YulIf","src":"10580:52:29"},{"nativeSrc":"10641:39:29","nodeType":"YulAssignment","src":"10641:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10670:9:29","nodeType":"YulIdentifier","src":"10670:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10651:18:29","nodeType":"YulIdentifier","src":"10651:18:29"},"nativeSrc":"10651:29:29","nodeType":"YulFunctionCall","src":"10651:29:29"},"variableNames":[{"name":"value0","nativeSrc":"10641:6:29","nodeType":"YulIdentifier","src":"10641:6:29"}]},{"nativeSrc":"10689:45:29","nodeType":"YulVariableDeclaration","src":"10689:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10719:9:29","nodeType":"YulIdentifier","src":"10719:9:29"},{"kind":"number","nativeSrc":"10730:2:29","nodeType":"YulLiteral","src":"10730:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10715:3:29","nodeType":"YulIdentifier","src":"10715:3:29"},"nativeSrc":"10715:18:29","nodeType":"YulFunctionCall","src":"10715:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"10702:12:29","nodeType":"YulIdentifier","src":"10702:12:29"},"nativeSrc":"10702:32:29","nodeType":"YulFunctionCall","src":"10702:32:29"},"variables":[{"name":"value","nativeSrc":"10693:5:29","nodeType":"YulTypedName","src":"10693:5:29","type":""}]},{"body":{"nativeSrc":"10787:16:29","nodeType":"YulBlock","src":"10787:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10796:1:29","nodeType":"YulLiteral","src":"10796:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10799:1:29","nodeType":"YulLiteral","src":"10799:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10789:6:29","nodeType":"YulIdentifier","src":"10789:6:29"},"nativeSrc":"10789:12:29","nodeType":"YulFunctionCall","src":"10789:12:29"},"nativeSrc":"10789:12:29","nodeType":"YulExpressionStatement","src":"10789:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10756:5:29","nodeType":"YulIdentifier","src":"10756:5:29"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10777:5:29","nodeType":"YulIdentifier","src":"10777:5:29"}],"functionName":{"name":"iszero","nativeSrc":"10770:6:29","nodeType":"YulIdentifier","src":"10770:6:29"},"nativeSrc":"10770:13:29","nodeType":"YulFunctionCall","src":"10770:13:29"}],"functionName":{"name":"iszero","nativeSrc":"10763:6:29","nodeType":"YulIdentifier","src":"10763:6:29"},"nativeSrc":"10763:21:29","nodeType":"YulFunctionCall","src":"10763:21:29"}],"functionName":{"name":"eq","nativeSrc":"10753:2:29","nodeType":"YulIdentifier","src":"10753:2:29"},"nativeSrc":"10753:32:29","nodeType":"YulFunctionCall","src":"10753:32:29"}],"functionName":{"name":"iszero","nativeSrc":"10746:6:29","nodeType":"YulIdentifier","src":"10746:6:29"},"nativeSrc":"10746:40:29","nodeType":"YulFunctionCall","src":"10746:40:29"},"nativeSrc":"10743:60:29","nodeType":"YulIf","src":"10743:60:29"},{"nativeSrc":"10812:15:29","nodeType":"YulAssignment","src":"10812:15:29","value":{"name":"value","nativeSrc":"10822:5:29","nodeType":"YulIdentifier","src":"10822:5:29"},"variableNames":[{"name":"value1","nativeSrc":"10812:6:29","nodeType":"YulIdentifier","src":"10812:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"10486:347:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10528:9:29","nodeType":"YulTypedName","src":"10528:9:29","type":""},{"name":"dataEnd","nativeSrc":"10539:7:29","nodeType":"YulTypedName","src":"10539:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10551:6:29","nodeType":"YulTypedName","src":"10551:6:29","type":""},{"name":"value1","nativeSrc":"10559:6:29","nodeType":"YulTypedName","src":"10559:6:29","type":""}],"src":"10486:347:29"},{"body":{"nativeSrc":"10908:116:29","nodeType":"YulBlock","src":"10908:116:29","statements":[{"body":{"nativeSrc":"10954:16:29","nodeType":"YulBlock","src":"10954:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10963:1:29","nodeType":"YulLiteral","src":"10963:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10966:1:29","nodeType":"YulLiteral","src":"10966:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10956:6:29","nodeType":"YulIdentifier","src":"10956:6:29"},"nativeSrc":"10956:12:29","nodeType":"YulFunctionCall","src":"10956:12:29"},"nativeSrc":"10956:12:29","nodeType":"YulExpressionStatement","src":"10956:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10929:7:29","nodeType":"YulIdentifier","src":"10929:7:29"},{"name":"headStart","nativeSrc":"10938:9:29","nodeType":"YulIdentifier","src":"10938:9:29"}],"functionName":{"name":"sub","nativeSrc":"10925:3:29","nodeType":"YulIdentifier","src":"10925:3:29"},"nativeSrc":"10925:23:29","nodeType":"YulFunctionCall","src":"10925:23:29"},{"kind":"number","nativeSrc":"10950:2:29","nodeType":"YulLiteral","src":"10950:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10921:3:29","nodeType":"YulIdentifier","src":"10921:3:29"},"nativeSrc":"10921:32:29","nodeType":"YulFunctionCall","src":"10921:32:29"},"nativeSrc":"10918:52:29","nodeType":"YulIf","src":"10918:52:29"},{"nativeSrc":"10979:39:29","nodeType":"YulAssignment","src":"10979:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11008:9:29","nodeType":"YulIdentifier","src":"11008:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"10989:18:29","nodeType":"YulIdentifier","src":"10989:18:29"},"nativeSrc":"10989:29:29","nodeType":"YulFunctionCall","src":"10989:29:29"},"variableNames":[{"name":"value0","nativeSrc":"10979:6:29","nodeType":"YulIdentifier","src":"10979:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"10838:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10874:9:29","nodeType":"YulTypedName","src":"10874:9:29","type":""},{"name":"dataEnd","nativeSrc":"10885:7:29","nodeType":"YulTypedName","src":"10885:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10897:6:29","nodeType":"YulTypedName","src":"10897:6:29","type":""}],"src":"10838:186:29"},{"body":{"nativeSrc":"11116:173:29","nodeType":"YulBlock","src":"11116:173:29","statements":[{"body":{"nativeSrc":"11162:16:29","nodeType":"YulBlock","src":"11162:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11171:1:29","nodeType":"YulLiteral","src":"11171:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11174:1:29","nodeType":"YulLiteral","src":"11174:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11164:6:29","nodeType":"YulIdentifier","src":"11164:6:29"},"nativeSrc":"11164:12:29","nodeType":"YulFunctionCall","src":"11164:12:29"},"nativeSrc":"11164:12:29","nodeType":"YulExpressionStatement","src":"11164:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11137:7:29","nodeType":"YulIdentifier","src":"11137:7:29"},{"name":"headStart","nativeSrc":"11146:9:29","nodeType":"YulIdentifier","src":"11146:9:29"}],"functionName":{"name":"sub","nativeSrc":"11133:3:29","nodeType":"YulIdentifier","src":"11133:3:29"},"nativeSrc":"11133:23:29","nodeType":"YulFunctionCall","src":"11133:23:29"},{"kind":"number","nativeSrc":"11158:2:29","nodeType":"YulLiteral","src":"11158:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11129:3:29","nodeType":"YulIdentifier","src":"11129:3:29"},"nativeSrc":"11129:32:29","nodeType":"YulFunctionCall","src":"11129:32:29"},"nativeSrc":"11126:52:29","nodeType":"YulIf","src":"11126:52:29"},{"nativeSrc":"11187:39:29","nodeType":"YulAssignment","src":"11187:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11216:9:29","nodeType":"YulIdentifier","src":"11216:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11197:18:29","nodeType":"YulIdentifier","src":"11197:18:29"},"nativeSrc":"11197:29:29","nodeType":"YulFunctionCall","src":"11197:29:29"},"variableNames":[{"name":"value0","nativeSrc":"11187:6:29","nodeType":"YulIdentifier","src":"11187:6:29"}]},{"nativeSrc":"11235:48:29","nodeType":"YulAssignment","src":"11235:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11268:9:29","nodeType":"YulIdentifier","src":"11268:9:29"},{"kind":"number","nativeSrc":"11279:2:29","nodeType":"YulLiteral","src":"11279:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11264:3:29","nodeType":"YulIdentifier","src":"11264:3:29"},"nativeSrc":"11264:18:29","nodeType":"YulFunctionCall","src":"11264:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11245:18:29","nodeType":"YulIdentifier","src":"11245:18:29"},"nativeSrc":"11245:38:29","nodeType":"YulFunctionCall","src":"11245:38:29"},"variableNames":[{"name":"value1","nativeSrc":"11235:6:29","nodeType":"YulIdentifier","src":"11235:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11029:260:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11074:9:29","nodeType":"YulTypedName","src":"11074:9:29","type":""},{"name":"dataEnd","nativeSrc":"11085:7:29","nodeType":"YulTypedName","src":"11085:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11097:6:29","nodeType":"YulTypedName","src":"11097:6:29","type":""},{"name":"value1","nativeSrc":"11105:6:29","nodeType":"YulTypedName","src":"11105:6:29","type":""}],"src":"11029:260:29"},{"body":{"nativeSrc":"11441:557:29","nodeType":"YulBlock","src":"11441:557:29","statements":[{"body":{"nativeSrc":"11488:16:29","nodeType":"YulBlock","src":"11488:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11497:1:29","nodeType":"YulLiteral","src":"11497:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11500:1:29","nodeType":"YulLiteral","src":"11500:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11490:6:29","nodeType":"YulIdentifier","src":"11490:6:29"},"nativeSrc":"11490:12:29","nodeType":"YulFunctionCall","src":"11490:12:29"},"nativeSrc":"11490:12:29","nodeType":"YulExpressionStatement","src":"11490:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11462:7:29","nodeType":"YulIdentifier","src":"11462:7:29"},{"name":"headStart","nativeSrc":"11471:9:29","nodeType":"YulIdentifier","src":"11471:9:29"}],"functionName":{"name":"sub","nativeSrc":"11458:3:29","nodeType":"YulIdentifier","src":"11458:3:29"},"nativeSrc":"11458:23:29","nodeType":"YulFunctionCall","src":"11458:23:29"},{"kind":"number","nativeSrc":"11483:3:29","nodeType":"YulLiteral","src":"11483:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"11454:3:29","nodeType":"YulIdentifier","src":"11454:3:29"},"nativeSrc":"11454:33:29","nodeType":"YulFunctionCall","src":"11454:33:29"},"nativeSrc":"11451:53:29","nodeType":"YulIf","src":"11451:53:29"},{"nativeSrc":"11513:39:29","nodeType":"YulAssignment","src":"11513:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11542:9:29","nodeType":"YulIdentifier","src":"11542:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11523:18:29","nodeType":"YulIdentifier","src":"11523:18:29"},"nativeSrc":"11523:29:29","nodeType":"YulFunctionCall","src":"11523:29:29"},"variableNames":[{"name":"value0","nativeSrc":"11513:6:29","nodeType":"YulIdentifier","src":"11513:6:29"}]},{"nativeSrc":"11561:48:29","nodeType":"YulAssignment","src":"11561:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11594:9:29","nodeType":"YulIdentifier","src":"11594:9:29"},{"kind":"number","nativeSrc":"11605:2:29","nodeType":"YulLiteral","src":"11605:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11590:3:29","nodeType":"YulIdentifier","src":"11590:3:29"},"nativeSrc":"11590:18:29","nodeType":"YulFunctionCall","src":"11590:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"11571:18:29","nodeType":"YulIdentifier","src":"11571:18:29"},"nativeSrc":"11571:38:29","nodeType":"YulFunctionCall","src":"11571:38:29"},"variableNames":[{"name":"value1","nativeSrc":"11561:6:29","nodeType":"YulIdentifier","src":"11561:6:29"}]},{"nativeSrc":"11618:14:29","nodeType":"YulVariableDeclaration","src":"11618:14:29","value":{"kind":"number","nativeSrc":"11631:1:29","nodeType":"YulLiteral","src":"11631:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"11622:5:29","nodeType":"YulTypedName","src":"11622:5:29","type":""}]},{"nativeSrc":"11641:41:29","nodeType":"YulAssignment","src":"11641:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11667:9:29","nodeType":"YulIdentifier","src":"11667:9:29"},{"kind":"number","nativeSrc":"11678:2:29","nodeType":"YulLiteral","src":"11678:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11663:3:29","nodeType":"YulIdentifier","src":"11663:3:29"},"nativeSrc":"11663:18:29","nodeType":"YulFunctionCall","src":"11663:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"11650:12:29","nodeType":"YulIdentifier","src":"11650:12:29"},"nativeSrc":"11650:32:29","nodeType":"YulFunctionCall","src":"11650:32:29"},"variableNames":[{"name":"value","nativeSrc":"11641:5:29","nodeType":"YulIdentifier","src":"11641:5:29"}]},{"nativeSrc":"11691:15:29","nodeType":"YulAssignment","src":"11691:15:29","value":{"name":"value","nativeSrc":"11701:5:29","nodeType":"YulIdentifier","src":"11701:5:29"},"variableNames":[{"name":"value2","nativeSrc":"11691:6:29","nodeType":"YulIdentifier","src":"11691:6:29"}]},{"nativeSrc":"11715:16:29","nodeType":"YulVariableDeclaration","src":"11715:16:29","value":{"kind":"number","nativeSrc":"11730:1:29","nodeType":"YulLiteral","src":"11730:1:29","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"11719:7:29","nodeType":"YulTypedName","src":"11719:7:29","type":""}]},{"nativeSrc":"11740:43:29","nodeType":"YulAssignment","src":"11740:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11768:9:29","nodeType":"YulIdentifier","src":"11768:9:29"},{"kind":"number","nativeSrc":"11779:2:29","nodeType":"YulLiteral","src":"11779:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11764:3:29","nodeType":"YulIdentifier","src":"11764:3:29"},"nativeSrc":"11764:18:29","nodeType":"YulFunctionCall","src":"11764:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"11751:12:29","nodeType":"YulIdentifier","src":"11751:12:29"},"nativeSrc":"11751:32:29","nodeType":"YulFunctionCall","src":"11751:32:29"},"variableNames":[{"name":"value_1","nativeSrc":"11740:7:29","nodeType":"YulIdentifier","src":"11740:7:29"}]},{"nativeSrc":"11792:17:29","nodeType":"YulAssignment","src":"11792:17:29","value":{"name":"value_1","nativeSrc":"11802:7:29","nodeType":"YulIdentifier","src":"11802:7:29"},"variableNames":[{"name":"value3","nativeSrc":"11792:6:29","nodeType":"YulIdentifier","src":"11792:6:29"}]},{"nativeSrc":"11818:47:29","nodeType":"YulVariableDeclaration","src":"11818:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11849:9:29","nodeType":"YulIdentifier","src":"11849:9:29"},{"kind":"number","nativeSrc":"11860:3:29","nodeType":"YulLiteral","src":"11860:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11845:3:29","nodeType":"YulIdentifier","src":"11845:3:29"},"nativeSrc":"11845:19:29","nodeType":"YulFunctionCall","src":"11845:19:29"}],"functionName":{"name":"calldataload","nativeSrc":"11832:12:29","nodeType":"YulIdentifier","src":"11832:12:29"},"nativeSrc":"11832:33:29","nodeType":"YulFunctionCall","src":"11832:33:29"},"variables":[{"name":"offset","nativeSrc":"11822:6:29","nodeType":"YulTypedName","src":"11822:6:29","type":""}]},{"body":{"nativeSrc":"11908:16:29","nodeType":"YulBlock","src":"11908:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11917:1:29","nodeType":"YulLiteral","src":"11917:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11920:1:29","nodeType":"YulLiteral","src":"11920:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11910:6:29","nodeType":"YulIdentifier","src":"11910:6:29"},"nativeSrc":"11910:12:29","nodeType":"YulFunctionCall","src":"11910:12:29"},"nativeSrc":"11910:12:29","nodeType":"YulExpressionStatement","src":"11910:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11880:6:29","nodeType":"YulIdentifier","src":"11880:6:29"},{"kind":"number","nativeSrc":"11888:18:29","nodeType":"YulLiteral","src":"11888:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11877:2:29","nodeType":"YulIdentifier","src":"11877:2:29"},"nativeSrc":"11877:30:29","nodeType":"YulFunctionCall","src":"11877:30:29"},"nativeSrc":"11874:50:29","nodeType":"YulIf","src":"11874:50:29"},{"nativeSrc":"11933:59:29","nodeType":"YulAssignment","src":"11933:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11964:9:29","nodeType":"YulIdentifier","src":"11964:9:29"},{"name":"offset","nativeSrc":"11975:6:29","nodeType":"YulIdentifier","src":"11975:6:29"}],"functionName":{"name":"add","nativeSrc":"11960:3:29","nodeType":"YulIdentifier","src":"11960:3:29"},"nativeSrc":"11960:22:29","nodeType":"YulFunctionCall","src":"11960:22:29"},{"name":"dataEnd","nativeSrc":"11984:7:29","nodeType":"YulIdentifier","src":"11984:7:29"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"11943:16:29","nodeType":"YulIdentifier","src":"11943:16:29"},"nativeSrc":"11943:49:29","nodeType":"YulFunctionCall","src":"11943:49:29"},"variableNames":[{"name":"value4","nativeSrc":"11933:6:29","nodeType":"YulIdentifier","src":"11933:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"11294:704:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11375:9:29","nodeType":"YulTypedName","src":"11375:9:29","type":""},{"name":"dataEnd","nativeSrc":"11386:7:29","nodeType":"YulTypedName","src":"11386:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11398:6:29","nodeType":"YulTypedName","src":"11398:6:29","type":""},{"name":"value1","nativeSrc":"11406:6:29","nodeType":"YulTypedName","src":"11406:6:29","type":""},{"name":"value2","nativeSrc":"11414:6:29","nodeType":"YulTypedName","src":"11414:6:29","type":""},{"name":"value3","nativeSrc":"11422:6:29","nodeType":"YulTypedName","src":"11422:6:29","type":""},{"name":"value4","nativeSrc":"11430:6:29","nodeType":"YulTypedName","src":"11430:6:29","type":""}],"src":"11294:704:29"},{"body":{"nativeSrc":"12107:316:29","nodeType":"YulBlock","src":"12107:316:29","statements":[{"body":{"nativeSrc":"12153:16:29","nodeType":"YulBlock","src":"12153:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12162:1:29","nodeType":"YulLiteral","src":"12162:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"12165:1:29","nodeType":"YulLiteral","src":"12165:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12155:6:29","nodeType":"YulIdentifier","src":"12155:6:29"},"nativeSrc":"12155:12:29","nodeType":"YulFunctionCall","src":"12155:12:29"},"nativeSrc":"12155:12:29","nodeType":"YulExpressionStatement","src":"12155:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12128:7:29","nodeType":"YulIdentifier","src":"12128:7:29"},{"name":"headStart","nativeSrc":"12137:9:29","nodeType":"YulIdentifier","src":"12137:9:29"}],"functionName":{"name":"sub","nativeSrc":"12124:3:29","nodeType":"YulIdentifier","src":"12124:3:29"},"nativeSrc":"12124:23:29","nodeType":"YulFunctionCall","src":"12124:23:29"},{"kind":"number","nativeSrc":"12149:2:29","nodeType":"YulLiteral","src":"12149:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"12120:3:29","nodeType":"YulIdentifier","src":"12120:3:29"},"nativeSrc":"12120:32:29","nodeType":"YulFunctionCall","src":"12120:32:29"},"nativeSrc":"12117:52:29","nodeType":"YulIf","src":"12117:52:29"},{"nativeSrc":"12178:39:29","nodeType":"YulAssignment","src":"12178:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12207:9:29","nodeType":"YulIdentifier","src":"12207:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"12188:18:29","nodeType":"YulIdentifier","src":"12188:18:29"},"nativeSrc":"12188:29:29","nodeType":"YulFunctionCall","src":"12188:29:29"},"variableNames":[{"name":"value0","nativeSrc":"12178:6:29","nodeType":"YulIdentifier","src":"12178:6:29"}]},{"nativeSrc":"12226:14:29","nodeType":"YulVariableDeclaration","src":"12226:14:29","value":{"kind":"number","nativeSrc":"12239:1:29","nodeType":"YulLiteral","src":"12239:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"12230:5:29","nodeType":"YulTypedName","src":"12230:5:29","type":""}]},{"nativeSrc":"12249:41:29","nodeType":"YulAssignment","src":"12249:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12275:9:29","nodeType":"YulIdentifier","src":"12275:9:29"},{"kind":"number","nativeSrc":"12286:2:29","nodeType":"YulLiteral","src":"12286:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12271:3:29","nodeType":"YulIdentifier","src":"12271:3:29"},"nativeSrc":"12271:18:29","nodeType":"YulFunctionCall","src":"12271:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"12258:12:29","nodeType":"YulIdentifier","src":"12258:12:29"},"nativeSrc":"12258:32:29","nodeType":"YulFunctionCall","src":"12258:32:29"},"variableNames":[{"name":"value","nativeSrc":"12249:5:29","nodeType":"YulIdentifier","src":"12249:5:29"}]},{"nativeSrc":"12299:15:29","nodeType":"YulAssignment","src":"12299:15:29","value":{"name":"value","nativeSrc":"12309:5:29","nodeType":"YulIdentifier","src":"12309:5:29"},"variableNames":[{"name":"value1","nativeSrc":"12299:6:29","nodeType":"YulIdentifier","src":"12299:6:29"}]},{"nativeSrc":"12323:16:29","nodeType":"YulVariableDeclaration","src":"12323:16:29","value":{"kind":"number","nativeSrc":"12338:1:29","nodeType":"YulLiteral","src":"12338:1:29","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"12327:7:29","nodeType":"YulTypedName","src":"12327:7:29","type":""}]},{"nativeSrc":"12348:43:29","nodeType":"YulAssignment","src":"12348:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12376:9:29","nodeType":"YulIdentifier","src":"12376:9:29"},{"kind":"number","nativeSrc":"12387:2:29","nodeType":"YulLiteral","src":"12387:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12372:3:29","nodeType":"YulIdentifier","src":"12372:3:29"},"nativeSrc":"12372:18:29","nodeType":"YulFunctionCall","src":"12372:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"12359:12:29","nodeType":"YulIdentifier","src":"12359:12:29"},"nativeSrc":"12359:32:29","nodeType":"YulFunctionCall","src":"12359:32:29"},"variableNames":[{"name":"value_1","nativeSrc":"12348:7:29","nodeType":"YulIdentifier","src":"12348:7:29"}]},{"nativeSrc":"12400:17:29","nodeType":"YulAssignment","src":"12400:17:29","value":{"name":"value_1","nativeSrc":"12410:7:29","nodeType":"YulIdentifier","src":"12410:7:29"},"variableNames":[{"name":"value2","nativeSrc":"12400:6:29","nodeType":"YulIdentifier","src":"12400:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nativeSrc":"12003:420:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12057:9:29","nodeType":"YulTypedName","src":"12057:9:29","type":""},{"name":"dataEnd","nativeSrc":"12068:7:29","nodeType":"YulTypedName","src":"12068:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12080:6:29","nodeType":"YulTypedName","src":"12080:6:29","type":""},{"name":"value1","nativeSrc":"12088:6:29","nodeType":"YulTypedName","src":"12088:6:29","type":""},{"name":"value2","nativeSrc":"12096:6:29","nodeType":"YulTypedName","src":"12096:6:29","type":""}],"src":"12003:420:29"},{"body":{"nativeSrc":"12483:325:29","nodeType":"YulBlock","src":"12483:325:29","statements":[{"nativeSrc":"12493:22:29","nodeType":"YulAssignment","src":"12493:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"12507:1:29","nodeType":"YulLiteral","src":"12507:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"12510:4:29","nodeType":"YulIdentifier","src":"12510:4:29"}],"functionName":{"name":"shr","nativeSrc":"12503:3:29","nodeType":"YulIdentifier","src":"12503:3:29"},"nativeSrc":"12503:12:29","nodeType":"YulFunctionCall","src":"12503:12:29"},"variableNames":[{"name":"length","nativeSrc":"12493:6:29","nodeType":"YulIdentifier","src":"12493:6:29"}]},{"nativeSrc":"12524:38:29","nodeType":"YulVariableDeclaration","src":"12524:38:29","value":{"arguments":[{"name":"data","nativeSrc":"12554:4:29","nodeType":"YulIdentifier","src":"12554:4:29"},{"kind":"number","nativeSrc":"12560:1:29","nodeType":"YulLiteral","src":"12560:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12550:3:29","nodeType":"YulIdentifier","src":"12550:3:29"},"nativeSrc":"12550:12:29","nodeType":"YulFunctionCall","src":"12550:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12528:18:29","nodeType":"YulTypedName","src":"12528:18:29","type":""}]},{"body":{"nativeSrc":"12601:31:29","nodeType":"YulBlock","src":"12601:31:29","statements":[{"nativeSrc":"12603:27:29","nodeType":"YulAssignment","src":"12603:27:29","value":{"arguments":[{"name":"length","nativeSrc":"12617:6:29","nodeType":"YulIdentifier","src":"12617:6:29"},{"kind":"number","nativeSrc":"12625:4:29","nodeType":"YulLiteral","src":"12625:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12613:3:29","nodeType":"YulIdentifier","src":"12613:3:29"},"nativeSrc":"12613:17:29","nodeType":"YulFunctionCall","src":"12613:17:29"},"variableNames":[{"name":"length","nativeSrc":"12603:6:29","nodeType":"YulIdentifier","src":"12603:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12581:18:29","nodeType":"YulIdentifier","src":"12581:18:29"}],"functionName":{"name":"iszero","nativeSrc":"12574:6:29","nodeType":"YulIdentifier","src":"12574:6:29"},"nativeSrc":"12574:26:29","nodeType":"YulFunctionCall","src":"12574:26:29"},"nativeSrc":"12571:61:29","nodeType":"YulIf","src":"12571:61:29"},{"body":{"nativeSrc":"12691:111:29","nodeType":"YulBlock","src":"12691:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12712:1:29","nodeType":"YulLiteral","src":"12712:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12719:3:29","nodeType":"YulLiteral","src":"12719:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"12724:10:29","nodeType":"YulLiteral","src":"12724:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12715:3:29","nodeType":"YulIdentifier","src":"12715:3:29"},"nativeSrc":"12715:20:29","nodeType":"YulFunctionCall","src":"12715:20:29"}],"functionName":{"name":"mstore","nativeSrc":"12705:6:29","nodeType":"YulIdentifier","src":"12705:6:29"},"nativeSrc":"12705:31:29","nodeType":"YulFunctionCall","src":"12705:31:29"},"nativeSrc":"12705:31:29","nodeType":"YulExpressionStatement","src":"12705:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12756:1:29","nodeType":"YulLiteral","src":"12756:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"12759:4:29","nodeType":"YulLiteral","src":"12759:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12749:6:29","nodeType":"YulIdentifier","src":"12749:6:29"},"nativeSrc":"12749:15:29","nodeType":"YulFunctionCall","src":"12749:15:29"},"nativeSrc":"12749:15:29","nodeType":"YulExpressionStatement","src":"12749:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12784:1:29","nodeType":"YulLiteral","src":"12784:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"12787:4:29","nodeType":"YulLiteral","src":"12787:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12777:6:29","nodeType":"YulIdentifier","src":"12777:6:29"},"nativeSrc":"12777:15:29","nodeType":"YulFunctionCall","src":"12777:15:29"},"nativeSrc":"12777:15:29","nodeType":"YulExpressionStatement","src":"12777:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12647:18:29","nodeType":"YulIdentifier","src":"12647:18:29"},{"arguments":[{"name":"length","nativeSrc":"12670:6:29","nodeType":"YulIdentifier","src":"12670:6:29"},{"kind":"number","nativeSrc":"12678:2:29","nodeType":"YulLiteral","src":"12678:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12667:2:29","nodeType":"YulIdentifier","src":"12667:2:29"},"nativeSrc":"12667:14:29","nodeType":"YulFunctionCall","src":"12667:14:29"}],"functionName":{"name":"eq","nativeSrc":"12644:2:29","nodeType":"YulIdentifier","src":"12644:2:29"},"nativeSrc":"12644:38:29","nodeType":"YulFunctionCall","src":"12644:38:29"},"nativeSrc":"12641:161:29","nodeType":"YulIf","src":"12641:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"12428:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12463:4:29","nodeType":"YulTypedName","src":"12463:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12472:6:29","nodeType":"YulTypedName","src":"12472:6:29","type":""}],"src":"12428:380:29"},{"body":{"nativeSrc":"12942:171:29","nodeType":"YulBlock","src":"12942:171:29","statements":[{"nativeSrc":"12952:26:29","nodeType":"YulAssignment","src":"12952:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12964:9:29","nodeType":"YulIdentifier","src":"12964:9:29"},{"kind":"number","nativeSrc":"12975:2:29","nodeType":"YulLiteral","src":"12975:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12960:3:29","nodeType":"YulIdentifier","src":"12960:3:29"},"nativeSrc":"12960:18:29","nodeType":"YulFunctionCall","src":"12960:18:29"},"variableNames":[{"name":"tail","nativeSrc":"12952:4:29","nodeType":"YulIdentifier","src":"12952:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12994:9:29","nodeType":"YulIdentifier","src":"12994:9:29"},{"arguments":[{"name":"value0","nativeSrc":"13009:6:29","nodeType":"YulIdentifier","src":"13009:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13025:3:29","nodeType":"YulLiteral","src":"13025:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"13030:1:29","nodeType":"YulLiteral","src":"13030:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13021:3:29","nodeType":"YulIdentifier","src":"13021:3:29"},"nativeSrc":"13021:11:29","nodeType":"YulFunctionCall","src":"13021:11:29"},{"kind":"number","nativeSrc":"13034:1:29","nodeType":"YulLiteral","src":"13034:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13017:3:29","nodeType":"YulIdentifier","src":"13017:3:29"},"nativeSrc":"13017:19:29","nodeType":"YulFunctionCall","src":"13017:19:29"}],"functionName":{"name":"and","nativeSrc":"13005:3:29","nodeType":"YulIdentifier","src":"13005:3:29"},"nativeSrc":"13005:32:29","nodeType":"YulFunctionCall","src":"13005:32:29"}],"functionName":{"name":"mstore","nativeSrc":"12987:6:29","nodeType":"YulIdentifier","src":"12987:6:29"},"nativeSrc":"12987:51:29","nodeType":"YulFunctionCall","src":"12987:51:29"},"nativeSrc":"12987:51:29","nodeType":"YulExpressionStatement","src":"12987:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13058:9:29","nodeType":"YulIdentifier","src":"13058:9:29"},{"kind":"number","nativeSrc":"13069:2:29","nodeType":"YulLiteral","src":"13069:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13054:3:29","nodeType":"YulIdentifier","src":"13054:3:29"},"nativeSrc":"13054:18:29","nodeType":"YulFunctionCall","src":"13054:18:29"},{"arguments":[{"name":"value1","nativeSrc":"13078:6:29","nodeType":"YulIdentifier","src":"13078:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13094:3:29","nodeType":"YulLiteral","src":"13094:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"13099:1:29","nodeType":"YulLiteral","src":"13099:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13090:3:29","nodeType":"YulIdentifier","src":"13090:3:29"},"nativeSrc":"13090:11:29","nodeType":"YulFunctionCall","src":"13090:11:29"},{"kind":"number","nativeSrc":"13103:1:29","nodeType":"YulLiteral","src":"13103:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13086:3:29","nodeType":"YulIdentifier","src":"13086:3:29"},"nativeSrc":"13086:19:29","nodeType":"YulFunctionCall","src":"13086:19:29"}],"functionName":{"name":"and","nativeSrc":"13074:3:29","nodeType":"YulIdentifier","src":"13074:3:29"},"nativeSrc":"13074:32:29","nodeType":"YulFunctionCall","src":"13074:32:29"}],"functionName":{"name":"mstore","nativeSrc":"13047:6:29","nodeType":"YulIdentifier","src":"13047:6:29"},"nativeSrc":"13047:60:29","nodeType":"YulFunctionCall","src":"13047:60:29"},"nativeSrc":"13047:60:29","nodeType":"YulExpressionStatement","src":"13047:60:29"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12813:300:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12903:9:29","nodeType":"YulTypedName","src":"12903:9:29","type":""},{"name":"value1","nativeSrc":"12914:6:29","nodeType":"YulTypedName","src":"12914:6:29","type":""},{"name":"value0","nativeSrc":"12922:6:29","nodeType":"YulTypedName","src":"12922:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12933:4:29","nodeType":"YulTypedName","src":"12933:4:29","type":""}],"src":"12813:300:29"},{"body":{"nativeSrc":"13247:119:29","nodeType":"YulBlock","src":"13247:119:29","statements":[{"nativeSrc":"13257:26:29","nodeType":"YulAssignment","src":"13257:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13269:9:29","nodeType":"YulIdentifier","src":"13269:9:29"},{"kind":"number","nativeSrc":"13280:2:29","nodeType":"YulLiteral","src":"13280:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13265:3:29","nodeType":"YulIdentifier","src":"13265:3:29"},"nativeSrc":"13265:18:29","nodeType":"YulFunctionCall","src":"13265:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13257:4:29","nodeType":"YulIdentifier","src":"13257:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13299:9:29","nodeType":"YulIdentifier","src":"13299:9:29"},{"name":"value0","nativeSrc":"13310:6:29","nodeType":"YulIdentifier","src":"13310:6:29"}],"functionName":{"name":"mstore","nativeSrc":"13292:6:29","nodeType":"YulIdentifier","src":"13292:6:29"},"nativeSrc":"13292:25:29","nodeType":"YulFunctionCall","src":"13292:25:29"},"nativeSrc":"13292:25:29","nodeType":"YulExpressionStatement","src":"13292:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13337:9:29","nodeType":"YulIdentifier","src":"13337:9:29"},{"kind":"number","nativeSrc":"13348:2:29","nodeType":"YulLiteral","src":"13348:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13333:3:29","nodeType":"YulIdentifier","src":"13333:3:29"},"nativeSrc":"13333:18:29","nodeType":"YulFunctionCall","src":"13333:18:29"},{"name":"value1","nativeSrc":"13353:6:29","nodeType":"YulIdentifier","src":"13353:6:29"}],"functionName":{"name":"mstore","nativeSrc":"13326:6:29","nodeType":"YulIdentifier","src":"13326:6:29"},"nativeSrc":"13326:34:29","nodeType":"YulFunctionCall","src":"13326:34:29"},"nativeSrc":"13326:34:29","nodeType":"YulExpressionStatement","src":"13326:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13118:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13208:9:29","nodeType":"YulTypedName","src":"13208:9:29","type":""},{"name":"value1","nativeSrc":"13219:6:29","nodeType":"YulTypedName","src":"13219:6:29","type":""},{"name":"value0","nativeSrc":"13227:6:29","nodeType":"YulTypedName","src":"13227:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13238:4:29","nodeType":"YulTypedName","src":"13238:4:29","type":""}],"src":"13118:248:29"},{"body":{"nativeSrc":"13403:95:29","nodeType":"YulBlock","src":"13403:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13420:1:29","nodeType":"YulLiteral","src":"13420:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13427:3:29","nodeType":"YulLiteral","src":"13427:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"13432:10:29","nodeType":"YulLiteral","src":"13432:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13423:3:29","nodeType":"YulIdentifier","src":"13423:3:29"},"nativeSrc":"13423:20:29","nodeType":"YulFunctionCall","src":"13423:20:29"}],"functionName":{"name":"mstore","nativeSrc":"13413:6:29","nodeType":"YulIdentifier","src":"13413:6:29"},"nativeSrc":"13413:31:29","nodeType":"YulFunctionCall","src":"13413:31:29"},"nativeSrc":"13413:31:29","nodeType":"YulExpressionStatement","src":"13413:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13460:1:29","nodeType":"YulLiteral","src":"13460:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"13463:4:29","nodeType":"YulLiteral","src":"13463:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13453:6:29","nodeType":"YulIdentifier","src":"13453:6:29"},"nativeSrc":"13453:15:29","nodeType":"YulFunctionCall","src":"13453:15:29"},"nativeSrc":"13453:15:29","nodeType":"YulExpressionStatement","src":"13453:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13484:1:29","nodeType":"YulLiteral","src":"13484:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13487:4:29","nodeType":"YulLiteral","src":"13487:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13477:6:29","nodeType":"YulIdentifier","src":"13477:6:29"},"nativeSrc":"13477:15:29","nodeType":"YulFunctionCall","src":"13477:15:29"},"nativeSrc":"13477:15:29","nodeType":"YulExpressionStatement","src":"13477:15:29"}]},"name":"panic_error_0x32","nativeSrc":"13371:127:29","nodeType":"YulFunctionDefinition","src":"13371:127:29"},{"body":{"nativeSrc":"13611:101:29","nodeType":"YulBlock","src":"13611:101:29","statements":[{"nativeSrc":"13621:26:29","nodeType":"YulAssignment","src":"13621:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13633:9:29","nodeType":"YulIdentifier","src":"13633:9:29"},{"kind":"number","nativeSrc":"13644:2:29","nodeType":"YulLiteral","src":"13644:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13629:3:29","nodeType":"YulIdentifier","src":"13629:3:29"},"nativeSrc":"13629:18:29","nodeType":"YulFunctionCall","src":"13629:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13621:4:29","nodeType":"YulIdentifier","src":"13621:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13663:9:29","nodeType":"YulIdentifier","src":"13663:9:29"},{"arguments":[{"name":"value0","nativeSrc":"13678:6:29","nodeType":"YulIdentifier","src":"13678:6:29"},{"kind":"number","nativeSrc":"13686:18:29","nodeType":"YulLiteral","src":"13686:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13674:3:29","nodeType":"YulIdentifier","src":"13674:3:29"},"nativeSrc":"13674:31:29","nodeType":"YulFunctionCall","src":"13674:31:29"}],"functionName":{"name":"mstore","nativeSrc":"13656:6:29","nodeType":"YulIdentifier","src":"13656:6:29"},"nativeSrc":"13656:50:29","nodeType":"YulFunctionCall","src":"13656:50:29"},"nativeSrc":"13656:50:29","nodeType":"YulExpressionStatement","src":"13656:50:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"13503:209:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13580:9:29","nodeType":"YulTypedName","src":"13580:9:29","type":""},{"name":"value0","nativeSrc":"13591:6:29","nodeType":"YulTypedName","src":"13591:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13602:4:29","nodeType":"YulTypedName","src":"13602:4:29","type":""}],"src":"13503:209:29"},{"body":{"nativeSrc":"13773:65:29","nodeType":"YulBlock","src":"13773:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13790:1:29","nodeType":"YulLiteral","src":"13790:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"13793:3:29","nodeType":"YulIdentifier","src":"13793:3:29"}],"functionName":{"name":"mstore","nativeSrc":"13783:6:29","nodeType":"YulIdentifier","src":"13783:6:29"},"nativeSrc":"13783:14:29","nodeType":"YulFunctionCall","src":"13783:14:29"},"nativeSrc":"13783:14:29","nodeType":"YulExpressionStatement","src":"13783:14:29"},{"nativeSrc":"13806:26:29","nodeType":"YulAssignment","src":"13806:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"13824:1:29","nodeType":"YulLiteral","src":"13824:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13827:4:29","nodeType":"YulLiteral","src":"13827:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13814:9:29","nodeType":"YulIdentifier","src":"13814:9:29"},"nativeSrc":"13814:18:29","nodeType":"YulFunctionCall","src":"13814:18:29"},"variableNames":[{"name":"data","nativeSrc":"13806:4:29","nodeType":"YulIdentifier","src":"13806:4:29"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"13717:121:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13756:3:29","nodeType":"YulTypedName","src":"13756:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"13764:4:29","nodeType":"YulTypedName","src":"13764:4:29","type":""}],"src":"13717:121:29"},{"body":{"nativeSrc":"13924:437:29","nodeType":"YulBlock","src":"13924:437:29","statements":[{"body":{"nativeSrc":"13957:398:29","nodeType":"YulBlock","src":"13957:398:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13978:1:29","nodeType":"YulLiteral","src":"13978:1:29","type":"","value":"0"},{"name":"array","nativeSrc":"13981:5:29","nodeType":"YulIdentifier","src":"13981:5:29"}],"functionName":{"name":"mstore","nativeSrc":"13971:6:29","nodeType":"YulIdentifier","src":"13971:6:29"},"nativeSrc":"13971:16:29","nodeType":"YulFunctionCall","src":"13971:16:29"},"nativeSrc":"13971:16:29","nodeType":"YulExpressionStatement","src":"13971:16:29"},{"nativeSrc":"14000:30:29","nodeType":"YulVariableDeclaration","src":"14000:30:29","value":{"arguments":[{"kind":"number","nativeSrc":"14022:1:29","nodeType":"YulLiteral","src":"14022:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"14025:4:29","nodeType":"YulLiteral","src":"14025:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14012:9:29","nodeType":"YulIdentifier","src":"14012:9:29"},"nativeSrc":"14012:18:29","nodeType":"YulFunctionCall","src":"14012:18:29"},"variables":[{"name":"data","nativeSrc":"14004:4:29","nodeType":"YulTypedName","src":"14004:4:29","type":""}]},{"nativeSrc":"14043:57:29","nodeType":"YulVariableDeclaration","src":"14043:57:29","value":{"arguments":[{"name":"data","nativeSrc":"14066:4:29","nodeType":"YulIdentifier","src":"14066:4:29"},{"arguments":[{"kind":"number","nativeSrc":"14076:1:29","nodeType":"YulLiteral","src":"14076:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"14083:10:29","nodeType":"YulIdentifier","src":"14083:10:29"},{"kind":"number","nativeSrc":"14095:2:29","nodeType":"YulLiteral","src":"14095:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14079:3:29","nodeType":"YulIdentifier","src":"14079:3:29"},"nativeSrc":"14079:19:29","nodeType":"YulFunctionCall","src":"14079:19:29"}],"functionName":{"name":"shr","nativeSrc":"14072:3:29","nodeType":"YulIdentifier","src":"14072:3:29"},"nativeSrc":"14072:27:29","nodeType":"YulFunctionCall","src":"14072:27:29"}],"functionName":{"name":"add","nativeSrc":"14062:3:29","nodeType":"YulIdentifier","src":"14062:3:29"},"nativeSrc":"14062:38:29","nodeType":"YulFunctionCall","src":"14062:38:29"},"variables":[{"name":"deleteStart","nativeSrc":"14047:11:29","nodeType":"YulTypedName","src":"14047:11:29","type":""}]},{"body":{"nativeSrc":"14137:23:29","nodeType":"YulBlock","src":"14137:23:29","statements":[{"nativeSrc":"14139:19:29","nodeType":"YulAssignment","src":"14139:19:29","value":{"name":"data","nativeSrc":"14154:4:29","nodeType":"YulIdentifier","src":"14154:4:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"14139:11:29","nodeType":"YulIdentifier","src":"14139:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"14119:10:29","nodeType":"YulIdentifier","src":"14119:10:29"},{"kind":"number","nativeSrc":"14131:4:29","nodeType":"YulLiteral","src":"14131:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"14116:2:29","nodeType":"YulIdentifier","src":"14116:2:29"},"nativeSrc":"14116:20:29","nodeType":"YulFunctionCall","src":"14116:20:29"},"nativeSrc":"14113:47:29","nodeType":"YulIf","src":"14113:47:29"},{"nativeSrc":"14173:41:29","nodeType":"YulVariableDeclaration","src":"14173:41:29","value":{"arguments":[{"name":"data","nativeSrc":"14187:4:29","nodeType":"YulIdentifier","src":"14187:4:29"},{"arguments":[{"kind":"number","nativeSrc":"14197:1:29","nodeType":"YulLiteral","src":"14197:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"14204:3:29","nodeType":"YulIdentifier","src":"14204:3:29"},{"kind":"number","nativeSrc":"14209:2:29","nodeType":"YulLiteral","src":"14209:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14200:3:29","nodeType":"YulIdentifier","src":"14200:3:29"},"nativeSrc":"14200:12:29","nodeType":"YulFunctionCall","src":"14200:12:29"}],"functionName":{"name":"shr","nativeSrc":"14193:3:29","nodeType":"YulIdentifier","src":"14193:3:29"},"nativeSrc":"14193:20:29","nodeType":"YulFunctionCall","src":"14193:20:29"}],"functionName":{"name":"add","nativeSrc":"14183:3:29","nodeType":"YulIdentifier","src":"14183:3:29"},"nativeSrc":"14183:31:29","nodeType":"YulFunctionCall","src":"14183:31:29"},"variables":[{"name":"_1","nativeSrc":"14177:2:29","nodeType":"YulTypedName","src":"14177:2:29","type":""}]},{"nativeSrc":"14227:24:29","nodeType":"YulVariableDeclaration","src":"14227:24:29","value":{"name":"deleteStart","nativeSrc":"14240:11:29","nodeType":"YulIdentifier","src":"14240:11:29"},"variables":[{"name":"start","nativeSrc":"14231:5:29","nodeType":"YulTypedName","src":"14231:5:29","type":""}]},{"body":{"nativeSrc":"14325:20:29","nodeType":"YulBlock","src":"14325:20:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"14334:5:29","nodeType":"YulIdentifier","src":"14334:5:29"},{"kind":"number","nativeSrc":"14341:1:29","nodeType":"YulLiteral","src":"14341:1:29","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"14327:6:29","nodeType":"YulIdentifier","src":"14327:6:29"},"nativeSrc":"14327:16:29","nodeType":"YulFunctionCall","src":"14327:16:29"},"nativeSrc":"14327:16:29","nodeType":"YulExpressionStatement","src":"14327:16:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"14275:5:29","nodeType":"YulIdentifier","src":"14275:5:29"},{"name":"_1","nativeSrc":"14282:2:29","nodeType":"YulIdentifier","src":"14282:2:29"}],"functionName":{"name":"lt","nativeSrc":"14272:2:29","nodeType":"YulIdentifier","src":"14272:2:29"},"nativeSrc":"14272:13:29","nodeType":"YulFunctionCall","src":"14272:13:29"},"nativeSrc":"14264:81:29","nodeType":"YulForLoop","post":{"nativeSrc":"14286:26:29","nodeType":"YulBlock","src":"14286:26:29","statements":[{"nativeSrc":"14288:22:29","nodeType":"YulAssignment","src":"14288:22:29","value":{"arguments":[{"name":"start","nativeSrc":"14301:5:29","nodeType":"YulIdentifier","src":"14301:5:29"},{"kind":"number","nativeSrc":"14308:1:29","nodeType":"YulLiteral","src":"14308:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14297:3:29","nodeType":"YulIdentifier","src":"14297:3:29"},"nativeSrc":"14297:13:29","nodeType":"YulFunctionCall","src":"14297:13:29"},"variableNames":[{"name":"start","nativeSrc":"14288:5:29","nodeType":"YulIdentifier","src":"14288:5:29"}]}]},"pre":{"nativeSrc":"14268:3:29","nodeType":"YulBlock","src":"14268:3:29","statements":[]},"src":"14264:81:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"13940:3:29","nodeType":"YulIdentifier","src":"13940:3:29"},{"kind":"number","nativeSrc":"13945:2:29","nodeType":"YulLiteral","src":"13945:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"13937:2:29","nodeType":"YulIdentifier","src":"13937:2:29"},"nativeSrc":"13937:11:29","nodeType":"YulFunctionCall","src":"13937:11:29"},"nativeSrc":"13934:421:29","nodeType":"YulIf","src":"13934:421:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"13843:518:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"13896:5:29","nodeType":"YulTypedName","src":"13896:5:29","type":""},{"name":"len","nativeSrc":"13903:3:29","nodeType":"YulTypedName","src":"13903:3:29","type":""},{"name":"startIndex","nativeSrc":"13908:10:29","nodeType":"YulTypedName","src":"13908:10:29","type":""}],"src":"13843:518:29"},{"body":{"nativeSrc":"14451:81:29","nodeType":"YulBlock","src":"14451:81:29","statements":[{"nativeSrc":"14461:65:29","nodeType":"YulAssignment","src":"14461:65:29","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"14476:4:29","nodeType":"YulIdentifier","src":"14476:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14494:1:29","nodeType":"YulLiteral","src":"14494:1:29","type":"","value":"3"},{"name":"len","nativeSrc":"14497:3:29","nodeType":"YulIdentifier","src":"14497:3:29"}],"functionName":{"name":"shl","nativeSrc":"14490:3:29","nodeType":"YulIdentifier","src":"14490:3:29"},"nativeSrc":"14490:11:29","nodeType":"YulFunctionCall","src":"14490:11:29"},{"arguments":[{"kind":"number","nativeSrc":"14507:1:29","nodeType":"YulLiteral","src":"14507:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"14503:3:29","nodeType":"YulIdentifier","src":"14503:3:29"},"nativeSrc":"14503:6:29","nodeType":"YulFunctionCall","src":"14503:6:29"}],"functionName":{"name":"shr","nativeSrc":"14486:3:29","nodeType":"YulIdentifier","src":"14486:3:29"},"nativeSrc":"14486:24:29","nodeType":"YulFunctionCall","src":"14486:24:29"}],"functionName":{"name":"not","nativeSrc":"14482:3:29","nodeType":"YulIdentifier","src":"14482:3:29"},"nativeSrc":"14482:29:29","nodeType":"YulFunctionCall","src":"14482:29:29"}],"functionName":{"name":"and","nativeSrc":"14472:3:29","nodeType":"YulIdentifier","src":"14472:3:29"},"nativeSrc":"14472:40:29","nodeType":"YulFunctionCall","src":"14472:40:29"},{"arguments":[{"kind":"number","nativeSrc":"14518:1:29","nodeType":"YulLiteral","src":"14518:1:29","type":"","value":"1"},{"name":"len","nativeSrc":"14521:3:29","nodeType":"YulIdentifier","src":"14521:3:29"}],"functionName":{"name":"shl","nativeSrc":"14514:3:29","nodeType":"YulIdentifier","src":"14514:3:29"},"nativeSrc":"14514:11:29","nodeType":"YulFunctionCall","src":"14514:11:29"}],"functionName":{"name":"or","nativeSrc":"14469:2:29","nodeType":"YulIdentifier","src":"14469:2:29"},"nativeSrc":"14469:57:29","nodeType":"YulFunctionCall","src":"14469:57:29"},"variableNames":[{"name":"used","nativeSrc":"14461:4:29","nodeType":"YulIdentifier","src":"14461:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"14366:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"14428:4:29","nodeType":"YulTypedName","src":"14428:4:29","type":""},{"name":"len","nativeSrc":"14434:3:29","nodeType":"YulTypedName","src":"14434:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"14442:4:29","nodeType":"YulTypedName","src":"14442:4:29","type":""}],"src":"14366:166:29"},{"body":{"nativeSrc":"14633:1203:29","nodeType":"YulBlock","src":"14633:1203:29","statements":[{"nativeSrc":"14643:24:29","nodeType":"YulVariableDeclaration","src":"14643:24:29","value":{"arguments":[{"name":"src","nativeSrc":"14663:3:29","nodeType":"YulIdentifier","src":"14663:3:29"}],"functionName":{"name":"mload","nativeSrc":"14657:5:29","nodeType":"YulIdentifier","src":"14657:5:29"},"nativeSrc":"14657:10:29","nodeType":"YulFunctionCall","src":"14657:10:29"},"variables":[{"name":"newLen","nativeSrc":"14647:6:29","nodeType":"YulTypedName","src":"14647:6:29","type":""}]},{"body":{"nativeSrc":"14710:22:29","nodeType":"YulBlock","src":"14710:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14712:16:29","nodeType":"YulIdentifier","src":"14712:16:29"},"nativeSrc":"14712:18:29","nodeType":"YulFunctionCall","src":"14712:18:29"},"nativeSrc":"14712:18:29","nodeType":"YulExpressionStatement","src":"14712:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"14682:6:29","nodeType":"YulIdentifier","src":"14682:6:29"},{"kind":"number","nativeSrc":"14690:18:29","nodeType":"YulLiteral","src":"14690:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14679:2:29","nodeType":"YulIdentifier","src":"14679:2:29"},"nativeSrc":"14679:30:29","nodeType":"YulFunctionCall","src":"14679:30:29"},"nativeSrc":"14676:56:29","nodeType":"YulIf","src":"14676:56:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14785:4:29","nodeType":"YulIdentifier","src":"14785:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"14823:4:29","nodeType":"YulIdentifier","src":"14823:4:29"}],"functionName":{"name":"sload","nativeSrc":"14817:5:29","nodeType":"YulIdentifier","src":"14817:5:29"},"nativeSrc":"14817:11:29","nodeType":"YulFunctionCall","src":"14817:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"14791:25:29","nodeType":"YulIdentifier","src":"14791:25:29"},"nativeSrc":"14791:38:29","nodeType":"YulFunctionCall","src":"14791:38:29"},{"name":"newLen","nativeSrc":"14831:6:29","nodeType":"YulIdentifier","src":"14831:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"14741:43:29","nodeType":"YulIdentifier","src":"14741:43:29"},"nativeSrc":"14741:97:29","nodeType":"YulFunctionCall","src":"14741:97:29"},"nativeSrc":"14741:97:29","nodeType":"YulExpressionStatement","src":"14741:97:29"},{"nativeSrc":"14847:18:29","nodeType":"YulVariableDeclaration","src":"14847:18:29","value":{"kind":"number","nativeSrc":"14864:1:29","nodeType":"YulLiteral","src":"14864:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"14851:9:29","nodeType":"YulTypedName","src":"14851:9:29","type":""}]},{"nativeSrc":"14874:17:29","nodeType":"YulAssignment","src":"14874:17:29","value":{"kind":"number","nativeSrc":"14887:4:29","nodeType":"YulLiteral","src":"14887:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"14874:9:29","nodeType":"YulIdentifier","src":"14874:9:29"}]},{"cases":[{"body":{"nativeSrc":"14937:642:29","nodeType":"YulBlock","src":"14937:642:29","statements":[{"nativeSrc":"14951:35:29","nodeType":"YulVariableDeclaration","src":"14951:35:29","value":{"arguments":[{"name":"newLen","nativeSrc":"14970:6:29","nodeType":"YulIdentifier","src":"14970:6:29"},{"arguments":[{"kind":"number","nativeSrc":"14982:2:29","nodeType":"YulLiteral","src":"14982:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"14978:3:29","nodeType":"YulIdentifier","src":"14978:3:29"},"nativeSrc":"14978:7:29","nodeType":"YulFunctionCall","src":"14978:7:29"}],"functionName":{"name":"and","nativeSrc":"14966:3:29","nodeType":"YulIdentifier","src":"14966:3:29"},"nativeSrc":"14966:20:29","nodeType":"YulFunctionCall","src":"14966:20:29"},"variables":[{"name":"loopEnd","nativeSrc":"14955:7:29","nodeType":"YulTypedName","src":"14955:7:29","type":""}]},{"nativeSrc":"14999:49:29","nodeType":"YulVariableDeclaration","src":"14999:49:29","value":{"arguments":[{"name":"slot","nativeSrc":"15043:4:29","nodeType":"YulIdentifier","src":"15043:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"15013:29:29","nodeType":"YulIdentifier","src":"15013:29:29"},"nativeSrc":"15013:35:29","nodeType":"YulFunctionCall","src":"15013:35:29"},"variables":[{"name":"dstPtr","nativeSrc":"15003:6:29","nodeType":"YulTypedName","src":"15003:6:29","type":""}]},{"nativeSrc":"15061:10:29","nodeType":"YulVariableDeclaration","src":"15061:10:29","value":{"kind":"number","nativeSrc":"15070:1:29","nodeType":"YulLiteral","src":"15070:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15065:1:29","nodeType":"YulTypedName","src":"15065:1:29","type":""}]},{"body":{"nativeSrc":"15141:165:29","nodeType":"YulBlock","src":"15141:165:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"15166:6:29","nodeType":"YulIdentifier","src":"15166:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15184:3:29","nodeType":"YulIdentifier","src":"15184:3:29"},{"name":"srcOffset","nativeSrc":"15189:9:29","nodeType":"YulIdentifier","src":"15189:9:29"}],"functionName":{"name":"add","nativeSrc":"15180:3:29","nodeType":"YulIdentifier","src":"15180:3:29"},"nativeSrc":"15180:19:29","nodeType":"YulFunctionCall","src":"15180:19:29"}],"functionName":{"name":"mload","nativeSrc":"15174:5:29","nodeType":"YulIdentifier","src":"15174:5:29"},"nativeSrc":"15174:26:29","nodeType":"YulFunctionCall","src":"15174:26:29"}],"functionName":{"name":"sstore","nativeSrc":"15159:6:29","nodeType":"YulIdentifier","src":"15159:6:29"},"nativeSrc":"15159:42:29","nodeType":"YulFunctionCall","src":"15159:42:29"},"nativeSrc":"15159:42:29","nodeType":"YulExpressionStatement","src":"15159:42:29"},{"nativeSrc":"15218:24:29","nodeType":"YulAssignment","src":"15218:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"15232:6:29","nodeType":"YulIdentifier","src":"15232:6:29"},{"kind":"number","nativeSrc":"15240:1:29","nodeType":"YulLiteral","src":"15240:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15228:3:29","nodeType":"YulIdentifier","src":"15228:3:29"},"nativeSrc":"15228:14:29","nodeType":"YulFunctionCall","src":"15228:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"15218:6:29","nodeType":"YulIdentifier","src":"15218:6:29"}]},{"nativeSrc":"15259:33:29","nodeType":"YulAssignment","src":"15259:33:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"15276:9:29","nodeType":"YulIdentifier","src":"15276:9:29"},{"kind":"number","nativeSrc":"15287:4:29","nodeType":"YulLiteral","src":"15287:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15272:3:29","nodeType":"YulIdentifier","src":"15272:3:29"},"nativeSrc":"15272:20:29","nodeType":"YulFunctionCall","src":"15272:20:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"15259:9:29","nodeType":"YulIdentifier","src":"15259:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15095:1:29","nodeType":"YulIdentifier","src":"15095:1:29"},{"name":"loopEnd","nativeSrc":"15098:7:29","nodeType":"YulIdentifier","src":"15098:7:29"}],"functionName":{"name":"lt","nativeSrc":"15092:2:29","nodeType":"YulIdentifier","src":"15092:2:29"},"nativeSrc":"15092:14:29","nodeType":"YulFunctionCall","src":"15092:14:29"},"nativeSrc":"15084:222:29","nodeType":"YulForLoop","post":{"nativeSrc":"15107:21:29","nodeType":"YulBlock","src":"15107:21:29","statements":[{"nativeSrc":"15109:17:29","nodeType":"YulAssignment","src":"15109:17:29","value":{"arguments":[{"name":"i","nativeSrc":"15118:1:29","nodeType":"YulIdentifier","src":"15118:1:29"},{"kind":"number","nativeSrc":"15121:4:29","nodeType":"YulLiteral","src":"15121:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15114:3:29","nodeType":"YulIdentifier","src":"15114:3:29"},"nativeSrc":"15114:12:29","nodeType":"YulFunctionCall","src":"15114:12:29"},"variableNames":[{"name":"i","nativeSrc":"15109:1:29","nodeType":"YulIdentifier","src":"15109:1:29"}]}]},"pre":{"nativeSrc":"15088:3:29","nodeType":"YulBlock","src":"15088:3:29","statements":[]},"src":"15084:222:29"},{"body":{"nativeSrc":"15354:166:29","nodeType":"YulBlock","src":"15354:166:29","statements":[{"nativeSrc":"15372:43:29","nodeType":"YulVariableDeclaration","src":"15372:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15399:3:29","nodeType":"YulIdentifier","src":"15399:3:29"},{"name":"srcOffset","nativeSrc":"15404:9:29","nodeType":"YulIdentifier","src":"15404:9:29"}],"functionName":{"name":"add","nativeSrc":"15395:3:29","nodeType":"YulIdentifier","src":"15395:3:29"},"nativeSrc":"15395:19:29","nodeType":"YulFunctionCall","src":"15395:19:29"}],"functionName":{"name":"mload","nativeSrc":"15389:5:29","nodeType":"YulIdentifier","src":"15389:5:29"},"nativeSrc":"15389:26:29","nodeType":"YulFunctionCall","src":"15389:26:29"},"variables":[{"name":"lastValue","nativeSrc":"15376:9:29","nodeType":"YulTypedName","src":"15376:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"15439:6:29","nodeType":"YulIdentifier","src":"15439:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"15451:9:29","nodeType":"YulIdentifier","src":"15451:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15478:1:29","nodeType":"YulLiteral","src":"15478:1:29","type":"","value":"3"},{"name":"newLen","nativeSrc":"15481:6:29","nodeType":"YulIdentifier","src":"15481:6:29"}],"functionName":{"name":"shl","nativeSrc":"15474:3:29","nodeType":"YulIdentifier","src":"15474:3:29"},"nativeSrc":"15474:14:29","nodeType":"YulFunctionCall","src":"15474:14:29"},{"kind":"number","nativeSrc":"15490:3:29","nodeType":"YulLiteral","src":"15490:3:29","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"15470:3:29","nodeType":"YulIdentifier","src":"15470:3:29"},"nativeSrc":"15470:24:29","nodeType":"YulFunctionCall","src":"15470:24:29"},{"arguments":[{"kind":"number","nativeSrc":"15500:1:29","nodeType":"YulLiteral","src":"15500:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"15496:3:29","nodeType":"YulIdentifier","src":"15496:3:29"},"nativeSrc":"15496:6:29","nodeType":"YulFunctionCall","src":"15496:6:29"}],"functionName":{"name":"shr","nativeSrc":"15466:3:29","nodeType":"YulIdentifier","src":"15466:3:29"},"nativeSrc":"15466:37:29","nodeType":"YulFunctionCall","src":"15466:37:29"}],"functionName":{"name":"not","nativeSrc":"15462:3:29","nodeType":"YulIdentifier","src":"15462:3:29"},"nativeSrc":"15462:42:29","nodeType":"YulFunctionCall","src":"15462:42:29"}],"functionName":{"name":"and","nativeSrc":"15447:3:29","nodeType":"YulIdentifier","src":"15447:3:29"},"nativeSrc":"15447:58:29","nodeType":"YulFunctionCall","src":"15447:58:29"}],"functionName":{"name":"sstore","nativeSrc":"15432:6:29","nodeType":"YulIdentifier","src":"15432:6:29"},"nativeSrc":"15432:74:29","nodeType":"YulFunctionCall","src":"15432:74:29"},"nativeSrc":"15432:74:29","nodeType":"YulExpressionStatement","src":"15432:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"15325:7:29","nodeType":"YulIdentifier","src":"15325:7:29"},{"name":"newLen","nativeSrc":"15334:6:29","nodeType":"YulIdentifier","src":"15334:6:29"}],"functionName":{"name":"lt","nativeSrc":"15322:2:29","nodeType":"YulIdentifier","src":"15322:2:29"},"nativeSrc":"15322:19:29","nodeType":"YulFunctionCall","src":"15322:19:29"},"nativeSrc":"15319:201:29","nodeType":"YulIf","src":"15319:201:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15540:4:29","nodeType":"YulIdentifier","src":"15540:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15554:1:29","nodeType":"YulLiteral","src":"15554:1:29","type":"","value":"1"},{"name":"newLen","nativeSrc":"15557:6:29","nodeType":"YulIdentifier","src":"15557:6:29"}],"functionName":{"name":"shl","nativeSrc":"15550:3:29","nodeType":"YulIdentifier","src":"15550:3:29"},"nativeSrc":"15550:14:29","nodeType":"YulFunctionCall","src":"15550:14:29"},{"kind":"number","nativeSrc":"15566:1:29","nodeType":"YulLiteral","src":"15566:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15546:3:29","nodeType":"YulIdentifier","src":"15546:3:29"},"nativeSrc":"15546:22:29","nodeType":"YulFunctionCall","src":"15546:22:29"}],"functionName":{"name":"sstore","nativeSrc":"15533:6:29","nodeType":"YulIdentifier","src":"15533:6:29"},"nativeSrc":"15533:36:29","nodeType":"YulFunctionCall","src":"15533:36:29"},"nativeSrc":"15533:36:29","nodeType":"YulExpressionStatement","src":"15533:36:29"}]},"nativeSrc":"14930:649:29","nodeType":"YulCase","src":"14930:649:29","value":{"kind":"number","nativeSrc":"14935:1:29","nodeType":"YulLiteral","src":"14935:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"15596:234:29","nodeType":"YulBlock","src":"15596:234:29","statements":[{"nativeSrc":"15610:14:29","nodeType":"YulVariableDeclaration","src":"15610:14:29","value":{"kind":"number","nativeSrc":"15623:1:29","nodeType":"YulLiteral","src":"15623:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"15614:5:29","nodeType":"YulTypedName","src":"15614:5:29","type":""}]},{"body":{"nativeSrc":"15659:67:29","nodeType":"YulBlock","src":"15659:67:29","statements":[{"nativeSrc":"15677:35:29","nodeType":"YulAssignment","src":"15677:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15696:3:29","nodeType":"YulIdentifier","src":"15696:3:29"},{"name":"srcOffset","nativeSrc":"15701:9:29","nodeType":"YulIdentifier","src":"15701:9:29"}],"functionName":{"name":"add","nativeSrc":"15692:3:29","nodeType":"YulIdentifier","src":"15692:3:29"},"nativeSrc":"15692:19:29","nodeType":"YulFunctionCall","src":"15692:19:29"}],"functionName":{"name":"mload","nativeSrc":"15686:5:29","nodeType":"YulIdentifier","src":"15686:5:29"},"nativeSrc":"15686:26:29","nodeType":"YulFunctionCall","src":"15686:26:29"},"variableNames":[{"name":"value","nativeSrc":"15677:5:29","nodeType":"YulIdentifier","src":"15677:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"15640:6:29","nodeType":"YulIdentifier","src":"15640:6:29"},"nativeSrc":"15637:89:29","nodeType":"YulIf","src":"15637:89:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15746:4:29","nodeType":"YulIdentifier","src":"15746:4:29"},{"arguments":[{"name":"value","nativeSrc":"15805:5:29","nodeType":"YulIdentifier","src":"15805:5:29"},{"name":"newLen","nativeSrc":"15812:6:29","nodeType":"YulIdentifier","src":"15812:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"15752:52:29","nodeType":"YulIdentifier","src":"15752:52:29"},"nativeSrc":"15752:67:29","nodeType":"YulFunctionCall","src":"15752:67:29"}],"functionName":{"name":"sstore","nativeSrc":"15739:6:29","nodeType":"YulIdentifier","src":"15739:6:29"},"nativeSrc":"15739:81:29","nodeType":"YulFunctionCall","src":"15739:81:29"},"nativeSrc":"15739:81:29","nodeType":"YulExpressionStatement","src":"15739:81:29"}]},"nativeSrc":"15588:242:29","nodeType":"YulCase","src":"15588:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"14910:6:29","nodeType":"YulIdentifier","src":"14910:6:29"},{"kind":"number","nativeSrc":"14918:2:29","nodeType":"YulLiteral","src":"14918:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"14907:2:29","nodeType":"YulIdentifier","src":"14907:2:29"},"nativeSrc":"14907:14:29","nodeType":"YulFunctionCall","src":"14907:14:29"},"nativeSrc":"14900:930:29","nodeType":"YulSwitch","src":"14900:930:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"14537:1299:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"14618:4:29","nodeType":"YulTypedName","src":"14618:4:29","type":""},{"name":"src","nativeSrc":"14624:3:29","nodeType":"YulTypedName","src":"14624:3:29","type":""}],"src":"14537:1299:29"},{"body":{"nativeSrc":"15922:103:29","nodeType":"YulBlock","src":"15922:103:29","statements":[{"body":{"nativeSrc":"15968:16:29","nodeType":"YulBlock","src":"15968:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15977:1:29","nodeType":"YulLiteral","src":"15977:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"15980:1:29","nodeType":"YulLiteral","src":"15980:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15970:6:29","nodeType":"YulIdentifier","src":"15970:6:29"},"nativeSrc":"15970:12:29","nodeType":"YulFunctionCall","src":"15970:12:29"},"nativeSrc":"15970:12:29","nodeType":"YulExpressionStatement","src":"15970:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15943:7:29","nodeType":"YulIdentifier","src":"15943:7:29"},{"name":"headStart","nativeSrc":"15952:9:29","nodeType":"YulIdentifier","src":"15952:9:29"}],"functionName":{"name":"sub","nativeSrc":"15939:3:29","nodeType":"YulIdentifier","src":"15939:3:29"},"nativeSrc":"15939:23:29","nodeType":"YulFunctionCall","src":"15939:23:29"},{"kind":"number","nativeSrc":"15964:2:29","nodeType":"YulLiteral","src":"15964:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15935:3:29","nodeType":"YulIdentifier","src":"15935:3:29"},"nativeSrc":"15935:32:29","nodeType":"YulFunctionCall","src":"15935:32:29"},"nativeSrc":"15932:52:29","nodeType":"YulIf","src":"15932:52:29"},{"nativeSrc":"15993:26:29","nodeType":"YulAssignment","src":"15993:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"16009:9:29","nodeType":"YulIdentifier","src":"16009:9:29"}],"functionName":{"name":"mload","nativeSrc":"16003:5:29","nodeType":"YulIdentifier","src":"16003:5:29"},"nativeSrc":"16003:16:29","nodeType":"YulFunctionCall","src":"16003:16:29"},"variableNames":[{"name":"value0","nativeSrc":"15993:6:29","nodeType":"YulIdentifier","src":"15993:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"15841:184:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15888:9:29","nodeType":"YulTypedName","src":"15888:9:29","type":""},{"name":"dataEnd","nativeSrc":"15899:7:29","nodeType":"YulTypedName","src":"15899:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15911:6:29","nodeType":"YulTypedName","src":"15911:6:29","type":""}],"src":"15841:184:29"},{"body":{"nativeSrc":"16261:326:29","nodeType":"YulBlock","src":"16261:326:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16278:9:29","nodeType":"YulIdentifier","src":"16278:9:29"},{"arguments":[{"name":"value0","nativeSrc":"16293:6:29","nodeType":"YulIdentifier","src":"16293:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16309:3:29","nodeType":"YulLiteral","src":"16309:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"16314:1:29","nodeType":"YulLiteral","src":"16314:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"16305:3:29","nodeType":"YulIdentifier","src":"16305:3:29"},"nativeSrc":"16305:11:29","nodeType":"YulFunctionCall","src":"16305:11:29"},{"kind":"number","nativeSrc":"16318:1:29","nodeType":"YulLiteral","src":"16318:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"16301:3:29","nodeType":"YulIdentifier","src":"16301:3:29"},"nativeSrc":"16301:19:29","nodeType":"YulFunctionCall","src":"16301:19:29"}],"functionName":{"name":"and","nativeSrc":"16289:3:29","nodeType":"YulIdentifier","src":"16289:3:29"},"nativeSrc":"16289:32:29","nodeType":"YulFunctionCall","src":"16289:32:29"}],"functionName":{"name":"mstore","nativeSrc":"16271:6:29","nodeType":"YulIdentifier","src":"16271:6:29"},"nativeSrc":"16271:51:29","nodeType":"YulFunctionCall","src":"16271:51:29"},"nativeSrc":"16271:51:29","nodeType":"YulExpressionStatement","src":"16271:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16342:9:29","nodeType":"YulIdentifier","src":"16342:9:29"},{"kind":"number","nativeSrc":"16353:2:29","nodeType":"YulLiteral","src":"16353:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16338:3:29","nodeType":"YulIdentifier","src":"16338:3:29"},"nativeSrc":"16338:18:29","nodeType":"YulFunctionCall","src":"16338:18:29"},{"arguments":[{"name":"value1","nativeSrc":"16362:6:29","nodeType":"YulIdentifier","src":"16362:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16378:3:29","nodeType":"YulLiteral","src":"16378:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"16383:1:29","nodeType":"YulLiteral","src":"16383:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"16374:3:29","nodeType":"YulIdentifier","src":"16374:3:29"},"nativeSrc":"16374:11:29","nodeType":"YulFunctionCall","src":"16374:11:29"},{"kind":"number","nativeSrc":"16387:1:29","nodeType":"YulLiteral","src":"16387:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"16370:3:29","nodeType":"YulIdentifier","src":"16370:3:29"},"nativeSrc":"16370:19:29","nodeType":"YulFunctionCall","src":"16370:19:29"}],"functionName":{"name":"and","nativeSrc":"16358:3:29","nodeType":"YulIdentifier","src":"16358:3:29"},"nativeSrc":"16358:32:29","nodeType":"YulFunctionCall","src":"16358:32:29"}],"functionName":{"name":"mstore","nativeSrc":"16331:6:29","nodeType":"YulIdentifier","src":"16331:6:29"},"nativeSrc":"16331:60:29","nodeType":"YulFunctionCall","src":"16331:60:29"},"nativeSrc":"16331:60:29","nodeType":"YulExpressionStatement","src":"16331:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16411:9:29","nodeType":"YulIdentifier","src":"16411:9:29"},{"kind":"number","nativeSrc":"16422:2:29","nodeType":"YulLiteral","src":"16422:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16407:3:29","nodeType":"YulIdentifier","src":"16407:3:29"},"nativeSrc":"16407:18:29","nodeType":"YulFunctionCall","src":"16407:18:29"},{"name":"value2","nativeSrc":"16427:6:29","nodeType":"YulIdentifier","src":"16427:6:29"}],"functionName":{"name":"mstore","nativeSrc":"16400:6:29","nodeType":"YulIdentifier","src":"16400:6:29"},"nativeSrc":"16400:34:29","nodeType":"YulFunctionCall","src":"16400:34:29"},"nativeSrc":"16400:34:29","nodeType":"YulExpressionStatement","src":"16400:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16454:9:29","nodeType":"YulIdentifier","src":"16454:9:29"},{"kind":"number","nativeSrc":"16465:2:29","nodeType":"YulLiteral","src":"16465:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16450:3:29","nodeType":"YulIdentifier","src":"16450:3:29"},"nativeSrc":"16450:18:29","nodeType":"YulFunctionCall","src":"16450:18:29"},{"name":"value3","nativeSrc":"16470:6:29","nodeType":"YulIdentifier","src":"16470:6:29"}],"functionName":{"name":"mstore","nativeSrc":"16443:6:29","nodeType":"YulIdentifier","src":"16443:6:29"},"nativeSrc":"16443:34:29","nodeType":"YulFunctionCall","src":"16443:34:29"},"nativeSrc":"16443:34:29","nodeType":"YulExpressionStatement","src":"16443:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16497:9:29","nodeType":"YulIdentifier","src":"16497:9:29"},{"kind":"number","nativeSrc":"16508:3:29","nodeType":"YulLiteral","src":"16508:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16493:3:29","nodeType":"YulIdentifier","src":"16493:3:29"},"nativeSrc":"16493:19:29","nodeType":"YulFunctionCall","src":"16493:19:29"},{"kind":"number","nativeSrc":"16514:3:29","nodeType":"YulLiteral","src":"16514:3:29","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"16486:6:29","nodeType":"YulIdentifier","src":"16486:6:29"},"nativeSrc":"16486:32:29","nodeType":"YulFunctionCall","src":"16486:32:29"},"nativeSrc":"16486:32:29","nodeType":"YulExpressionStatement","src":"16486:32:29"},{"nativeSrc":"16527:54:29","nodeType":"YulAssignment","src":"16527:54:29","value":{"arguments":[{"name":"value4","nativeSrc":"16553:6:29","nodeType":"YulIdentifier","src":"16553:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"16565:9:29","nodeType":"YulIdentifier","src":"16565:9:29"},{"kind":"number","nativeSrc":"16576:3:29","nodeType":"YulLiteral","src":"16576:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"16561:3:29","nodeType":"YulIdentifier","src":"16561:3:29"},"nativeSrc":"16561:19:29","nodeType":"YulFunctionCall","src":"16561:19:29"}],"functionName":{"name":"abi_encode_string","nativeSrc":"16535:17:29","nodeType":"YulIdentifier","src":"16535:17:29"},"nativeSrc":"16535:46:29","nodeType":"YulFunctionCall","src":"16535:46:29"},"variableNames":[{"name":"tail","nativeSrc":"16527:4:29","nodeType":"YulIdentifier","src":"16527:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"16030:557:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16198:9:29","nodeType":"YulTypedName","src":"16198:9:29","type":""},{"name":"value4","nativeSrc":"16209:6:29","nodeType":"YulTypedName","src":"16209:6:29","type":""},{"name":"value3","nativeSrc":"16217:6:29","nodeType":"YulTypedName","src":"16217:6:29","type":""},{"name":"value2","nativeSrc":"16225:6:29","nodeType":"YulTypedName","src":"16225:6:29","type":""},{"name":"value1","nativeSrc":"16233:6:29","nodeType":"YulTypedName","src":"16233:6:29","type":""},{"name":"value0","nativeSrc":"16241:6:29","nodeType":"YulTypedName","src":"16241:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16252:4:29","nodeType":"YulTypedName","src":"16252:4:29","type":""}],"src":"16030:557:29"},{"body":{"nativeSrc":"16672:169:29","nodeType":"YulBlock","src":"16672:169:29","statements":[{"body":{"nativeSrc":"16718:16:29","nodeType":"YulBlock","src":"16718:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16727:1:29","nodeType":"YulLiteral","src":"16727:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"16730:1:29","nodeType":"YulLiteral","src":"16730:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16720:6:29","nodeType":"YulIdentifier","src":"16720:6:29"},"nativeSrc":"16720:12:29","nodeType":"YulFunctionCall","src":"16720:12:29"},"nativeSrc":"16720:12:29","nodeType":"YulExpressionStatement","src":"16720:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16693:7:29","nodeType":"YulIdentifier","src":"16693:7:29"},{"name":"headStart","nativeSrc":"16702:9:29","nodeType":"YulIdentifier","src":"16702:9:29"}],"functionName":{"name":"sub","nativeSrc":"16689:3:29","nodeType":"YulIdentifier","src":"16689:3:29"},"nativeSrc":"16689:23:29","nodeType":"YulFunctionCall","src":"16689:23:29"},{"kind":"number","nativeSrc":"16714:2:29","nodeType":"YulLiteral","src":"16714:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16685:3:29","nodeType":"YulIdentifier","src":"16685:3:29"},"nativeSrc":"16685:32:29","nodeType":"YulFunctionCall","src":"16685:32:29"},"nativeSrc":"16682:52:29","nodeType":"YulIf","src":"16682:52:29"},{"nativeSrc":"16743:29:29","nodeType":"YulVariableDeclaration","src":"16743:29:29","value":{"arguments":[{"name":"headStart","nativeSrc":"16762:9:29","nodeType":"YulIdentifier","src":"16762:9:29"}],"functionName":{"name":"mload","nativeSrc":"16756:5:29","nodeType":"YulIdentifier","src":"16756:5:29"},"nativeSrc":"16756:16:29","nodeType":"YulFunctionCall","src":"16756:16:29"},"variables":[{"name":"value","nativeSrc":"16747:5:29","nodeType":"YulTypedName","src":"16747:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16805:5:29","nodeType":"YulIdentifier","src":"16805:5:29"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"16781:23:29","nodeType":"YulIdentifier","src":"16781:23:29"},"nativeSrc":"16781:30:29","nodeType":"YulFunctionCall","src":"16781:30:29"},"nativeSrc":"16781:30:29","nodeType":"YulExpressionStatement","src":"16781:30:29"},{"nativeSrc":"16820:15:29","nodeType":"YulAssignment","src":"16820:15:29","value":{"name":"value","nativeSrc":"16830:5:29","nodeType":"YulIdentifier","src":"16830:5:29"},"variableNames":[{"name":"value0","nativeSrc":"16820:6:29","nodeType":"YulIdentifier","src":"16820:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"16592:249:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16638:9:29","nodeType":"YulTypedName","src":"16638:9:29","type":""},{"name":"dataEnd","nativeSrc":"16649:7:29","nodeType":"YulTypedName","src":"16649:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16661:6:29","nodeType":"YulTypedName","src":"16661:6:29","type":""}],"src":"16592:249:29"},{"body":{"nativeSrc":"17177:492:29","nodeType":"YulBlock","src":"17177:492:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17194:9:29","nodeType":"YulIdentifier","src":"17194:9:29"},{"arguments":[{"name":"value0","nativeSrc":"17209:6:29","nodeType":"YulIdentifier","src":"17209:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17225:3:29","nodeType":"YulLiteral","src":"17225:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"17230:1:29","nodeType":"YulLiteral","src":"17230:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"17221:3:29","nodeType":"YulIdentifier","src":"17221:3:29"},"nativeSrc":"17221:11:29","nodeType":"YulFunctionCall","src":"17221:11:29"},{"kind":"number","nativeSrc":"17234:1:29","nodeType":"YulLiteral","src":"17234:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"17217:3:29","nodeType":"YulIdentifier","src":"17217:3:29"},"nativeSrc":"17217:19:29","nodeType":"YulFunctionCall","src":"17217:19:29"}],"functionName":{"name":"and","nativeSrc":"17205:3:29","nodeType":"YulIdentifier","src":"17205:3:29"},"nativeSrc":"17205:32:29","nodeType":"YulFunctionCall","src":"17205:32:29"}],"functionName":{"name":"mstore","nativeSrc":"17187:6:29","nodeType":"YulIdentifier","src":"17187:6:29"},"nativeSrc":"17187:51:29","nodeType":"YulFunctionCall","src":"17187:51:29"},"nativeSrc":"17187:51:29","nodeType":"YulExpressionStatement","src":"17187:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17258:9:29","nodeType":"YulIdentifier","src":"17258:9:29"},{"kind":"number","nativeSrc":"17269:2:29","nodeType":"YulLiteral","src":"17269:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17254:3:29","nodeType":"YulIdentifier","src":"17254:3:29"},"nativeSrc":"17254:18:29","nodeType":"YulFunctionCall","src":"17254:18:29"},{"arguments":[{"name":"value1","nativeSrc":"17278:6:29","nodeType":"YulIdentifier","src":"17278:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17294:3:29","nodeType":"YulLiteral","src":"17294:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"17299:1:29","nodeType":"YulLiteral","src":"17299:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"17290:3:29","nodeType":"YulIdentifier","src":"17290:3:29"},"nativeSrc":"17290:11:29","nodeType":"YulFunctionCall","src":"17290:11:29"},{"kind":"number","nativeSrc":"17303:1:29","nodeType":"YulLiteral","src":"17303:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"17286:3:29","nodeType":"YulIdentifier","src":"17286:3:29"},"nativeSrc":"17286:19:29","nodeType":"YulFunctionCall","src":"17286:19:29"}],"functionName":{"name":"and","nativeSrc":"17274:3:29","nodeType":"YulIdentifier","src":"17274:3:29"},"nativeSrc":"17274:32:29","nodeType":"YulFunctionCall","src":"17274:32:29"}],"functionName":{"name":"mstore","nativeSrc":"17247:6:29","nodeType":"YulIdentifier","src":"17247:6:29"},"nativeSrc":"17247:60:29","nodeType":"YulFunctionCall","src":"17247:60:29"},"nativeSrc":"17247:60:29","nodeType":"YulExpressionStatement","src":"17247:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17327:9:29","nodeType":"YulIdentifier","src":"17327:9:29"},{"kind":"number","nativeSrc":"17338:2:29","nodeType":"YulLiteral","src":"17338:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17323:3:29","nodeType":"YulIdentifier","src":"17323:3:29"},"nativeSrc":"17323:18:29","nodeType":"YulFunctionCall","src":"17323:18:29"},{"kind":"number","nativeSrc":"17343:3:29","nodeType":"YulLiteral","src":"17343:3:29","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"17316:6:29","nodeType":"YulIdentifier","src":"17316:6:29"},"nativeSrc":"17316:31:29","nodeType":"YulFunctionCall","src":"17316:31:29"},"nativeSrc":"17316:31:29","nodeType":"YulExpressionStatement","src":"17316:31:29"},{"nativeSrc":"17356:71:29","nodeType":"YulVariableDeclaration","src":"17356:71:29","value":{"arguments":[{"name":"value2","nativeSrc":"17399:6:29","nodeType":"YulIdentifier","src":"17399:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"17411:9:29","nodeType":"YulIdentifier","src":"17411:9:29"},{"kind":"number","nativeSrc":"17422:3:29","nodeType":"YulLiteral","src":"17422:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"17407:3:29","nodeType":"YulIdentifier","src":"17407:3:29"},"nativeSrc":"17407:19:29","nodeType":"YulFunctionCall","src":"17407:19:29"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"17370:28:29","nodeType":"YulIdentifier","src":"17370:28:29"},"nativeSrc":"17370:57:29","nodeType":"YulFunctionCall","src":"17370:57:29"},"variables":[{"name":"tail_1","nativeSrc":"17360:6:29","nodeType":"YulTypedName","src":"17360:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17447:9:29","nodeType":"YulIdentifier","src":"17447:9:29"},{"kind":"number","nativeSrc":"17458:2:29","nodeType":"YulLiteral","src":"17458:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17443:3:29","nodeType":"YulIdentifier","src":"17443:3:29"},"nativeSrc":"17443:18:29","nodeType":"YulFunctionCall","src":"17443:18:29"},{"arguments":[{"name":"tail_1","nativeSrc":"17467:6:29","nodeType":"YulIdentifier","src":"17467:6:29"},{"name":"headStart","nativeSrc":"17475:9:29","nodeType":"YulIdentifier","src":"17475:9:29"}],"functionName":{"name":"sub","nativeSrc":"17463:3:29","nodeType":"YulIdentifier","src":"17463:3:29"},"nativeSrc":"17463:22:29","nodeType":"YulFunctionCall","src":"17463:22:29"}],"functionName":{"name":"mstore","nativeSrc":"17436:6:29","nodeType":"YulIdentifier","src":"17436:6:29"},"nativeSrc":"17436:50:29","nodeType":"YulFunctionCall","src":"17436:50:29"},"nativeSrc":"17436:50:29","nodeType":"YulExpressionStatement","src":"17436:50:29"},{"nativeSrc":"17495:58:29","nodeType":"YulVariableDeclaration","src":"17495:58:29","value":{"arguments":[{"name":"value3","nativeSrc":"17538:6:29","nodeType":"YulIdentifier","src":"17538:6:29"},{"name":"tail_1","nativeSrc":"17546:6:29","nodeType":"YulIdentifier","src":"17546:6:29"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"17509:28:29","nodeType":"YulIdentifier","src":"17509:28:29"},"nativeSrc":"17509:44:29","nodeType":"YulFunctionCall","src":"17509:44:29"},"variables":[{"name":"tail_2","nativeSrc":"17499:6:29","nodeType":"YulTypedName","src":"17499:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17573:9:29","nodeType":"YulIdentifier","src":"17573:9:29"},{"kind":"number","nativeSrc":"17584:3:29","nodeType":"YulLiteral","src":"17584:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"17569:3:29","nodeType":"YulIdentifier","src":"17569:3:29"},"nativeSrc":"17569:19:29","nodeType":"YulFunctionCall","src":"17569:19:29"},{"arguments":[{"name":"tail_2","nativeSrc":"17594:6:29","nodeType":"YulIdentifier","src":"17594:6:29"},{"name":"headStart","nativeSrc":"17602:9:29","nodeType":"YulIdentifier","src":"17602:9:29"}],"functionName":{"name":"sub","nativeSrc":"17590:3:29","nodeType":"YulIdentifier","src":"17590:3:29"},"nativeSrc":"17590:22:29","nodeType":"YulFunctionCall","src":"17590:22:29"}],"functionName":{"name":"mstore","nativeSrc":"17562:6:29","nodeType":"YulIdentifier","src":"17562:6:29"},"nativeSrc":"17562:51:29","nodeType":"YulFunctionCall","src":"17562:51:29"},"nativeSrc":"17562:51:29","nodeType":"YulExpressionStatement","src":"17562:51:29"},{"nativeSrc":"17622:41:29","nodeType":"YulAssignment","src":"17622:41:29","value":{"arguments":[{"name":"value4","nativeSrc":"17648:6:29","nodeType":"YulIdentifier","src":"17648:6:29"},{"name":"tail_2","nativeSrc":"17656:6:29","nodeType":"YulIdentifier","src":"17656:6:29"}],"functionName":{"name":"abi_encode_string","nativeSrc":"17630:17:29","nodeType":"YulIdentifier","src":"17630:17:29"},"nativeSrc":"17630:33:29","nodeType":"YulFunctionCall","src":"17630:33:29"},"variableNames":[{"name":"tail","nativeSrc":"17622:4:29","nodeType":"YulIdentifier","src":"17622:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"16846:823:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17114:9:29","nodeType":"YulTypedName","src":"17114:9:29","type":""},{"name":"value4","nativeSrc":"17125:6:29","nodeType":"YulTypedName","src":"17125:6:29","type":""},{"name":"value3","nativeSrc":"17133:6:29","nodeType":"YulTypedName","src":"17133:6:29","type":""},{"name":"value2","nativeSrc":"17141:6:29","nodeType":"YulTypedName","src":"17141:6:29","type":""},{"name":"value1","nativeSrc":"17149:6:29","nodeType":"YulTypedName","src":"17149:6:29","type":""},{"name":"value0","nativeSrc":"17157:6:29","nodeType":"YulTypedName","src":"17157:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17168:4:29","nodeType":"YulTypedName","src":"17168:4:29","type":""}],"src":"16846:823:29"},{"body":{"nativeSrc":"17811:150:29","nodeType":"YulBlock","src":"17811:150:29","statements":[{"nativeSrc":"17821:27:29","nodeType":"YulVariableDeclaration","src":"17821:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"17841:6:29","nodeType":"YulIdentifier","src":"17841:6:29"}],"functionName":{"name":"mload","nativeSrc":"17835:5:29","nodeType":"YulIdentifier","src":"17835:5:29"},"nativeSrc":"17835:13:29","nodeType":"YulFunctionCall","src":"17835:13:29"},"variables":[{"name":"length","nativeSrc":"17825:6:29","nodeType":"YulTypedName","src":"17825:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"17896:6:29","nodeType":"YulIdentifier","src":"17896:6:29"},{"kind":"number","nativeSrc":"17904:4:29","nodeType":"YulLiteral","src":"17904:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17892:3:29","nodeType":"YulIdentifier","src":"17892:3:29"},"nativeSrc":"17892:17:29","nodeType":"YulFunctionCall","src":"17892:17:29"},{"name":"pos","nativeSrc":"17911:3:29","nodeType":"YulIdentifier","src":"17911:3:29"},{"name":"length","nativeSrc":"17916:6:29","nodeType":"YulIdentifier","src":"17916:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17857:34:29","nodeType":"YulIdentifier","src":"17857:34:29"},"nativeSrc":"17857:66:29","nodeType":"YulFunctionCall","src":"17857:66:29"},"nativeSrc":"17857:66:29","nodeType":"YulExpressionStatement","src":"17857:66:29"},{"nativeSrc":"17932:23:29","nodeType":"YulAssignment","src":"17932:23:29","value":{"arguments":[{"name":"pos","nativeSrc":"17943:3:29","nodeType":"YulIdentifier","src":"17943:3:29"},{"name":"length","nativeSrc":"17948:6:29","nodeType":"YulIdentifier","src":"17948:6:29"}],"functionName":{"name":"add","nativeSrc":"17939:3:29","nodeType":"YulIdentifier","src":"17939:3:29"},"nativeSrc":"17939:16:29","nodeType":"YulFunctionCall","src":"17939:16:29"},"variableNames":[{"name":"end","nativeSrc":"17932:3:29","nodeType":"YulIdentifier","src":"17932:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17674:287:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17787:3:29","nodeType":"YulTypedName","src":"17787:3:29","type":""},{"name":"value0","nativeSrc":"17792:6:29","nodeType":"YulTypedName","src":"17792:6:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17803:3:29","nodeType":"YulTypedName","src":"17803:3:29","type":""}],"src":"17674:287:29"},{"body":{"nativeSrc":"18151:232:29","nodeType":"YulBlock","src":"18151:232:29","statements":[{"nativeSrc":"18161:27:29","nodeType":"YulAssignment","src":"18161:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"18173:9:29","nodeType":"YulIdentifier","src":"18173:9:29"},{"kind":"number","nativeSrc":"18184:3:29","nodeType":"YulLiteral","src":"18184:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18169:3:29","nodeType":"YulIdentifier","src":"18169:3:29"},"nativeSrc":"18169:19:29","nodeType":"YulFunctionCall","src":"18169:19:29"},"variableNames":[{"name":"tail","nativeSrc":"18161:4:29","nodeType":"YulIdentifier","src":"18161:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18204:9:29","nodeType":"YulIdentifier","src":"18204:9:29"},{"arguments":[{"name":"value0","nativeSrc":"18219:6:29","nodeType":"YulIdentifier","src":"18219:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18235:3:29","nodeType":"YulLiteral","src":"18235:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"18240:1:29","nodeType":"YulLiteral","src":"18240:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"18231:3:29","nodeType":"YulIdentifier","src":"18231:3:29"},"nativeSrc":"18231:11:29","nodeType":"YulFunctionCall","src":"18231:11:29"},{"kind":"number","nativeSrc":"18244:1:29","nodeType":"YulLiteral","src":"18244:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"18227:3:29","nodeType":"YulIdentifier","src":"18227:3:29"},"nativeSrc":"18227:19:29","nodeType":"YulFunctionCall","src":"18227:19:29"}],"functionName":{"name":"and","nativeSrc":"18215:3:29","nodeType":"YulIdentifier","src":"18215:3:29"},"nativeSrc":"18215:32:29","nodeType":"YulFunctionCall","src":"18215:32:29"}],"functionName":{"name":"mstore","nativeSrc":"18197:6:29","nodeType":"YulIdentifier","src":"18197:6:29"},"nativeSrc":"18197:51:29","nodeType":"YulFunctionCall","src":"18197:51:29"},"nativeSrc":"18197:51:29","nodeType":"YulExpressionStatement","src":"18197:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18268:9:29","nodeType":"YulIdentifier","src":"18268:9:29"},{"kind":"number","nativeSrc":"18279:2:29","nodeType":"YulLiteral","src":"18279:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18264:3:29","nodeType":"YulIdentifier","src":"18264:3:29"},"nativeSrc":"18264:18:29","nodeType":"YulFunctionCall","src":"18264:18:29"},{"name":"value1","nativeSrc":"18284:6:29","nodeType":"YulIdentifier","src":"18284:6:29"}],"functionName":{"name":"mstore","nativeSrc":"18257:6:29","nodeType":"YulIdentifier","src":"18257:6:29"},"nativeSrc":"18257:34:29","nodeType":"YulFunctionCall","src":"18257:34:29"},"nativeSrc":"18257:34:29","nodeType":"YulExpressionStatement","src":"18257:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18311:9:29","nodeType":"YulIdentifier","src":"18311:9:29"},{"kind":"number","nativeSrc":"18322:2:29","nodeType":"YulLiteral","src":"18322:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18307:3:29","nodeType":"YulIdentifier","src":"18307:3:29"},"nativeSrc":"18307:18:29","nodeType":"YulFunctionCall","src":"18307:18:29"},{"name":"value2","nativeSrc":"18327:6:29","nodeType":"YulIdentifier","src":"18327:6:29"}],"functionName":{"name":"mstore","nativeSrc":"18300:6:29","nodeType":"YulIdentifier","src":"18300:6:29"},"nativeSrc":"18300:34:29","nodeType":"YulFunctionCall","src":"18300:34:29"},"nativeSrc":"18300:34:29","nodeType":"YulExpressionStatement","src":"18300:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18354:9:29","nodeType":"YulIdentifier","src":"18354:9:29"},{"kind":"number","nativeSrc":"18365:2:29","nodeType":"YulLiteral","src":"18365:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18350:3:29","nodeType":"YulIdentifier","src":"18350:3:29"},"nativeSrc":"18350:18:29","nodeType":"YulFunctionCall","src":"18350:18:29"},{"name":"value3","nativeSrc":"18370:6:29","nodeType":"YulIdentifier","src":"18370:6:29"}],"functionName":{"name":"mstore","nativeSrc":"18343:6:29","nodeType":"YulIdentifier","src":"18343:6:29"},"nativeSrc":"18343:34:29","nodeType":"YulFunctionCall","src":"18343:34:29"},"nativeSrc":"18343:34:29","nodeType":"YulExpressionStatement","src":"18343:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17966:417:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18096:9:29","nodeType":"YulTypedName","src":"18096:9:29","type":""},{"name":"value3","nativeSrc":"18107:6:29","nodeType":"YulTypedName","src":"18107:6:29","type":""},{"name":"value2","nativeSrc":"18115:6:29","nodeType":"YulTypedName","src":"18115:6:29","type":""},{"name":"value1","nativeSrc":"18123:6:29","nodeType":"YulTypedName","src":"18123:6:29","type":""},{"name":"value0","nativeSrc":"18131:6:29","nodeType":"YulTypedName","src":"18131:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18142:4:29","nodeType":"YulTypedName","src":"18142:4:29","type":""}],"src":"17966:417:29"},{"body":{"nativeSrc":"18436:174:29","nodeType":"YulBlock","src":"18436:174:29","statements":[{"nativeSrc":"18446:16:29","nodeType":"YulAssignment","src":"18446:16:29","value":{"arguments":[{"name":"x","nativeSrc":"18457:1:29","nodeType":"YulIdentifier","src":"18457:1:29"},{"name":"y","nativeSrc":"18460:1:29","nodeType":"YulIdentifier","src":"18460:1:29"}],"functionName":{"name":"add","nativeSrc":"18453:3:29","nodeType":"YulIdentifier","src":"18453:3:29"},"nativeSrc":"18453:9:29","nodeType":"YulFunctionCall","src":"18453:9:29"},"variableNames":[{"name":"sum","nativeSrc":"18446:3:29","nodeType":"YulIdentifier","src":"18446:3:29"}]},{"body":{"nativeSrc":"18493:111:29","nodeType":"YulBlock","src":"18493:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18514:1:29","nodeType":"YulLiteral","src":"18514:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"18521:3:29","nodeType":"YulLiteral","src":"18521:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"18526:10:29","nodeType":"YulLiteral","src":"18526:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"18517:3:29","nodeType":"YulIdentifier","src":"18517:3:29"},"nativeSrc":"18517:20:29","nodeType":"YulFunctionCall","src":"18517:20:29"}],"functionName":{"name":"mstore","nativeSrc":"18507:6:29","nodeType":"YulIdentifier","src":"18507:6:29"},"nativeSrc":"18507:31:29","nodeType":"YulFunctionCall","src":"18507:31:29"},"nativeSrc":"18507:31:29","nodeType":"YulExpressionStatement","src":"18507:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18558:1:29","nodeType":"YulLiteral","src":"18558:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"18561:4:29","nodeType":"YulLiteral","src":"18561:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"18551:6:29","nodeType":"YulIdentifier","src":"18551:6:29"},"nativeSrc":"18551:15:29","nodeType":"YulFunctionCall","src":"18551:15:29"},"nativeSrc":"18551:15:29","nodeType":"YulExpressionStatement","src":"18551:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18586:1:29","nodeType":"YulLiteral","src":"18586:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"18589:4:29","nodeType":"YulLiteral","src":"18589:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18579:6:29","nodeType":"YulIdentifier","src":"18579:6:29"},"nativeSrc":"18579:15:29","nodeType":"YulFunctionCall","src":"18579:15:29"},"nativeSrc":"18579:15:29","nodeType":"YulExpressionStatement","src":"18579:15:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"18477:1:29","nodeType":"YulIdentifier","src":"18477:1:29"},{"name":"sum","nativeSrc":"18480:3:29","nodeType":"YulIdentifier","src":"18480:3:29"}],"functionName":{"name":"gt","nativeSrc":"18474:2:29","nodeType":"YulIdentifier","src":"18474:2:29"},"nativeSrc":"18474:10:29","nodeType":"YulFunctionCall","src":"18474:10:29"},"nativeSrc":"18471:133:29","nodeType":"YulIf","src":"18471:133:29"}]},"name":"checked_add_t_uint256","nativeSrc":"18388:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18419:1:29","nodeType":"YulTypedName","src":"18419:1:29","type":""},{"name":"y","nativeSrc":"18422:1:29","nodeType":"YulTypedName","src":"18422:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18428:3:29","nodeType":"YulTypedName","src":"18428:3:29","type":""}],"src":"18388:222:29"},{"body":{"nativeSrc":"18844:236:29","nodeType":"YulBlock","src":"18844:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18861:9:29","nodeType":"YulIdentifier","src":"18861:9:29"},{"kind":"number","nativeSrc":"18872:2:29","nodeType":"YulLiteral","src":"18872:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"18854:6:29","nodeType":"YulIdentifier","src":"18854:6:29"},"nativeSrc":"18854:21:29","nodeType":"YulFunctionCall","src":"18854:21:29"},"nativeSrc":"18854:21:29","nodeType":"YulExpressionStatement","src":"18854:21:29"},{"nativeSrc":"18884:70:29","nodeType":"YulVariableDeclaration","src":"18884:70:29","value":{"arguments":[{"name":"value0","nativeSrc":"18927:6:29","nodeType":"YulIdentifier","src":"18927:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"18939:9:29","nodeType":"YulIdentifier","src":"18939:9:29"},{"kind":"number","nativeSrc":"18950:2:29","nodeType":"YulLiteral","src":"18950:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18935:3:29","nodeType":"YulIdentifier","src":"18935:3:29"},"nativeSrc":"18935:18:29","nodeType":"YulFunctionCall","src":"18935:18:29"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"18898:28:29","nodeType":"YulIdentifier","src":"18898:28:29"},"nativeSrc":"18898:56:29","nodeType":"YulFunctionCall","src":"18898:56:29"},"variables":[{"name":"tail_1","nativeSrc":"18888:6:29","nodeType":"YulTypedName","src":"18888:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18974:9:29","nodeType":"YulIdentifier","src":"18974:9:29"},{"kind":"number","nativeSrc":"18985:2:29","nodeType":"YulLiteral","src":"18985:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18970:3:29","nodeType":"YulIdentifier","src":"18970:3:29"},"nativeSrc":"18970:18:29","nodeType":"YulFunctionCall","src":"18970:18:29"},{"arguments":[{"name":"tail_1","nativeSrc":"18994:6:29","nodeType":"YulIdentifier","src":"18994:6:29"},{"name":"headStart","nativeSrc":"19002:9:29","nodeType":"YulIdentifier","src":"19002:9:29"}],"functionName":{"name":"sub","nativeSrc":"18990:3:29","nodeType":"YulIdentifier","src":"18990:3:29"},"nativeSrc":"18990:22:29","nodeType":"YulFunctionCall","src":"18990:22:29"}],"functionName":{"name":"mstore","nativeSrc":"18963:6:29","nodeType":"YulIdentifier","src":"18963:6:29"},"nativeSrc":"18963:50:29","nodeType":"YulFunctionCall","src":"18963:50:29"},"nativeSrc":"18963:50:29","nodeType":"YulExpressionStatement","src":"18963:50:29"},{"nativeSrc":"19022:52:29","nodeType":"YulAssignment","src":"19022:52:29","value":{"arguments":[{"name":"value1","nativeSrc":"19059:6:29","nodeType":"YulIdentifier","src":"19059:6:29"},{"name":"tail_1","nativeSrc":"19067:6:29","nodeType":"YulIdentifier","src":"19067:6:29"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"19030:28:29","nodeType":"YulIdentifier","src":"19030:28:29"},"nativeSrc":"19030:44:29","nodeType":"YulFunctionCall","src":"19030:44:29"},"variableNames":[{"name":"tail","nativeSrc":"19022:4:29","nodeType":"YulIdentifier","src":"19022:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"18615:465:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18805:9:29","nodeType":"YulTypedName","src":"18805:9:29","type":""},{"name":"value1","nativeSrc":"18816:6:29","nodeType":"YulTypedName","src":"18816:6:29","type":""},{"name":"value0","nativeSrc":"18824:6:29","nodeType":"YulTypedName","src":"18824:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18835:4:29","nodeType":"YulTypedName","src":"18835:4:29","type":""}],"src":"18615:465:29"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n        array := allocate_memory(size)\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(_1, shl(5, length)), 0x20)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := array\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"482":[{"length":32,"start":3095},{"length":32,"start":3136},{"length":32,"start":3457}]},"linkReferences":{},"object":"60806040526004361061013f5760003560e01c80636b20c454116100b6578063ad3cb1cc1161006f578063ad3cb1cc14610396578063c4d66de8146103c7578063e985e9c5146103e7578063f242432a14610407578063f2fde38b14610427578063f5298aca1461044757600080fd5b80636b20c454146102c5578063715018a6146102e5578063731133e9146102fa5780638456cb591461031a5780638da5cb5b1461032f578063a22cb4651461037657600080fd5b80632eb2c2d6116101085780632eb2c2d6146102165780633f4ba83a146102365780634e1273f41461024b5780634f1ef2861461027857806352d1902d1461028b5780635c975abb146102a057600080fd5b8062fdd58e1461014457806301ffc9a71461017757806302fe5305146101a75780630e89341c146101c95780631f7fdffa146101f6575b600080fd5b34801561015057600080fd5b5061016461015f366004611851565b610467565b6040519081526020015b60405180910390f35b34801561018357600080fd5b50610197610192366004611891565b61049e565b604051901515815260200161016e565b3480156101b357600080fd5b506101c76101c236600461194f565b6104ee565b005b3480156101d557600080fd5b506101e96101e436600461199f565b610502565b60405161016e9190611a08565b34801561020257600080fd5b506101c7610211366004611acb565b6105c7565b34801561022257600080fd5b506101c7610231366004611b6d565b6105e1565b34801561024257600080fd5b506101c761064d565b34801561025757600080fd5b5061026b610266366004611c20565b61065f565b60405161016e9190611d23565b6101c7610286366004611d36565b61072b565b34801561029757600080fd5b5061016461074a565b3480156102ac57600080fd5b5060008051602061221e8339815191525460ff16610197565b3480156102d157600080fd5b506101c76102e0366004611d79565b610767565b3480156102f157600080fd5b506101c76107cb565b34801561030657600080fd5b506101c7610315366004611df0565b6107dd565b34801561032657600080fd5b506101c76107f1565b34801561033b57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161016e565b34801561038257600080fd5b506101c7610391366004611e38565b610801565b3480156103a257600080fd5b506101e9604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103d357600080fd5b506101c76103e2366004611e74565b61080c565b3480156103f357600080fd5b50610197610402366004611e8f565b61095b565b34801561041357600080fd5b506101c7610422366004611ec2565b6109a8565b34801561043357600080fd5b506101c7610442366004611e74565b610a07565b34801561045357600080fd5b506101c7610462366004611f1a565b610a42565b60008181526000805160206121fe833981519152602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806104cf57506001600160e01b031982166303a24d0760e21b145b8061049857506301ffc9a760e01b6001600160e01b0319831614610498565b6104f6610a78565b6104ff81610ad3565b50565b7f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c450280546060916000805160206121fe8339815191529161054190611f4d565b80601f016020809104026020016040519081016040528092919081815260200182805461056d90611f4d565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b5050505050915050919050565b6105cf610a78565b6105db84848484610b0d565b50505050565b336001600160a01b03861681148015906106025750610600868261095b565b155b156106385760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6106458686868686610b45565b505050505050565b610655610a78565b61065d610bac565b565b606081518351146106905781518351604051635b05999160e01b81526004810192909252602482015260440161062f565b600083516001600160401b038111156106ab576106ab6118ae565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060005b8451811015610723576020808202860101516106fe90602080840287010151610467565b82828151811061071057610710611f87565b60209081029190910101526001016106da565b509392505050565b610733610c0c565b61073c82610cb1565b6107468282610cb9565b5050565b6000610754610d76565b506000805160206121de83398151915290565b6001600160a01b03831633148015906107875750610785833361095b565b155b156107bb57335b60405163711bec9160e11b81526001600160a01b039182166004820152908416602482015260440161062f565b6107c6838383610dbf565b505050565b6107d3610a78565b61065d6000610e05565b6107e5610a78565b6105db84848484610e76565b6107f9610a78565b61065d610ed3565b610746338383610f1c565b6000610816610fc4565b805490915060ff600160401b82041615906001600160401b031660008115801561083d5750825b90506000826001600160401b031660011480156108595750303b155b905081158015610867575080155b156108855760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108af57845460ff60401b1916600160401b1785555b6108ed6040518060400160405280601781526020017f697066733a2f2f516d555550532f7b69647d2e6a736f6e000000000000000000815250610fed565b6108f686610ffe565b6108fe61100f565b61090661100f565b61090e61100f565b831561064557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6001600160a01b0391821660009081527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45016020908152604080832093909416825291909152205460ff1690565b336001600160a01b03861681148015906109c957506109c7868261095b565b155b156109fa5760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161062f565b6106458686868686611017565b610a0f610a78565b6001600160a01b038116610a3957604051631e4fbdf760e01b81526000600482015260240161062f565b6104ff81610e05565b6001600160a01b0383163314801590610a625750610a60833361095b565b155b15610a6d573361078e565b6107c68383836110a5565b33610aaa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461065d5760405163118cdaa760e01b815233600482015260240161062f565b6000805160206121fe8339815191527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45026107c68382611fe4565b6001600160a01b038416610b3757604051632bfa23e760e11b81526000600482015260240161062f565b6105db600085858585611109565b6001600160a01b038416610b6f57604051632bfa23e760e11b81526000600482015260240161062f565b6001600160a01b038516610b9857604051626a0d4560e21b81526000600482015260240161062f565b610ba58585858585611109565b5050505050565b610bb461115c565b60008051602061221e833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c9357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c876000805160206121de833981519152546001600160a01b031690565b6001600160a01b031614155b1561065d5760405163703e46dd60e11b815260040160405180910390fd5b6104ff610a78565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d13575060408051601f3d908101601f19168201909252610d10918101906120a2565b60015b610d3b57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161062f565b6000805160206121de8339815191528114610d6c57604051632a87526960e21b81526004810182905260240161062f565b6107c6838361118c565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065d5760405163703e46dd60e11b815260040160405180910390fd5b6001600160a01b038316610de857604051626a0d4560e21b81526000600482015260240161062f565b6107c6836000848460405180602001604052806000815250611109565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6001600160a01b038416610ea057604051632bfa23e760e11b81526000600482015260240161062f565b60408051600180825260208201869052818301908152606082018590526080820190925290610645600087848487611109565b610edb6111e2565b60008051602061221e833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610bee565b6000805160206121fe8339815191526001600160a01b038316610f545760405162ced3e160e81b81526000600482015260240161062f565b6001600160a01b038481166000818152600184016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610498565b610ff5611213565b6104ff81611238565b611006611213565b6104ff81611240565b61065d611213565b6001600160a01b03841661104157604051632bfa23e760e11b81526000600482015260240161062f565b6001600160a01b03851661106a57604051626a0d4560e21b81526000600482015260240161062f565b6040805160018082526020820186905281830190815260608201859052608082019092529061109c8787848487611109565b50505050505050565b6001600160a01b0383166110ce57604051626a0d4560e21b81526000600482015260240161062f565b604080516001808252602082018590528183019081526060820184905260a08201909252600060808201818152919291610ba5918791859085905b61111585858585611248565b6001600160a01b03841615610ba5578251339060010361114e5760208481015190840151611147838989858589611254565b5050610645565b610645818787878787611378565b60008051602061221e8339815191525460ff1661065d57604051638dfc202b60e01b815260040160405180910390fd5b61119582611461565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156111da576107c682826114c6565b61074661153c565b60008051602061221e8339815191525460ff161561065d5760405163d93c066560e01b815260040160405180910390fd5b61121b61155b565b61065d57604051631afcd79f60e31b815260040160405180910390fd5b6104f6611213565b610a0f611213565b6105db84848484611575565b6001600160a01b0384163b156106455760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061129890899089908890889088906004016120bb565b6020604051808303816000875af19250505080156112d3575060408051601f3d908101601f191682019092526112d091810190612100565b60015b61133c573d808015611301576040519150601f19603f3d011682016040523d82523d6000602084013e611306565b606091505b50805160000361133457604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b1461109c57604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b6001600160a01b0384163b156106455760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113bc908990899088908890889060040161211d565b6020604051808303816000875af19250505080156113f7575060408051601f3d908101601f191682019092526113f491810190612100565b60015b611425573d808015611301576040519150601f19603f3d011682016040523d82523d6000602084013e611306565b6001600160e01b0319811663bc197c8160e01b1461109c57604051632bfa23e760e11b81526001600160a01b038616600482015260240161062f565b806001600160a01b03163b60000361149757604051634c9c8ce360e01b81526001600160a01b038216600482015260240161062f565b6000805160206121de83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114e3919061217b565b600060405180830381855af49150503d806000811461151e576040519150601f19603f3d011682016040523d82523d6000602084013e611523565b606091505b5091509150611533858383611589565b95945050505050565b341561065d5760405163b398979f60e01b815260040160405180910390fd5b6000611565610fc4565b54600160401b900460ff16919050565b61157d6111e2565b6105db848484846115e8565b60608261159e576115998261180d565b6115e1565b81511580156115b557506001600160a01b0384163b155b156115de57604051639996b31560e01b81526001600160a01b038516600482015260240161062f565b50805b9392505050565b805182516000805160206121fe83398151915291146116275782518251604051635b05999160e01b81526004810192909252602482015260440161062f565b3360005b845181101561172d576020818102868101820151908601909101516001600160a01b038916156116de576000828152602086815260408083206001600160a01b038d168452909152902054818110156116b7576040516303dee4c560e01b81526001600160a01b038b16600482015260248101829052604481018390526064810184905260840161062f565b6000838152602087815260408083206001600160a01b038e16845290915290209082900390555b6001600160a01b03881615611723576000828152602086815260408083206001600160a01b038c1684529091528120805483929061171d908490612197565b90915550505b505060010161162b565b5083516001036117ae5760208401516000906020850151909150866001600160a01b0316886001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161179f929190918252602082015260400190565b60405180910390a45050610645565b846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516117fd9291906121b8565b60405180910390a4505050505050565b80511561181c57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b038116811461184c57600080fd5b919050565b6000806040838503121561186457600080fd5b61186d83611835565b946020939093013593505050565b6001600160e01b0319811681146104ff57600080fd5b6000602082840312156118a357600080fd5b81356115e18161187b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118ec576118ec6118ae565b604052919050565b6000806001600160401b0384111561190e5761190e6118ae565b50601f8301601f1916602001611923816118c4565b91505082815283838301111561193857600080fd5b828260208301376000602084830101529392505050565b60006020828403121561196157600080fd5b81356001600160401b0381111561197757600080fd5b8201601f8101841361198857600080fd5b611997848235602084016118f4565b949350505050565b6000602082840312156119b157600080fd5b5035919050565b60005b838110156119d35781810151838201526020016119bb565b50506000910152565b600081518084526119f48160208601602086016119b8565b601f01601f19169290920160200192915050565b6020815260006115e160208301846119dc565b60006001600160401b03821115611a3457611a346118ae565b5060051b60200190565b600082601f830112611a4f57600080fd5b8135611a62611a5d82611a1b565b6118c4565b8082825260208201915060208360051b860101925085831115611a8457600080fd5b602085015b83811015611aa1578035835260209283019201611a89565b5095945050505050565b600082601f830112611abc57600080fd5b6115e1838335602085016118f4565b60008060008060808587031215611ae157600080fd5b611aea85611835565b935060208501356001600160401b03811115611b0557600080fd5b611b1187828801611a3e565b93505060408501356001600160401b03811115611b2d57600080fd5b611b3987828801611a3e565b92505060608501356001600160401b03811115611b5557600080fd5b611b6187828801611aab565b91505092959194509250565b600080600080600060a08688031215611b8557600080fd5b611b8e86611835565b9450611b9c60208701611835565b935060408601356001600160401b03811115611bb757600080fd5b611bc388828901611a3e565b93505060608601356001600160401b03811115611bdf57600080fd5b611beb88828901611a3e565b92505060808601356001600160401b03811115611c0757600080fd5b611c1388828901611aab565b9150509295509295909350565b60008060408385031215611c3357600080fd5b82356001600160401b03811115611c4957600080fd5b8301601f81018513611c5a57600080fd5b8035611c68611a5d82611a1b565b8082825260208201915060208360051b850101925087831115611c8a57600080fd5b6020840193505b82841015611cb357611ca284611835565b825260209384019390910190611c91565b945050505060208301356001600160401b03811115611cd157600080fd5b611cdd85828601611a3e565b9150509250929050565b600081518084526020840193506020830160005b82811015611d19578151865260209586019590910190600101611cfb565b5093949350505050565b6020815260006115e16020830184611ce7565b60008060408385031215611d4957600080fd5b611d5283611835565b915060208301356001600160401b03811115611d6d57600080fd5b611cdd85828601611aab565b600080600060608486031215611d8e57600080fd5b611d9784611835565b925060208401356001600160401b03811115611db257600080fd5b611dbe86828701611a3e565b92505060408401356001600160401b03811115611dda57600080fd5b611de686828701611a3e565b9150509250925092565b60008060008060808587031215611e0657600080fd5b611e0f85611835565b9350602085013592506040850135915060608501356001600160401b03811115611b5557600080fd5b60008060408385031215611e4b57600080fd5b611e5483611835565b915060208301358015158114611e6957600080fd5b809150509250929050565b600060208284031215611e8657600080fd5b6115e182611835565b60008060408385031215611ea257600080fd5b611eab83611835565b9150611eb960208401611835565b90509250929050565b600080600080600060a08688031215611eda57600080fd5b611ee386611835565b9450611ef160208701611835565b9350604086013592506060860135915060808601356001600160401b03811115611c0757600080fd5b600080600060608486031215611f2f57600080fd5b611f3884611835565b95602085013595506040909401359392505050565b600181811c90821680611f6157607f821691505b602082108103611f8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f8211156107c657806000526020600020601f840160051c81016020851015611fc45750805b601f840160051c820191505b81811015610ba55760008155600101611fd0565b81516001600160401b03811115611ffd57611ffd6118ae565b6120118161200b8454611f4d565b84611f9d565b6020601f821160018114612045576000831561202d5750848201515b600019600385901b1c1916600184901b178455610ba5565b600084815260208120601f198516915b828110156120755787850151825560209485019460019092019101612055565b50848210156120935786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000602082840312156120b457600080fd5b5051919050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906120f5908301846119dc565b979650505050505050565b60006020828403121561211257600080fd5b81516115e18161187b565b6001600160a01b0386811682528516602082015260a06040820181905260009061214990830186611ce7565b828103606084015261215b8186611ce7565b9050828103608084015261216f81856119dc565b98975050505050505050565b6000825161218d8184602087016119b8565b9190910192915050565b8082018082111561049857634e487b7160e01b600052601160045260246000fd5b6040815260006121cb6040830185611ce7565b82810360208401526115338185611ce756fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203a064c90ddf6e2170e7357e5baef41af5fff5efbf13ffd42ce31136261de631064736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1F6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x64D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C20 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x7CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x7F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E38 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4CF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x498 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x498 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0xAD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x541 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x1F4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CF PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x602 JUMPI POP PUSH2 0x600 DUP7 DUP3 PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x645 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x655 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xBAC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x690 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x6FE SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x467 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x710 JUMPI PUSH2 0x710 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6DA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x733 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x746 DUP3 DUP3 PUSH2 0xCB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x754 PUSH2 0xD76 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x787 JUMPI POP PUSH2 0x785 DUP4 CALLER PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7BB JUMPI CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 DUP4 PUSH2 0xDBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH1 0x0 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x746 CALLER DUP4 DUP4 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x816 PUSH2 0xFC4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x83D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x859 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x8AF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x8ED PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F516D555550532F7B69647D2E6A736F6E000000000000000000 DUP2 MSTORE POP PUSH2 0xFED JUMP JUMPDEST PUSH2 0x8F6 DUP7 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x100F JUMP JUMPDEST PUSH2 0x906 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x90E PUSH2 0x100F JUMP JUMPDEST DUP4 ISZERO PUSH2 0x645 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x9C9 JUMPI POP PUSH2 0x9C7 DUP7 DUP3 PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x645 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA62 JUMPI POP PUSH2 0xA60 DUP4 CALLER PUSH2 0x95B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA6D JUMPI CALLER PUSH2 0x78E JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 DUP4 PUSH2 0x10A5 JUMP JUMPDEST CALLER PUSH2 0xAAA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4502 PUSH2 0x7C6 DUP4 DUP3 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x5DB PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0xBA5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xC93 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC87 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FF PUSH2 0xA78 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD13 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD10 SWAP2 DUP2 ADD SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH2 0x7C6 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1109 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x645 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xEDB PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x498 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x4FF DUP2 PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x65D PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x109C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1109 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0xBA5 SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 JUMPDEST PUSH2 0x1115 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xBA5 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x114E JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x1147 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1254 JUMP JUMPDEST POP POP PUSH2 0x645 JUMP JUMPDEST PUSH2 0x645 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1195 DUP3 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x11DA JUMPI PUSH2 0x7C6 DUP3 DUP3 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x221E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121B PUSH2 0x155B JUMP JUMPDEST PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F6 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1298 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x12D0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x133C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1334 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x13BC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x211D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13F4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1425 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x109C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1497 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1533 DUP6 DUP4 DUP4 PUSH2 0x1589 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0xFC4 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157D PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 DUP5 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x159E JUMPI PUSH2 0x1599 DUP3 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x62F JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21FE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 EQ PUSH2 0x1627 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x62F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x172D JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP7 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x171D SWAP1 DUP5 SWAP1 PUSH2 0x2197 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x162B JUMP JUMPDEST POP DUP4 MLOAD PUSH1 0x1 SUB PUSH2 0x17AE JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x179F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x645 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x17FD SWAP3 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x181C JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x184C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x186D DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15E1 DUP2 PUSH2 0x187B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18EC JUMPI PUSH2 0x18EC PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x190E JUMPI PUSH2 0x190E PUSH2 0x18AE JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1923 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1997 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x18F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19BB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19F4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A34 PUSH2 0x18AE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A62 PUSH2 0x1A5D DUP3 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x18C4 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x1A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1A89 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B39 DUP8 DUP3 DUP9 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B61 DUP8 DUP3 DUP9 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8E DUP7 PUSH2 0x1835 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B9C PUSH1 0x20 DUP8 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC3 DUP9 DUP3 DUP10 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEB DUP9 DUP3 DUP10 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C13 DUP9 DUP3 DUP10 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C68 PUSH2 0x1A5D DUP3 PUSH2 0x1A1B JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x1C8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1CB3 JUMPI PUSH2 0x1CA2 DUP5 PUSH2 0x1835 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C91 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D19 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CFB JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D52 DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D97 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBE DUP7 DUP3 DUP8 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0F DUP6 PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E54 DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E1 DUP3 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EAB DUP4 PUSH2 0x1835 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 PUSH1 0x20 DUP5 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE3 DUP7 PUSH2 0x1835 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EF1 PUSH1 0x20 DUP8 ADD PUSH2 0x1835 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F38 DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7C6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1FC4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FD0 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFD PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x2011 DUP2 PUSH2 0x200B DUP5 SLOAD PUSH2 0x1F4D JUMP JUMPDEST DUP5 PUSH2 0x1F9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2045 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x202D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2075 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2055 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2093 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x20F5 SWAP1 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15E1 DUP2 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2149 SWAP1 DUP4 ADD DUP7 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x215B DUP2 DUP7 PUSH2 0x1CE7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x216F DUP2 DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x218D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x19B8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x498 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21CB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CE7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1533 DUP2 DUP6 PUSH2 0x1CE7 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC88BE536D5240C274A3B1D3 LOG1 0xBE SLOAD BASEFEE 0x2F 0xD9 0xCA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C4500CD5ED15C6E XOR PUSH31 0x77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300A26469706673 PC 0x22 SLT KECCAK256 GASPRICE MOD 0x4C SWAP1 0xDD 0xF6 0xE2 OR 0xE PUSH20 0x57E5BAEF41AF5FFF5EFBF13FFD42CE31136261DE PUSH4 0x1064736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"789:1543:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:191:3;;;;;;;;;;-1:-1:-1;3298:191:3;;;;;:::i;:::-;;:::i;:::-;;;643:25:29;;;631:2;616:18;3298:191:3;;;;;;;;2386:316;;;;;;;;;;-1:-1:-1;2386:316:3;;;;;:::i;:::-;;:::i;:::-;;;1230:14:29;;1223:22;1205:41;;1193:2;1178:18;2386:316:3;1065:187:29;1326:87:28;;;;;;;;;;-1:-1:-1;1326:87:28;;;;;:::i;:::-;;:::i;:::-;;3101:162:3;;;;;;;;;;-1:-1:-1;3101:162:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1723:186:28:-;;;;;;;;;;-1:-1:-1;1723:186:28;;;;;:::i;:::-;;:::i;5049:429:3:-;;;;;;;;;;-1:-1:-1;5049:429:3;;;;;:::i;:::-;;:::i;1484:63:28:-;;;;;;;;;;;;;:::i;3646:552:3:-;;;;;;;;;;-1:-1:-1;3646:552:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;2496:145:7:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:7;;;2496:145;;965:313:4;;;;;;;;;;-1:-1:-1;965:313:4;;;;;:::i;:::-;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;1553:164:28:-;;;;;;;;;;-1:-1:-1;1553:164:28;;;;;:::i;:::-;;:::i;1419:59::-;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:0;;;10424:51:29;;10412:2;10397:18;2441:144:0;10278:203:29;4233:144:3;;;;;;;;;;-1:-1:-1;4233:144:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;1061:259:28;;;;;;;;;;-1:-1:-1;1061:259:28;;;;;:::i;:::-;;:::i;4412:216:3:-;;;;;;;;;;-1:-1:-1;4412:216:3;;;;;:::i;:::-;;:::i;4663:351::-;;;;;;;;;;-1:-1:-1;4663:351:3;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;678:281:4:-;;;;;;;;;;-1:-1:-1;678:281:4;;;;;:::i;:::-;;:::i;3298:191:3:-;3375:7;3458:15;;;-1:-1:-1;;;;;;;;;;;3458:15:3;;;;;;;;-1:-1:-1;;;;;3458:24:3;;;;;;;;;;3298:191;;;;;:::o;2386:316::-;2499:4;-1:-1:-1;;;;;;2534:41:3;;-1:-1:-1;;;2534:41:3;;:109;;-1:-1:-1;;;;;;;2591:52:3;;-1:-1:-1;;;2591:52:3;2534:109;:161;;;-1:-1:-1;;;;;;;;;;1101:40:8;;;2659:36:3;1002:146:8;1326:87:28;2334:13:0;:11;:13::i;:::-;1391:15:28::1;1399:6;1391:7;:15::i;:::-;1326:87:::0;:::o;3101:162:3:-;3250:6;3243:13;;3161;;-1:-1:-1;;;;;;;;;;;2032:22:3;3243:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:162;;;:::o;1723:186:28:-;2334:13:0;:11;:13::i;:::-;1868:34:28::1;1879:2;1883:3;1888:7;1897:4;1868:10;:34::i;:::-;1723:186:::0;;;;:::o;5049:429:3:-;966:10:6;-1:-1:-1;;;;;5286:14:3;;;;;;;:49;;;5305:30;5322:4;5328:6;5305:16;:30::i;:::-;5304:31;5286:49;5282:129;;;5358:42;;-1:-1:-1;;;5358:42:3;;-1:-1:-1;;;;;13005:32:29;;;5358:42:3;;;12987:51:29;13074:32;;13054:18;;;13047:60;12960:18;;5358:42:3;;;;;;;;5282:129;5420:51;5443:4;5449:2;5453:3;5458:6;5466:4;5420:22;:51::i;:::-;5233:245;5049:429;;;;;:::o;1484:63:28:-;2334:13:0;:11;:13::i;:::-;1530:10:28::1;:8;:10::i;:::-;1484:63::o:0;3646:552:3:-;3770:16;3821:3;:10;3802:8;:15;:29;3798:121;;3880:10;;3892:15;;3854:54;;-1:-1:-1;;;3854:54:3;;;;;13292:25:29;;;;13333:18;;;13326:34;13265:18;;3854:54:3;13118:248:29;3798:121:3;3929:30;3976:8;:15;-1:-1:-1;;;;;3962:30:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3962:30:3;;3929:63;;4008:9;4003:158;4027:8;:15;4023:1;:19;4003:158;;;17259:4:19;17250:14;;;17230:35;;;17224:42;4082:68:3;;17259:4:19;17250:14;;;17230:35;;;17224:42;3298:191:3;:::i;4082:68::-;4063:13;4077:1;4063:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;4044:3;;4003:158;;;-1:-1:-1;4178:13:3;3646:552;-1:-1:-1;;;3646:552:3:o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;965:313:4:-;-1:-1:-1;;;;;1077:23:4;;966:10:6;1077:23:4;;;;:67;;-1:-1:-1;1105:39:4;1122:7;966:10:6;4412:216:3;:::i;1105:39:4:-;1104:40;1077:67;1073:156;;;966:10:6;1196:12:4;1167:51;;-1:-1:-1;;;1167:51:4;;-1:-1:-1;;;;;13005:32:29;;;1167:51:4;;;12987::29;13074:32;;;13054:18;;;13047:60;12960:18;;1167:51:4;12813:300:29;1073:156:4;1239:32;1250:7;1259:3;1264:6;1239:10;:32::i;:::-;965:313;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;1553:164:28:-:0;2334:13:0;:11;:13::i;:::-;1678:32:28::1;1684:7;1693:2;1697:6;1705:4;1678:5;:32::i;1419:59::-:0;2334:13:0;:11;:13::i;:::-;1463:8:28::1;:6;:8::i;4233:144:3:-:0;4318:52;966:10:6;4351:8:3;4361;4318:18;:52::i;1061:259:28:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:1;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1132:41:28::1;;;;;;;;;;;;;;;;;::::0;:14:::1;:41::i;:::-;1183:28;1198:12;1183:14;:28::i;:::-;1221:24;:22;:24::i;:::-;1255;:22;:24::i;:::-;1289;:22;:24::i;:::-;5068:14:1::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;13656:50:29;;5140:14:1;;13644:2:29;13629:18;5140:14:1;;;;;;;4092:1079;;;;;1061:259:28;:::o;4412:216:3:-;-1:-1:-1;;;;;4582:29:3;;;4502:4;4582:29;;;:20;:29;;;;;;;;:39;;;;;;;;;;;;;;;4412:216::o;4663:351::-;966:10:6;-1:-1:-1;;;;;4829:14:3;;;;;;;:49;;;4848:30;4865:4;4871:6;4848:16;:30::i;:::-;4847:31;4829:49;4825:129;;;4901:42;;-1:-1:-1;;;4901:42:3;;-1:-1:-1;;;;;13005:32:29;;;4901:42:3;;;12987:51:29;13074:32;;13054:18;;;13047:60;12960:18;;4901:42:3;12813:300:29;4825:129:3;4963:44;4981:4;4987:2;4991;4995:5;5002:4;4963:17;:44::i;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;10424:51:29::0;10397:18;;3534:31:0::1;10278:203:29::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;678:281:4:-:0;-1:-1:-1;;;;;765:23:4;;966:10:6;765:23:4;;;;:67;;-1:-1:-1;793:39:4;810:7;966:10:6;4412:216:3;:::i;793:39:4:-;792:40;765:67;761:156;;;966:10:6;884:12:4;887:96:6;761:156:4;927:25;933:7;942:2;946:5;927;:25::i;2658:162:0:-;966:10:6;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:6;2763:40:0;;;10424:51:29;10397:18;;2763:40:0;10278:203:29;11390:145:3;-1:-1:-1;;;;;;;;;;;11513:6:3;:15;11522:6;11513;:15;:::i;12690:282::-;-1:-1:-1;;;;;12811:16:3;;12807:88;;12850:34;;-1:-1:-1;;;12850:34:3;;12881:1;12850:34;;;10424:51:29;10397:18;;12850:34:3;10278:203:29;12807:88:3;12904:61;12939:1;12943:2;12947:3;12952:6;12960:4;12904:26;:61::i;10123:445::-;-1:-1:-1;;;;;10316:16:3;;10312:88;;10355:34;;-1:-1:-1;;;10355:34:3;;10386:1;10355:34;;;10424:51:29;10397:18;;10355:34:3;10278:203:29;10312:88:3;-1:-1:-1;;;;;10413:18:3;;10409:88;;10454:32;;-1:-1:-1;;;10454:32:3;;10483:1;10454:32;;;10424:51:29;10397:18;;10454:32:3;10278:203:29;10409:88:3;10506:55;10533:4;10539:2;10543:3;10548:6;10556:4;10506:26;:55::i;:::-;10123:445;;;;;:::o;3478:178:7:-;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:7;;-1:-1:-1;;3595:17:7::1;::::0;;3627:22:::1;966:10:6::0;3636:12:7::1;3627:22;::::0;-1:-1:-1;;;;;10442:32:29;;;10424:51;;10412:2;10397:18;3627:22:7::1;;;;;;;3526:130;3478:178::o:0;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:12;-1:-1:-1;;;;;1519:53:12;;1441:138;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;1915:112:28;2334:13:0;:11;:13::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;10442:32:29;;6493:60:2;;;10424:51:29;10397:18;;6493:60:2;10278:203:29;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;643:25:29;;;616:18;;6292:34:2;497:177:29;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;13951:265:3;-1:-1:-1;;;;;14055:18:3;;14051:88;;14096:32;;-1:-1:-1;;;14096:32:3;;14125:1;14096:32;;;10424:51:29;10397:18;;14096:32:3;10278:203:29;14051:88:3;14148:61;14175:4;14189:1;14193:3;14198:6;14148:61;;;;;;;;;;;;:26;:61::i;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;11913:346:3:-;-1:-1:-1;;;;;12009:16:3;;12005:88;;12048:34;;-1:-1:-1;;;12048:34:3;;12079:1;12048:34;;;10424:51:29;10397:18;;12048:34:3;10278:203:29;12005:88:3;15192:4;15186:11;;15262:1;15247:17;;;15393:4;15381:17;;15374:35;;;15510:17;;;15540;;;15033:23;15577:17;;15570:35;;;15713:17;;;15700:31;;;15186:11;12191:61;-1:-1:-1;12230:2:3;15186:11;15510:17;12247:4;12191:26;:61::i;3170:176:7:-;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:7;;-1:-1:-1;;3288:16:7::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:6::0;3326:12:7::1;887:96:6::0;14435:374:3;-1:-1:-1;;;;;;;;;;;;;;;;14599:22:3;;14595:94;;14644:34;;-1:-1:-1;;;14644:34:3;;14675:1;14644:34;;;10424:51:29;10397:18;;14644:34:3;10278:203:29;14595:94:3;-1:-1:-1;;;;;14698:27:3;;;;;;;:20;;;:27;;;;;;;;:37;;;;;;;;;;;;;:48;;-1:-1:-1;;14698:48:3;;;;;;;;;;14761:41;;1205::29;;;14761::3;;1178:18:29;14761:41:3;;;;;;;14528:281;14435:374;;;:::o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2119:117:3;6929:20:1;:18;:20::i;:::-;2199:30:3::1;2224:4;2199:24;:30::i;1847:127:0:-:0;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;1163:67:5:-:0;6929:20:1;:18;:20::i;9259:463:3:-;-1:-1:-1;;;;;9381:16:3;;9377:88;;9420:34;;-1:-1:-1;;;9420:34:3;;9451:1;9420:34;;;10424:51:29;10397:18;;9420:34:3;10278:203:29;9377:88:3;-1:-1:-1;;;;;9478:18:3;;9474:88;;9519:32;;-1:-1:-1;;;9519:32:3;;9548:1;9519:32;;;10424:51:29;10397:18;;9519:32:3;10278:203:29;9474:88:3;15192:4;15186:11;;15262:1;15247:17;;;15393:4;15381:17;;15374:35;;;15510:17;;;15540;;;15033:23;15577:17;;15570:35;;;15713:17;;;15700:31;;;15186:11;9660:55;9687:4;9693:2;15186:11;15510:17;9710:4;9660:26;:55::i;:::-;9367:355;;9259:463;;;;;:::o;13266:329::-;-1:-1:-1;;;;;13345:18:3;;13341:88;;13386:32;;-1:-1:-1;;;13386:32:3;;13415:1;13386:32;;;10424:51:29;10397:18;;13386:32:3;10278:203:29;13341:88:3;15192:4;15186:11;;15262:1;15247:17;;;15393:4;15381:17;;15374:35;;;15510:17;;;15540;;;15033:23;15577:17;;15570:35;;;13527:61;;;;;;-1:-1:-1;15713:17:3;;;13527:61;;;15186:11;;15510:17;13527:61;;13554:4;;15186:11;;15510:17;;8102:700;8303:30;8311:4;8317:2;8321:3;8326:6;8303:7;:30::i;:::-;-1:-1:-1;;;;;8347:16:3;;;8343:453;;8428:10;;966::6;;8442:1:3;8428:15;8424:362;;17259:4:19;17230:35;;;17224:42;17230:35;;;17224:42;8581:72:3;8617:8;8627:4;8633:2;17224:42:19;;8648:4:3;8581:35;:72::i;:::-;8445:223;;8424:362;;;8692:79;8733:8;8743:4;8749:2;8753:3;8758:6;8766:4;8692:40;:79::i;2909:126:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:7;;;;;;;;;;;2264:344:12;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:12;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;2709:128:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:7;;;;;;;;;;;7082:141:1;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2242:110:3;6929:20:1;:18;:20::i;1980:235:0:-;6929:20:1;:18;:20::i;2101:229:28:-;2287:36;2301:4;2307:2;2311:3;2316:6;2287:13;:36::i;1006:961:17:-;-1:-1:-1;;;;;1205:14:17;;;:18;1201:760;;1243:71;;-1:-1:-1;;;1243:71:17;;-1:-1:-1;;;;;1243:38:17;;;;;:71;;1282:8;;1292:4;;1298:2;;1302:5;;1309:4;;1243:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1243:71:17;;;;;;;;-1:-1:-1;;1243:71:17;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:6;:13;1630:1;1613:18;1609:328;;1718:41;;-1:-1:-1;;;1718:41:17;;-1:-1:-1;;;;;10442:32:29;;1718:41:17;;;10424:51:29;10397:18;;1718:41:17;10278:203:29;1609:328:17;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;-1:-1:-1;;;;;;1363:55:17;;-1:-1:-1;;;1363:55:17;1359:189;;1488:41;;-1:-1:-1;;;1488:41:17;;-1:-1:-1;;;;;10442:32:29;;1488:41:17;;;10424:51:29;10397:18;;1488:41:17;10278:203:29;2523:1028:17;-1:-1:-1;;;;;2747:14:17;;;:18;2743:802;;2785:78;;-1:-1:-1;;;2785:78:17;;-1:-1:-1;;;;;2785:43:17;;;;;:78;;2829:8;;2839:4;;2845:3;;2850:6;;2858:4;;2785:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2785:78:17;;;;;;;;-1:-1:-1;;2785:78:17;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2942:60:17;;-1:-1:-1;;;2942:60:17;2938:194;;3072:41;;-1:-1:-1;;;3072:41:17;;-1:-1:-1;;;;;10442:32:29;;3072:41:17;;;10424:51:29;10397:18;;3072:41:17;10278:203:29;1671:281:12;1748:17;-1:-1:-1;;;;;1748:29:12;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:12;;-1:-1:-1;;;;;10442:32:29;;1805:47:12;;;10424:51:29;10397:18;;1805:47:12;10278:203:29;1744:119:12;-1:-1:-1;;;;;;;;;;;1872:73:12;;-1:-1:-1;;;;;;1872:73:12;-1:-1:-1;;;;;1872:73:12;;;;;;;;;;1671:281::o;3916:253:18:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:18;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:18:o;6113:122:12:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:12;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;1446:221:5:-;1979:19:7;:17;:19::i;:::-;1624:36:5::1;1638:4;1644:2;1648:3;1653:6;1624:13;:36::i;4437:582:18:-:0;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:18;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:18;;-1:-1:-1;;;;;10442:32:29;;4933:24:18;;;10424:51:29;10397:18;;4933:24:18;10278:203:29;4853:119:18;-1:-1:-1;4992:10:18;4605:408;4437:582;;;;;:::o;6179:1344:3:-;6371:13;;6357:10;;-1:-1:-1;;;;;;;;;;;2032:22:3;6357:27;6353:117;;6433:10;;6445:13;;6407:52;;-1:-1:-1;;;6407:52:3;;;;;13292:25:29;;;;13333:18;;;13326:34;13265:18;;6407:52:3;13118:248:29;6353:117:3;966:10:6;6480:16:3;6522:697;6546:3;:10;6542:1;:14;6522:697;;;17259:4:19;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;;17224:42;-1:-1:-1;;;;;6692:18:3;;;6688:424;;6730:19;6752:15;;;;;;;;;;;-1:-1:-1;;;;;6752:21:3;;;;;;;;;;6795:19;;;6791:129;;;6845:56;;-1:-1:-1;;;6845:56:3;;-1:-1:-1;;;;;18215:32:29;;6845:56:3;;;18197:51:29;18264:18;;;18257:34;;;18307:18;;;18300:34;;;18350:18;;;18343:34;;;18169:19;;6845:56:3;17966:417:29;6791:129:3;7036:11;:15;;;;;;;;;;;-1:-1:-1;;;;;7036:21:3;;;;;;;;;7060:19;;;;7036:43;;6688:424;-1:-1:-1;;;;;7130:16:3;;;7126:83;;7166:11;:15;;;;;;;;;;;-1:-1:-1;;;;;7166:19:3;;;;;;;;;:28;;7189:5;;7166:11;:28;;7189:5;;7166:28;:::i;:::-;;;;-1:-1:-1;;7126:83:3;-1:-1:-1;;6558:3:3;;6522:697;;;;7233:3;:10;7247:1;7233:15;7229:288;;17259:4:19;17230:35;;17224:42;7264:10:3;;17259:4:19;17230:35;;17224:42;7264:38:3;;-1:-1:-1;7410:2:3;-1:-1:-1;;;;;7379:45:3;7404:4;-1:-1:-1;;;;;7379:45:3;7394:8;-1:-1:-1;;;;;7379:45:3;;7414:2;7418:5;7379:45;;;;;;13292:25:29;;;13348:2;13333:18;;13326:34;13280:2;13265:18;;13118:248;7379:45:3;;;;;;;;7250:185;;7229:288;;;7490:2;-1:-1:-1;;;;;7460:46:3;7484:4;-1:-1:-1;;;;;7460:46:3;7474:8;-1:-1:-1;;;;;7460:46:3;;7494:3;7499:6;7460:46;;;;;;;:::i;:::-;;;;;;;;6286:1237;;6179:1344;;;;:::o;5559:434:18:-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:18;;;;;;;;;;;14:173:29;82:20;;-1:-1:-1;;;;;131:31:29;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;458:2;443:18;;;;430:32;;-1:-1:-1;;;192:300:29:o;679:131::-;-1:-1:-1;;;;;;753:32:29;;743:43;;733:71;;800:1;797;790:12;815:245;873:6;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;981:9;968:23;1000:30;1024:5;1000:30;:::i;1257:127::-;1318:10;1313:3;1309:20;1306:1;1299:31;1349:4;1346:1;1339:15;1373:4;1370:1;1363:15;1389:275;1460:2;1454:9;1525:2;1506:13;;-1:-1:-1;;1502:27:29;1490:40;;-1:-1:-1;;;;;1545:34:29;;1581:22;;;1542:62;1539:88;;;1607:18;;:::i;:::-;1643:2;1636:22;1389:275;;-1:-1:-1;1389:275:29:o;1669:450::-;1734:5;1766:1;-1:-1:-1;;;;;1782:6:29;1779:30;1776:56;;;1812:18;;:::i;:::-;-1:-1:-1;1878:2:29;1857:15;;-1:-1:-1;;1853:29:29;1884:4;1849:40;1907:21;1849:40;1907:21;:::i;:::-;1898:30;;;1951:6;1944:5;1937:21;1991:3;1982:6;1977:3;1973:16;1970:25;1967:45;;;2008:1;2005;1998:12;1967:45;2057:6;2052:3;2045:4;2038:5;2034:16;2021:43;2111:1;2104:4;2095:6;2088:5;2084:18;2080:29;2073:40;1669:450;;;;;:::o;2124:451::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2302:9;2289:23;-1:-1:-1;;;;;2327:6:29;2324:30;2321:50;;;2367:1;2364;2357:12;2321:50;2390:22;;2443:4;2435:13;;2431:27;-1:-1:-1;2421:55:29;;2472:1;2469;2462:12;2421:55;2495:74;2561:7;2556:2;2543:16;2538:2;2534;2530:11;2495:74;:::i;:::-;2485:84;2124:451;-1:-1:-1;;;;2124:451:29:o;2580:226::-;2639:6;2692:2;2680:9;2671:7;2667:23;2663:32;2660:52;;;2708:1;2705;2698:12;2660:52;-1:-1:-1;2753:23:29;;2580:226;-1:-1:-1;2580:226:29:o;2811:250::-;2896:1;2906:113;2920:6;2917:1;2914:13;2906:113;;;2996:11;;;2990:18;2977:11;;;2970:39;2942:2;2935:10;2906:113;;;-1:-1:-1;;3053:1:29;3035:16;;3028:27;2811:250::o;3066:271::-;3108:3;3146:5;3140:12;3173:6;3168:3;3161:19;3189:76;3258:6;3251:4;3246:3;3242:14;3235:4;3228:5;3224:16;3189:76;:::i;:::-;3319:2;3298:15;-1:-1:-1;;3294:29:29;3285:39;;;;3326:4;3281:50;;3066:271;-1:-1:-1;;3066:271:29:o;3342:220::-;3491:2;3480:9;3473:21;3454:4;3511:45;3552:2;3541:9;3537:18;3529:6;3511:45;:::i;3567:183::-;3627:4;-1:-1:-1;;;;;3652:6:29;3649:30;3646:56;;;3682:18;;:::i;:::-;-1:-1:-1;3727:1:29;3723:14;3739:4;3719:25;;3567:183::o;3755:723::-;3809:5;3862:3;3855:4;3847:6;3843:17;3839:27;3829:55;;3880:1;3877;3870:12;3829:55;3920:6;3907:20;3947:64;3963:47;4003:6;3963:47;:::i;:::-;3947:64;:::i;:::-;4035:3;4059:6;4054:3;4047:19;4091:4;4086:3;4082:14;4075:21;;4152:4;4142:6;4139:1;4135:14;4127:6;4123:27;4119:38;4105:52;;4180:3;4172:6;4169:15;4166:35;;;4197:1;4194;4187:12;4166:35;4233:4;4225:6;4221:17;4247:200;4263:6;4258:3;4255:15;4247:200;;;4355:17;;4385:18;;4432:4;4423:14;;;;4280;4247:200;;;-1:-1:-1;4465:7:29;3755:723;-1:-1:-1;;;;;3755:723:29:o;4483:221::-;4525:5;4578:3;4571:4;4563:6;4559:17;4555:27;4545:55;;4596:1;4593;4586:12;4545:55;4618:80;4694:3;4685:6;4672:20;4665:4;4657:6;4653:17;4618:80;:::i;4709:879::-;4854:6;4862;4870;4878;4931:3;4919:9;4910:7;4906:23;4902:33;4899:53;;;4948:1;4945;4938:12;4899:53;4971:29;4990:9;4971:29;:::i;:::-;4961:39;;5051:2;5040:9;5036:18;5023:32;-1:-1:-1;;;;;5070:6:29;5067:30;5064:50;;;5110:1;5107;5100:12;5064:50;5133:61;5186:7;5177:6;5166:9;5162:22;5133:61;:::i;:::-;5123:71;;;5247:2;5236:9;5232:18;5219:32;-1:-1:-1;;;;;5266:8:29;5263:32;5260:52;;;5308:1;5305;5298:12;5260:52;5331:63;5386:7;5375:8;5364:9;5360:24;5331:63;:::i;:::-;5321:73;;;5447:2;5436:9;5432:18;5419:32;-1:-1:-1;;;;;5466:8:29;5463:32;5460:52;;;5508:1;5505;5498:12;5460:52;5531:51;5574:7;5563:8;5552:9;5548:24;5531:51;:::i;:::-;5521:61;;;4709:879;;;;;;;:::o;5593:954::-;5747:6;5755;5763;5771;5779;5832:3;5820:9;5811:7;5807:23;5803:33;5800:53;;;5849:1;5846;5839:12;5800:53;5872:29;5891:9;5872:29;:::i;:::-;5862:39;;5920:38;5954:2;5943:9;5939:18;5920:38;:::i;:::-;5910:48;;6009:2;5998:9;5994:18;5981:32;-1:-1:-1;;;;;6028:6:29;6025:30;6022:50;;;6068:1;6065;6058:12;6022:50;6091:61;6144:7;6135:6;6124:9;6120:22;6091:61;:::i;:::-;6081:71;;;6205:2;6194:9;6190:18;6177:32;-1:-1:-1;;;;;6224:8:29;6221:32;6218:52;;;6266:1;6263;6256:12;6218:52;6289:63;6344:7;6333:8;6322:9;6318:24;6289:63;:::i;:::-;6279:73;;;6405:3;6394:9;6390:19;6377:33;-1:-1:-1;;;;;6425:8:29;6422:32;6419:52;;;6467:1;6464;6457:12;6419:52;6490:51;6533:7;6522:8;6511:9;6507:24;6490:51;:::i;:::-;6480:61;;;5593:954;;;;;;;;:::o;6552:1146::-;6670:6;6678;6731:2;6719:9;6710:7;6706:23;6702:32;6699:52;;;6747:1;6744;6737:12;6699:52;6787:9;6774:23;-1:-1:-1;;;;;6812:6:29;6809:30;6806:50;;;6852:1;6849;6842:12;6806:50;6875:22;;6928:4;6920:13;;6916:27;-1:-1:-1;6906:55:29;;6957:1;6954;6947:12;6906:55;6997:2;6984:16;7020:64;7036:47;7076:6;7036:47;:::i;7020:64::-;7106:3;7130:6;7125:3;7118:19;7162:4;7157:3;7153:14;7146:21;;7219:4;7209:6;7206:1;7202:14;7198:2;7194:23;7190:34;7176:48;;7247:7;7239:6;7236:19;7233:39;;;7268:1;7265;7258:12;7233:39;7300:4;7296:2;7292:13;7281:24;;7314:152;7330:6;7325:3;7322:15;7314:152;;;7398:23;7417:3;7398:23;:::i;:::-;7386:36;;7451:4;7347:14;;;;7442;;;;7314:152;;;7485:5;-1:-1:-1;;;;7543:4:29;7528:20;;7515:34;-1:-1:-1;;;;;7561:32:29;;7558:52;;;7606:1;7603;7596:12;7558:52;7629:63;7684:7;7673:8;7662:9;7658:24;7629:63;:::i;:::-;7619:73;;;6552:1146;;;;;:::o;7703:420::-;7756:3;7794:5;7788:12;7821:6;7816:3;7809:19;7853:4;7848:3;7844:14;7837:21;;7892:4;7885:5;7881:16;7915:1;7925:173;7939:6;7936:1;7933:13;7925:173;;;8000:13;;7988:26;;8043:4;8034:14;;;;8071:17;;;;7961:1;7954:9;7925:173;;;-1:-1:-1;8114:3:29;;7703:420;-1:-1:-1;;;;7703:420:29:o;8128:261::-;8307:2;8296:9;8289:21;8270:4;8327:56;8379:2;8368:9;8364:18;8356:6;8327:56;:::i;8394:394::-;8471:6;8479;8532:2;8520:9;8511:7;8507:23;8503:32;8500:52;;;8548:1;8545;8538:12;8500:52;8571:29;8590:9;8571:29;:::i;:::-;8561:39;;8651:2;8640:9;8636:18;8623:32;-1:-1:-1;;;;;8670:6:29;8667:30;8664:50;;;8710:1;8707;8700:12;8664:50;8733:49;8774:7;8765:6;8754:9;8750:22;8733:49;:::i;8975:664::-;9102:6;9110;9118;9171:2;9159:9;9150:7;9146:23;9142:32;9139:52;;;9187:1;9184;9177:12;9139:52;9210:29;9229:9;9210:29;:::i;:::-;9200:39;;9290:2;9279:9;9275:18;9262:32;-1:-1:-1;;;;;9309:6:29;9306:30;9303:50;;;9349:1;9346;9339:12;9303:50;9372:61;9425:7;9416:6;9405:9;9401:22;9372:61;:::i;:::-;9362:71;;;9486:2;9475:9;9471:18;9458:32;-1:-1:-1;;;;;9505:8:29;9502:32;9499:52;;;9547:1;9544;9537:12;9499:52;9570:63;9625:7;9614:8;9603:9;9599:24;9570:63;:::i;:::-;9560:73;;;8975:664;;;;;:::o;9644:629::-;9739:6;9747;9755;9763;9816:3;9804:9;9795:7;9791:23;9787:33;9784:53;;;9833:1;9830;9823:12;9784:53;9856:29;9875:9;9856:29;:::i;:::-;9846:39;-1:-1:-1;9954:2:29;9939:18;;9926:32;;-1:-1:-1;10055:2:29;10040:18;;10027:32;;-1:-1:-1;10136:2:29;10121:18;;10108:32;-1:-1:-1;;;;;10152:30:29;;10149:50;;;10195:1;10192;10185:12;10486:347;10551:6;10559;10612:2;10600:9;10591:7;10587:23;10583:32;10580:52;;;10628:1;10625;10618:12;10580:52;10651:29;10670:9;10651:29;:::i;:::-;10641:39;;10730:2;10719:9;10715:18;10702:32;10777:5;10770:13;10763:21;10756:5;10753:32;10743:60;;10799:1;10796;10789:12;10743:60;10822:5;10812:15;;;10486:347;;;;;:::o;10838:186::-;10897:6;10950:2;10938:9;10929:7;10925:23;10921:32;10918:52;;;10966:1;10963;10956:12;10918:52;10989:29;11008:9;10989:29;:::i;11029:260::-;11097:6;11105;11158:2;11146:9;11137:7;11133:23;11129:32;11126:52;;;11174:1;11171;11164:12;11126:52;11197:29;11216:9;11197:29;:::i;:::-;11187:39;;11245:38;11279:2;11268:9;11264:18;11245:38;:::i;:::-;11235:48;;11029:260;;;;;:::o;11294:704::-;11398:6;11406;11414;11422;11430;11483:3;11471:9;11462:7;11458:23;11454:33;11451:53;;;11500:1;11497;11490:12;11451:53;11523:29;11542:9;11523:29;:::i;:::-;11513:39;;11571:38;11605:2;11594:9;11590:18;11571:38;:::i;:::-;11561:48;-1:-1:-1;11678:2:29;11663:18;;11650:32;;-1:-1:-1;11779:2:29;11764:18;;11751:32;;-1:-1:-1;11860:3:29;11845:19;;11832:33;-1:-1:-1;;;;;11877:30:29;;11874:50;;;11920:1;11917;11910:12;12003:420;12080:6;12088;12096;12149:2;12137:9;12128:7;12124:23;12120:32;12117:52;;;12165:1;12162;12155:12;12117:52;12188:29;12207:9;12188:29;:::i;:::-;12178:39;12286:2;12271:18;;12258:32;;-1:-1:-1;12387:2:29;12372:18;;;12359:32;;12003:420;-1:-1:-1;;;12003:420:29:o;12428:380::-;12507:1;12503:12;;;;12550;;;12571:61;;12625:4;12617:6;12613:17;12603:27;;12571:61;12678:2;12670:6;12667:14;12647:18;12644:38;12641:161;;12724:10;12719:3;12715:20;12712:1;12705:31;12759:4;12756:1;12749:15;12787:4;12784:1;12777:15;12641:161;;12428:380;;;:::o;13371:127::-;13432:10;13427:3;13423:20;13420:1;13413:31;13463:4;13460:1;13453:15;13487:4;13484:1;13477:15;13843:518;13945:2;13940:3;13937:11;13934:421;;;13981:5;13978:1;13971:16;14025:4;14022:1;14012:18;14095:2;14083:10;14079:19;14076:1;14072:27;14066:4;14062:38;14131:4;14119:10;14116:20;14113:47;;;-1:-1:-1;14154:4:29;14113:47;14209:2;14204:3;14200:12;14197:1;14193:20;14187:4;14183:31;14173:41;;14264:81;14282:2;14275:5;14272:13;14264:81;;;14341:1;14327:16;;14308:1;14297:13;14264:81;;14537:1299;14663:3;14657:10;-1:-1:-1;;;;;14682:6:29;14679:30;14676:56;;;14712:18;;:::i;:::-;14741:97;14831:6;14791:38;14823:4;14817:11;14791:38;:::i;:::-;14785:4;14741:97;:::i;:::-;14887:4;14918:2;14907:14;;14935:1;14930:649;;;;15623:1;15640:6;15637:89;;;-1:-1:-1;15692:19:29;;;15686:26;15637:89;-1:-1:-1;;14494:1:29;14490:11;;;14486:24;14482:29;14472:40;14518:1;14514:11;;;14469:57;15739:81;;14900:930;;14930:649;13790:1;13783:14;;;13827:4;13814:18;;-1:-1:-1;;14966:20:29;;;15084:222;15098:7;15095:1;15092:14;15084:222;;;15180:19;;;15174:26;15159:42;;15287:4;15272:20;;;;15240:1;15228:14;;;;15114:12;15084:222;;;15088:3;15334:6;15325:7;15322:19;15319:201;;;15395:19;;;15389:26;-1:-1:-1;;15478:1:29;15474:14;;;15490:3;15470:24;15466:37;15462:42;15447:58;15432:74;;15319:201;-1:-1:-1;;;;15566:1:29;15550:14;;;15546:22;15533:36;;-1:-1:-1;14537:1299:29:o;15841:184::-;15911:6;15964:2;15952:9;15943:7;15939:23;15935:32;15932:52;;;15980:1;15977;15970:12;15932:52;-1:-1:-1;16003:16:29;;15841:184;-1:-1:-1;15841:184:29:o;16030:557::-;-1:-1:-1;;;;;16289:32:29;;;16271:51;;16358:32;;16353:2;16338:18;;16331:60;16422:2;16407:18;;16400:34;;;16465:2;16450:18;;16443:34;;;16309:3;16508;16493:19;;16486:32;;;-1:-1:-1;;16535:46:29;;16561:19;;16553:6;16535:46;:::i;:::-;16527:54;16030:557;-1:-1:-1;;;;;;;16030:557:29:o;16592:249::-;16661:6;16714:2;16702:9;16693:7;16689:23;16685:32;16682:52;;;16730:1;16727;16720:12;16682:52;16762:9;16756:16;16781:30;16805:5;16781:30;:::i;16846:823::-;-1:-1:-1;;;;;17205:32:29;;;17187:51;;17274:32;;17269:2;17254:18;;17247:60;17225:3;17338:2;17323:18;;17316:31;;;-1:-1:-1;;17370:57:29;;17407:19;;17399:6;17370:57;:::i;:::-;17475:9;17467:6;17463:22;17458:2;17447:9;17443:18;17436:50;17509:44;17546:6;17538;17509:44;:::i;:::-;17495:58;;17602:9;17594:6;17590:22;17584:3;17573:9;17569:19;17562:51;17630:33;17656:6;17648;17630:33;:::i;:::-;17622:41;16846:823;-1:-1:-1;;;;;;;;16846:823:29:o;17674:287::-;17803:3;17841:6;17835:13;17857:66;17916:6;17911:3;17904:4;17896:6;17892:17;17857:66;:::i;:::-;17939:16;;;;;17674:287;-1:-1:-1;;17674:287:29:o;18388:222::-;18453:9;;;18474:10;;;18471:133;;;18526:10;18521:3;18517:20;18514:1;18507:31;18561:4;18558:1;18551:15;18589:4;18586:1;18579:15;18615:465;18872:2;18861:9;18854:21;18835:4;18898:56;18950:2;18939:9;18935:18;18927:6;18898:56;:::i;:::-;19002:9;18994:6;18990:22;18985:2;18974:9;18970:18;18963:50;19030:44;19067:6;19059;19030:44;:::i"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","initialize(address)":"c4d66de8","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UUPSMultiToken.sol\":\"UUPSMultiToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol\":{\"keccak256\":\"0x235663392e8add928a0bfa535d22c7304eb81703f6c73e755f3145120d47319e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10efbeed0e0892488f3499a444f4fdce06f25072807a924d4afd9a482cd4aab8\",\"dweb:/ipfs/QmNhC6ruQc7q5yBtH2f4h4HiFRDij1pmYZady4CGEWJ8WP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol\":{\"keccak256\":\"0xdb9e44a214d97544cf0d65db9794a7d2bf67285cbfd14ed296665f7b13182ccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2879c15dd81f2fb7d630f1bb8e6e0e86f84b337c871d49f7636ef343392fa362\",\"dweb:/ipfs/QmYzxzLibEbmbdMqXsxdjwXn6gdGrKdLFJZLkCoDQTNjwt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/UUPSMultiToken.sol\":{\"keccak256\":\"0x83faf97083fba1974ead34886996bb752e1fe9871f8f394298c065f549918d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad66c433f2f162e3cccd8b17b8134dc682ed87de243f9d31e19183e36478df6f\",\"dweb:/ipfs/QmXeqUmzcE4inSzvi11v6kDannGHgaRyLPq8hhLR3nD5vB\"]}},\"version\":1}"}}}}}