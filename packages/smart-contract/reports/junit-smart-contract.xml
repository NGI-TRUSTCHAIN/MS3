<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="86" failures="0" errors="0" time="509.8010806">
    <testsuite name="tests/00_Registry.test.ts" timestamp="2025-09-04T15:19:08.617Z" hostname="GA" tests="37" failures="0" errors="0" skipped="0" time="3.8372786">
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; should generate correct requirements from OpenZeppelin JOI schema" time="0.0067344">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for openZeppelin
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; should handle compiler configuration requirements" time="0.0044657">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for openZeppelin
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; should handle JOI validation rules correctly" time="0.0069182">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for contract-test
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;contractLanguage&apos;[39m,
  [32m&apos;compilerVersion&apos;[39m,
  [32m&apos;optimizerSettings&apos;[39m,
  [32m&apos;contractTemplates&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 4 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractLanguage
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    only: [33mtrue[39m,
    presence: [32m&apos;required&apos;[39m,
    description: [32m&apos;Supported smart contract language&apos;[39m
  },
  allow: [ [32m&apos;solidity&apos;[39m, [32m&apos;cairo&apos;[39m, [32m&apos;vyper&apos;[39m ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractLanguage: type=string, required=true, message=&quot;Supported smart contract language&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerVersion
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Compiler version in semver format&apos;[39m
  },
  rules: [ { name: [32m&apos;pattern&apos;[39m, args: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerVersion: type=string, required=false, message=&quot;Compiler version in semver format&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: optimizerSettings
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Compiler optimization configuration&apos;[39m
  },
  keys: {
    enabled: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    runs: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m, rules: [36m[Array][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field optimizerSettings: type=object, required=false, message=&quot;Compiler optimization configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: optimizerSettings
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractTemplates
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: {
    presence: [32m&apos;required&apos;[39m,
    description: [32m&apos;Array of contract templates to generate&apos;[39m
  },
  rules: [ { name: [32m&apos;min&apos;[39m, args: [36m[Object][39m } ],
  items: [ { type: [32m&apos;object&apos;[39m, keys: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractTemplates: type=array, required=true, message=&quot;Array of contract templates to generate&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 6 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; should fallback gracefully for invalid schemas" time="0.0008463">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for invalid

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for invalid interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for invalid

            </system-err>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; Smart Contract JOI Schema Edge Cases &gt; should handle complex contract configuration schemas" time="0.0030136">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for complex-contract
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contracts&apos;[39m, [32m&apos;deployment&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contracts
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m },
  rules: [ { name: [32m&apos;min&apos;[39m, args: [36m[Object][39m } ],
  items: [ { type: [32m&apos;object&apos;[39m, keys: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contracts: type=array, required=true, message=&quot;contracts is required and must be of type: array&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: deployment
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m },
  keys: {
    network: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    gasSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m, keys: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field deployment: type=object, required=false, message=&quot;deployment is optional and must be of type: object&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: deployment
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 6 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; Smart Contract JOI Schema Edge Cases &gt; should handle conditional schema based on contract type" time="0.0039507">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for conditional-contract
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractType&apos;[39m, [32m&apos;tokenConfig&apos;[39m, [32m&apos;nftConfig&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 3 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractType
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { only: [33mtrue[39m, presence: [32m&apos;required&apos;[39m },
  allow: [ [32m&apos;token&apos;[39m, [32m&apos;nft&apos;[39m, [32m&apos;defi&apos;[39m ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractType: type=string, required=true, message=&quot;contractType is required and must be of type: string&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: tokenConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;any&apos;[39m,
  whens: [
    {
      ref: [36m[Object][39m,
      is: [36m[Object][39m,
      then: [36m[Object][39m,
      otherwise: [36m[Object][39m
    }
  ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field tokenConfig: type=any, required=true, message=&quot;tokenConfig is required and must be of type: any&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: nftConfig
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;any&apos;[39m,
  whens: [
    {
      ref: [36m[Object][39m,
      is: [36m[Object][39m,
      then: [36m[Object][39m,
      otherwise: [36m[Object][39m
    }
  ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field nftConfig: type=any, required=true, message=&quot;nftConfig is required and must be of type: any&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 3 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; Smart Contract JOI Schema Edge Cases &gt; should handle array schemas with complex validation" time="0.0024655">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for array-contract
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;constructorArgs&apos;[39m, [32m&apos;interfaces&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: constructorArgs
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m },
  rules: [ { name: [32m&apos;min&apos;[39m, args: [36m[Object][39m }, { name: [32m&apos;max&apos;[39m, args: [36m[Object][39m } ],
  items: [ { type: [32m&apos;object&apos;[39m, keys: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field constructorArgs: type=array, required=false, message=&quot;constructorArgs is optional and must be of type: array&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: interfaces
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m },
  rules: [ { name: [32m&apos;unique&apos;[39m } ],
  items: [ { type: [32m&apos;string&apos;[39m, rules: [36m[Array][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field interfaces: type=array, required=false, message=&quot;interfaces is optional and must be of type: array&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; JOI Schema Requirements Generation &gt; Smart Contract JOI Schema Edge Cases &gt; should handle malformed contract schemas without crashing" time="0.0021586">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-0
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-1
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-2
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-3
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-4

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-0 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-0
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-1 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-1
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-2 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-2
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-3 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-3
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-4 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-4

            </system-err>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Environment Generation &gt; should generate environment requirements for smart contract adapters" time="0.001995">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Environment Generation &gt; should handle dual-environment contract adapters" time="0.0005422">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Environment Generation &gt; Smart Contract Environment Validation Edge Cases &gt; should handle contract-specific environment constraints" time="0.0007376">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Environment Generation &gt; Smart Contract Environment Validation Edge Cases &gt; should validate contract security notes deduplication" time="0.0002265">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Features Generation &gt; should expose declared capabilities and expected contract methods (metadata + prototype checks)" time="0.0008016">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Features Generation &gt; should validate contract-specific methods are async where expected and have sensible params" time="0.0005579">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Features Generation &gt; Smart Contract Feature Extraction Edge Cases &gt; should detect async contract methods via prototype inspection" time="0.0001508">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Features Generation &gt; Smart Contract Feature Extraction Edge Cases &gt; should handle complex contract method signatures using prototype checks" time="0.000209">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Features Generation &gt; Smart Contract Feature Extraction Edge Cases &gt; should gracefully handle malformed adapter classes during inspection" time="0.0009446">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; should have registered openZeppelin adapter with generated data" time="0.0002931">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; should have static compatibility matrix with wallet compatibility declarations" time="0.00038">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; should have generated contract-specific compatibility matrices" time="0.0012519">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; Smart Contract Registry Edge Cases &gt; should handle contract adapter lookup with invalid parameters" time="0.0003988">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; Smart Contract Registry Edge Cases &gt; should handle contract compatibility matrix edge cases" time="0.000242">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Registry Integration &gt; Smart Contract Registry Edge Cases &gt; should validate contract registry module registration completeness" time="0.0002972">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Smart Contract JOI Schema Validation Features &gt; should demonstrate JOI schema benefits for contract configurations" time="0.0046432">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for complex-contract-adapter
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;contractName&apos;[39m,
  [32m&apos;solcVersion&apos;[39m,
  [32m&apos;gasLimit&apos;[39m,
  [32m&apos;constructorArgs&apos;[39m,
  [32m&apos;features&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 5 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;required&apos;[39m,
    description: [32m&apos;Contract name must be alphanumeric, 3-50 characters&apos;[39m
  },
  rules: [
    { name: [32m&apos;alphanum&apos;[39m },
    { name: [32m&apos;min&apos;[39m, args: [36m[Object][39m },
    { name: [32m&apos;max&apos;[39m, args: [36m[Object][39m }
  ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name must be alphanumeric, 3-50 characters&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [32m&apos;0.8.22&apos;[39m,
    description: [32m&apos;Solidity compiler version in semver format&apos;[39m
  },
  rules: [ { name: [32m&apos;pattern&apos;[39m, args: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version in semver format&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: gasLimit
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;number&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33m3000000[39m,
    description: [32m&apos;Gas limit for deployment (21k-30M)&apos;[39m
  },
  rules: [
    { name: [32m&apos;integer&apos;[39m },
    { name: [32m&apos;min&apos;[39m, args: [36m[Object][39m },
    { name: [32m&apos;max&apos;[39m, args: [36m[Object][39m }
  ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field gasLimit: type=number, required=false, message=&quot;Gas limit for deployment (21k-30M)&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: constructorArgs
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Constructor arguments (max 10)&apos;[39m
  },
  rules: [ { name: [32m&apos;max&apos;[39m, args: [36m[Object][39m } ],
  items: [ { type: [32m&apos;object&apos;[39m, keys: [36m[Object][39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field constructorArgs: type=array, required=false, message=&quot;Constructor arguments (max 10)&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Optional contract feature configuration&apos;[39m
  },
  keys: {
    mintable: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    burnable: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    pausable: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    upgradeable: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m, allow: [36m[Array][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=object, required=false, message=&quot;Optional contract feature configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: features
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 9 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Error Handling and Edge Cases &gt; should handle malformed contract JOI schemas gracefully" time="0.0010698">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-contract-0
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-contract-1
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-contract-2
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-contract-3
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for malformed-contract-4

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-contract-0 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-contract-0
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-contract-1 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-contract-1
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-contract-2 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-contract-2
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-contract-3 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-contract-3
🤖 [MS3-PKG] [WARN] [getRequirements] No requirements found for malformed-contract-4 interface - using fallback.
🤖 [MS3-PKG] [WARN] [getRequirements] Using fallback requirements for malformed-contract-4

            </system-err>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Error Handling and Edge Cases &gt; should provide meaningful error messages for contract validations" time="0.0015024">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for validation-test
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractType&apos;[39m, [32m&apos;deploymentNetwork&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractType
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    only: [33mtrue[39m,
    presence: [32m&apos;required&apos;[39m,
    description: [32m&apos;Must be a supported contract standard&apos;[39m
  },
  allow: [ [32m&apos;erc20&apos;[39m, [32m&apos;erc721&apos;[39m, [32m&apos;erc1155&apos;[39m ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractType: type=string, required=true, message=&quot;Must be a supported contract standard&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: deploymentNetwork
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    only: [33mtrue[39m,
    presence: [32m&apos;required&apos;[39m,
    description: [32m&apos;Must be a supported network&apos;[39m
  },
  allow: [ [32m&apos;mainnet&apos;[39m, [32m&apos;goerli&apos;[39m, [32m&apos;sepolia&apos;[39m, [32m&apos;holesky&apos;[39m, [32m&apos;polygon&apos;[39m ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field deploymentNetwork: type=string, required=true, message=&quot;Must be a supported network&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Error Handling and Edge Cases &gt; Contract Error Recovery and Robustness &gt; should handle memory constraints for large contract schemas" time="0.4807221">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for large-contract-schema
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;field0&apos;[39m,  [32m&apos;field1&apos;[39m,  [32m&apos;field2&apos;[39m,  [32m&apos;field3&apos;[39m,  [32m&apos;field4&apos;[39m,  [32m&apos;field5&apos;[39m,
  [32m&apos;field6&apos;[39m,  [32m&apos;field7&apos;[39m,  [32m&apos;field8&apos;[39m,  [32m&apos;field9&apos;[39m,  [32m&apos;field10&apos;[39m, [32m&apos;field11&apos;[39m,
  [32m&apos;field12&apos;[39m, [32m&apos;field13&apos;[39m, [32m&apos;field14&apos;[39m, [32m&apos;field15&apos;[39m, [32m&apos;field16&apos;[39m, [32m&apos;field17&apos;[39m,
  [32m&apos;field18&apos;[39m, [32m&apos;field19&apos;[39m, [32m&apos;field20&apos;[39m, [32m&apos;field21&apos;[39m, [32m&apos;field22&apos;[39m, [32m&apos;field23&apos;[39m,
  [32m&apos;field24&apos;[39m, [32m&apos;field25&apos;[39m, [32m&apos;field26&apos;[39m, [32m&apos;field27&apos;[39m, [32m&apos;field28&apos;[39m, [32m&apos;field29&apos;[39m,
  [32m&apos;field30&apos;[39m, [32m&apos;field31&apos;[39m, [32m&apos;field32&apos;[39m, [32m&apos;field33&apos;[39m, [32m&apos;field34&apos;[39m, [32m&apos;field35&apos;[39m,
  [32m&apos;field36&apos;[39m, [32m&apos;field37&apos;[39m, [32m&apos;field38&apos;[39m, [32m&apos;field39&apos;[39m, [32m&apos;field40&apos;[39m, [32m&apos;field41&apos;[39m,
  [32m&apos;field42&apos;[39m, [32m&apos;field43&apos;[39m, [32m&apos;field44&apos;[39m, [32m&apos;field45&apos;[39m, [32m&apos;field46&apos;[39m, [32m&apos;field47&apos;[39m,
  [32m&apos;field48&apos;[39m, [32m&apos;field49&apos;[39m, [32m&apos;field50&apos;[39m, [32m&apos;field51&apos;[39m, [32m&apos;field52&apos;[39m, [32m&apos;field53&apos;[39m,
  [32m&apos;field54&apos;[39m, [32m&apos;field55&apos;[39m, [32m&apos;field56&apos;[39m, [32m&apos;field57&apos;[39m, [32m&apos;field58&apos;[39m, [32m&apos;field59&apos;[39m,
  [32m&apos;field60&apos;[39m, [32m&apos;field61&apos;[39m, [32m&apos;field62&apos;[39m, [32m&apos;field63&apos;[39m, [32m&apos;field64&apos;[39m, [32m&apos;field65&apos;[39m,
  [32m&apos;field66&apos;[39m, [32m&apos;field67&apos;[39m, [32m&apos;field68&apos;[39m, [32m&apos;field69&apos;[39m, [32m&apos;field70&apos;[39m, [32m&apos;field71&apos;[39m,
  [32m&apos;field72&apos;[39m, [32m&apos;field73&apos;[39m, [32m&apos;field74&apos;[39m, [32m&apos;field75&apos;[39m, [32m&apos;field76&apos;[39m, [32m&apos;field77&apos;[39m,
  [32m&apos;field78&apos;[39m, [32m&apos;field79&apos;[39m, [32m&apos;field80&apos;[39m, [32m&apos;field81&apos;[39m, [32m&apos;field82&apos;[39m, [32m&apos;field83&apos;[39m,
  [32m&apos;field84&apos;[39m, [32m&apos;field85&apos;[39m, [32m&apos;field86&apos;[39m, [32m&apos;field87&apos;[39m, [32m&apos;field88&apos;[39m, [32m&apos;field89&apos;[39m,
  [32m&apos;field90&apos;[39m, [32m&apos;field91&apos;[39m, [32m&apos;field92&apos;[39m, [32m&apos;field93&apos;[39m, [32m&apos;field94&apos;[39m, [32m&apos;field95&apos;[39m,
  [32m&apos;field96&apos;[39m, [32m&apos;field97&apos;[39m, [32m&apos;field98&apos;[39m, [32m&apos;field99&apos;[39m,
  ... 900 more items
]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 1000 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field0
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 0 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field0: type=string, required=false, message=&quot;Field 0 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field1
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 1 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field1: type=string, required=false, message=&quot;Field 1 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field2
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 2 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field2: type=string, required=false, message=&quot;Field 2 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field3
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 3 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field3: type=string, required=false, message=&quot;Field 3 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field4
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 4 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field4: type=string, required=false, message=&quot;Field 4 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field5
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 5 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field5: type=string, required=false, message=&quot;Field 5 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field6
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 6 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field6: type=string, required=false, message=&quot;Field 6 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field7
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 7 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field7: type=string, required=false, message=&quot;Field 7 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field8
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 8 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field8: type=string, required=false, message=&quot;Field 8 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field9
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 9 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field9: type=string, required=false, message=&quot;Field 9 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field10
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 10 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field10: type=string, required=false, message=&quot;Field 10 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field11
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 11 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field11: type=string, required=false, message=&quot;Field 11 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field12
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 12 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field12: type=string, required=false, message=&quot;Field 12 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field13
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 13 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field13: type=string, required=false, message=&quot;Field 13 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field14
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 14 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field14: type=string, required=false, message=&quot;Field 14 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field15
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 15 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field15: type=string, required=false, message=&quot;Field 15 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field16
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 16 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field16: type=string, required=false, message=&quot;Field 16 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field17
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 17 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field17: type=string, required=false, message=&quot;Field 17 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field18
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 18 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field18: type=string, required=false, message=&quot;Field 18 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field19
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 19 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field19: type=string, required=false, message=&quot;Field 19 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field20
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 20 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field20: type=string, required=false, message=&quot;Field 20 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field21
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 21 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field21: type=string, required=false, message=&quot;Field 21 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field22
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 22 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field22: type=string, required=false, message=&quot;Field 22 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field23
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 23 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field23: type=string, required=false, message=&quot;Field 23 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field24
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 24 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field24: type=string, required=false, message=&quot;Field 24 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field25
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 25 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field25: type=string, required=false, message=&quot;Field 25 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field26
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 26 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field26: type=string, required=false, message=&quot;Field 26 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field27
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 27 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field27: type=string, required=false, message=&quot;Field 27 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field28
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 28 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field28: type=string, required=false, message=&quot;Field 28 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field29
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 29 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field29: type=string, required=false, message=&quot;Field 29 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field30
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 30 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field30: type=string, required=false, message=&quot;Field 30 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field31
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 31 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field31: type=string, required=false, message=&quot;Field 31 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field32
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 32 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field32: type=string, required=false, message=&quot;Field 32 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field33
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 33 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field33: type=string, required=false, message=&quot;Field 33 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field34
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 34 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field34: type=string, required=false, message=&quot;Field 34 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field35
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 35 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field35: type=string, required=false, message=&quot;Field 35 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field36
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 36 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field36: type=string, required=false, message=&quot;Field 36 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field37
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 37 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field37: type=string, required=false, message=&quot;Field 37 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field38
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 38 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field38: type=string, required=false, message=&quot;Field 38 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field39
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 39 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field39: type=string, required=false, message=&quot;Field 39 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field40
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 40 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field40: type=string, required=false, message=&quot;Field 40 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field41
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 41 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field41: type=string, required=false, message=&quot;Field 41 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field42
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 42 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field42: type=string, required=false, message=&quot;Field 42 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field43
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 43 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field43: type=string, required=false, message=&quot;Field 43 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field44
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 44 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field44: type=string, required=false, message=&quot;Field 44 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field45
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 45 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field45: type=string, required=false, message=&quot;Field 45 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field46
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 46 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field46: type=string, required=false, message=&quot;Field 46 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field47
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 47 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field47: type=string, required=false, message=&quot;Field 47 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field48
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 48 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field48: type=string, required=false, message=&quot;Field 48 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field49
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 49 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field49: type=string, required=false, message=&quot;Field 49 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field50
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 50 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field50: type=string, required=false, message=&quot;Field 50 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field51
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 51 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field51: type=string, required=false, message=&quot;Field 51 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field52
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 52 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field52: type=string, required=false, message=&quot;Field 52 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field53
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 53 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field53: type=string, required=false, message=&quot;Field 53 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field54
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 54 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field54: type=string, required=false, message=&quot;Field 54 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field55
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 55 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field55: type=string, required=false, message=&quot;Field 55 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field56
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 56 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field56: type=string, required=false, message=&quot;Field 56 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field57
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 57 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field57: type=string, required=false, message=&quot;Field 57 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field58
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 58 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field58: type=string, required=false, message=&quot;Field 58 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field59
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 59 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field59: type=string, required=false, message=&quot;Field 59 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field60
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 60 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field60: type=string, required=false, message=&quot;Field 60 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field61
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 61 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field61: type=string, required=false, message=&quot;Field 61 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field62
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 62 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field62: type=string, required=false, message=&quot;Field 62 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field63
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 63 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field63: type=string, required=false, message=&quot;Field 63 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field64
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 64 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field64: type=string, required=false, message=&quot;Field 64 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field65
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 65 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field65: type=string, required=false, message=&quot;Field 65 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field66
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 66 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field66: type=string, required=false, message=&quot;Field 66 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field67
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 67 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field67: type=string, required=false, message=&quot;Field 67 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field68
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 68 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field68: type=string, required=false, message=&quot;Field 68 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field69
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 69 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field69: type=string, required=false, message=&quot;Field 69 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field70
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 70 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field70: type=string, required=false, message=&quot;Field 70 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field71
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 71 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field71: type=string, required=false, message=&quot;Field 71 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field72
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 72 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field72: type=string, required=false, message=&quot;Field 72 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field73
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 73 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field73: type=string, required=false, message=&quot;Field 73 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field74
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 74 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field74: type=string, required=false, message=&quot;Field 74 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field75
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 75 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field75: type=string, required=false, message=&quot;Field 75 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field76
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 76 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field76: type=string, required=false, message=&quot;Field 76 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field77
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 77 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field77: type=string, required=false, message=&quot;Field 77 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field78
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 78 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field78: type=string, required=false, message=&quot;Field 78 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field79
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 79 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field79: type=string, required=false, message=&quot;Field 79 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field80
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 80 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field80: type=string, required=false, message=&quot;Field 80 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field81
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 81 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field81: type=string, required=false, message=&quot;Field 81 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field82
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 82 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field82: type=string, required=false, message=&quot;Field 82 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field83
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 83 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field83: type=string, required=false, message=&quot;Field 83 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field84
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 84 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field84: type=string, required=false, message=&quot;Field 84 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field85
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 85 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field85: type=string, required=false, message=&quot;Field 85 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field86
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 86 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field86: type=string, required=false, message=&quot;Field 86 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field87
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 87 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field87: type=string, required=false, message=&quot;Field 87 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field88
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 88 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field88: type=string, required=false, message=&quot;Field 88 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field89
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 89 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field89: type=string, required=false, message=&quot;Field 89 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field90
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 90 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field90: type=string, required=false, message=&quot;Field 90 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field91
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 91 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field91: type=string, required=false, message=&quot;Field 91 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field92
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 92 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field92: type=string, required=false, message=&quot;Field 92 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field93
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 93 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field93: type=string, required=false, message=&quot;Field 93 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field94
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 94 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field94: type=string, required=false, message=&quot;Field 94 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field95
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 95 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field95: type=string, required=false, message=&quot;Field 95 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field96
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 96 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field96: type=string, required=false, message=&quot;Field 96 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field97
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 97 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field97: type=string, required=false, message=&quot;Field 97 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field98
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 98 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field98: type=string, required=false, message=&quot;Field 98 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field99
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 99 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field99: type=string, required=false, message=&quot;Field 99 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field100
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 100 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field100: type=string, required=false, message=&quot;Field 100 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field101
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 101 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field101: type=string, required=false, message=&quot;Field 101 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field102
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 102 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field102: type=string, required=false, message=&quot;Field 102 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field103
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 103 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field103: type=string, required=false, message=&quot;Field 103 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field104
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 104 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field104: type=string, required=false, message=&quot;Field 104 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field105
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 105 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field105: type=string, required=false, message=&quot;Field 105 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field106
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 106 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field106: type=string, required=false, message=&quot;Field 106 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field107
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 107 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field107: type=string, required=false, message=&quot;Field 107 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field108
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 108 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field108: type=string, required=false, message=&quot;Field 108 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field109
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 109 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field109: type=string, required=false, message=&quot;Field 109 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field110
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 110 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field110: type=string, required=false, message=&quot;Field 110 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field111
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 111 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field111: type=string, required=false, message=&quot;Field 111 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field112
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 112 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field112: type=string, required=false, message=&quot;Field 112 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field113
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 113 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field113: type=string, required=false, message=&quot;Field 113 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field114
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 114 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field114: type=string, required=false, message=&quot;Field 114 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field115
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 115 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field115: type=string, required=false, message=&quot;Field 115 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field116
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 116 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field116: type=string, required=false, message=&quot;Field 116 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field117
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 117 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field117: type=string, required=false, message=&quot;Field 117 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field118
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 118 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field118: type=string, required=false, message=&quot;Field 118 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field119
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 119 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field119: type=string, required=false, message=&quot;Field 119 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field120
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 120 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field120: type=string, required=false, message=&quot;Field 120 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field121
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 121 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field121: type=string, required=false, message=&quot;Field 121 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field122
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 122 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field122: type=string, required=false, message=&quot;Field 122 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field123
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 123 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field123: type=string, required=false, message=&quot;Field 123 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field124
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 124 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field124: type=string, required=false, message=&quot;Field 124 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field125
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 125 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field125: type=string, required=false, message=&quot;Field 125 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field126
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 126 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field126: type=string, required=false, message=&quot;Field 126 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field127
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 127 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field127: type=string, required=false, message=&quot;Field 127 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field128
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 128 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field128: type=string, required=false, message=&quot;Field 128 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field129
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 129 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field129: type=string, required=false, message=&quot;Field 129 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field130
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 130 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field130: type=string, required=false, message=&quot;Field 130 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field131
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 131 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field131: type=string, required=false, message=&quot;Field 131 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field132
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 132 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field132: type=string, required=false, message=&quot;Field 132 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field133
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 133 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field133: type=string, required=false, message=&quot;Field 133 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field134
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 134 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field134: type=string, required=false, message=&quot;Field 134 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field135
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 135 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field135: type=string, required=false, message=&quot;Field 135 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field136
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 136 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field136: type=string, required=false, message=&quot;Field 136 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field137
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 137 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field137: type=string, required=false, message=&quot;Field 137 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field138
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 138 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field138: type=string, required=false, message=&quot;Field 138 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field139
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 139 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field139: type=string, required=false, message=&quot;Field 139 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field140
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 140 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field140: type=string, required=false, message=&quot;Field 140 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field141
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 141 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field141: type=string, required=false, message=&quot;Field 141 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field142
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 142 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field142: type=string, required=false, message=&quot;Field 142 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field143
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 143 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field143: type=string, required=false, message=&quot;Field 143 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field144
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 144 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field144: type=string, required=false, message=&quot;Field 144 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field145
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 145 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field145: type=string, required=false, message=&quot;Field 145 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field146
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 146 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field146: type=string, required=false, message=&quot;Field 146 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field147
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 147 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field147: type=string, required=false, message=&quot;Field 147 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field148
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 148 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field148: type=string, required=false, message=&quot;Field 148 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field149
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 149 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field149: type=string, required=false, message=&quot;Field 149 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field150
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 150 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field150: type=string, required=false, message=&quot;Field 150 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field151
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 151 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field151: type=string, required=false, message=&quot;Field 151 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field152
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 152 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field152: type=string, required=false, message=&quot;Field 152 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field153
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 153 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field153: type=string, required=false, message=&quot;Field 153 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field154
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 154 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field154: type=string, required=false, message=&quot;Field 154 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field155
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 155 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field155: type=string, required=false, message=&quot;Field 155 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field156
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 156 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field156: type=string, required=false, message=&quot;Field 156 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field157
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 157 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field157: type=string, required=false, message=&quot;Field 157 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field158
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 158 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field158: type=string, required=false, message=&quot;Field 158 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field159
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 159 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field159: type=string, required=false, message=&quot;Field 159 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field160
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 160 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field160: type=string, required=false, message=&quot;Field 160 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field161
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 161 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field161: type=string, required=false, message=&quot;Field 161 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field162
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 162 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field162: type=string, required=false, message=&quot;Field 162 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field163
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 163 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field163: type=string, required=false, message=&quot;Field 163 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field164
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 164 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field164: type=string, required=false, message=&quot;Field 164 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field165
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 165 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field165: type=string, required=false, message=&quot;Field 165 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field166
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 166 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field166: type=string, required=false, message=&quot;Field 166 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field167
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 167 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field167: type=string, required=false, message=&quot;Field 167 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field168
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 168 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field168: type=string, required=false, message=&quot;Field 168 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field169
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 169 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field169: type=string, required=false, message=&quot;Field 169 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field170
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 170 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field170: type=string, required=false, message=&quot;Field 170 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field171
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 171 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field171: type=string, required=false, message=&quot;Field 171 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field172
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 172 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field172: type=string, required=false, message=&quot;Field 172 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field173
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 173 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field173: type=string, required=false, message=&quot;Field 173 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field174
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 174 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field174: type=string, required=false, message=&quot;Field 174 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field175
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 175 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field175: type=string, required=false, message=&quot;Field 175 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field176
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 176 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field176: type=string, required=false, message=&quot;Field 176 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field177
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 177 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field177: type=string, required=false, message=&quot;Field 177 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field178
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 178 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field178: type=string, required=false, message=&quot;Field 178 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field179
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 179 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field179: type=string, required=false, message=&quot;Field 179 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field180
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 180 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field180: type=string, required=false, message=&quot;Field 180 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field181
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 181 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field181: type=string, required=false, message=&quot;Field 181 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field182
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 182 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field182: type=string, required=false, message=&quot;Field 182 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field183
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 183 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field183: type=string, required=false, message=&quot;Field 183 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field184
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 184 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field184: type=string, required=false, message=&quot;Field 184 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field185
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 185 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field185: type=string, required=false, message=&quot;Field 185 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field186
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 186 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field186: type=string, required=false, message=&quot;Field 186 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field187
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 187 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field187: type=string, required=false, message=&quot;Field 187 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field188
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 188 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field188: type=string, required=false, message=&quot;Field 188 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field189
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 189 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field189: type=string, required=false, message=&quot;Field 189 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field190
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 190 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field190: type=string, required=false, message=&quot;Field 190 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field191
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 191 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field191: type=string, required=false, message=&quot;Field 191 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field192
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 192 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field192: type=string, required=false, message=&quot;Field 192 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field193
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 193 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field193: type=string, required=false, message=&quot;Field 193 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field194
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 194 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field194: type=string, required=false, message=&quot;Field 194 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field195
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 195 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field195: type=string, required=false, message=&quot;Field 195 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field196
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 196 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field196: type=string, required=false, message=&quot;Field 196 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field197
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 197 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field197: type=string, required=false, message=&quot;Field 197 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field198
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 198 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field198: type=string, required=false, message=&quot;Field 198 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field199
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 199 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field199: type=string, required=false, message=&quot;Field 199 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field200
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 200 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field200: type=string, required=false, message=&quot;Field 200 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field201
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 201 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field201: type=string, required=false, message=&quot;Field 201 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field202
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 202 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field202: type=string, required=false, message=&quot;Field 202 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field203
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 203 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field203: type=string, required=false, message=&quot;Field 203 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field204
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 204 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field204: type=string, required=false, message=&quot;Field 204 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field205
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 205 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field205: type=string, required=false, message=&quot;Field 205 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field206
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 206 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field206: type=string, required=false, message=&quot;Field 206 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field207
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 207 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field207: type=string, required=false, message=&quot;Field 207 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field208
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 208 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field208: type=string, required=false, message=&quot;Field 208 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field209
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 209 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field209: type=string, required=false, message=&quot;Field 209 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field210
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 210 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field210: type=string, required=false, message=&quot;Field 210 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field211
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 211 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field211: type=string, required=false, message=&quot;Field 211 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field212
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 212 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field212: type=string, required=false, message=&quot;Field 212 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field213
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 213 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field213: type=string, required=false, message=&quot;Field 213 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field214
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 214 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field214: type=string, required=false, message=&quot;Field 214 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field215
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 215 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field215: type=string, required=false, message=&quot;Field 215 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field216
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 216 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field216: type=string, required=false, message=&quot;Field 216 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field217
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 217 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field217: type=string, required=false, message=&quot;Field 217 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field218
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 218 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field218: type=string, required=false, message=&quot;Field 218 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field219
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 219 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field219: type=string, required=false, message=&quot;Field 219 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field220
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 220 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field220: type=string, required=false, message=&quot;Field 220 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field221
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 221 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field221: type=string, required=false, message=&quot;Field 221 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field222
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 222 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field222: type=string, required=false, message=&quot;Field 222 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field223
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 223 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field223: type=string, required=false, message=&quot;Field 223 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field224
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 224 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field224: type=string, required=false, message=&quot;Field 224 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field225
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 225 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field225: type=string, required=false, message=&quot;Field 225 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field226
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 226 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field226: type=string, required=false, message=&quot;Field 226 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field227
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 227 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field227: type=string, required=false, message=&quot;Field 227 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field228
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 228 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field228: type=string, required=false, message=&quot;Field 228 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field229
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 229 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field229: type=string, required=false, message=&quot;Field 229 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field230
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 230 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field230: type=string, required=false, message=&quot;Field 230 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field231
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 231 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field231: type=string, required=false, message=&quot;Field 231 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field232
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 232 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field232: type=string, required=false, message=&quot;Field 232 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field233
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 233 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field233: type=string, required=false, message=&quot;Field 233 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field234
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 234 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field234: type=string, required=false, message=&quot;Field 234 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field235
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 235 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field235: type=string, required=false, message=&quot;Field 235 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field236
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 236 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field236: type=string, required=false, message=&quot;Field 236 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field237
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 237 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field237: type=string, required=false, message=&quot;Field 237 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field238
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 238 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field238: type=string, required=false, message=&quot;Field 238 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field239
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 239 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field239: type=string, required=false, message=&quot;Field 239 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field240
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 240 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field240: type=string, required=false, message=&quot;Field 240 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field241
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 241 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field241: type=string, required=false, message=&quot;Field 241 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field242
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 242 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field242: type=string, required=false, message=&quot;Field 242 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field243
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 243 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field243: type=string, required=false, message=&quot;Field 243 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field244
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 244 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field244: type=string, required=false, message=&quot;Field 244 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field245
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 245 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field245: type=string, required=false, message=&quot;Field 245 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field246
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 246 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field246: type=string, required=false, message=&quot;Field 246 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field247
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 247 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field247: type=string, required=false, message=&quot;Field 247 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field248
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 248 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field248: type=string, required=false, message=&quot;Field 248 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field249
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 249 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field249: type=string, required=false, message=&quot;Field 249 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field250
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 250 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field250: type=string, required=false, message=&quot;Field 250 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field251
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 251 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field251: type=string, required=false, message=&quot;Field 251 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field252
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 252 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field252: type=string, required=false, message=&quot;Field 252 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field253
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 253 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field253: type=string, required=false, message=&quot;Field 253 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field254
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 254 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field254: type=string, required=false, message=&quot;Field 254 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field255
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 255 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field255: type=string, required=false, message=&quot;Field 255 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field256
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 256 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field256: type=string, required=false, message=&quot;Field 256 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field257
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 257 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field257: type=string, required=false, message=&quot;Field 257 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field258
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 258 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field258: type=string, required=false, message=&quot;Field 258 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field259
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 259 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field259: type=string, required=false, message=&quot;Field 259 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field260
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 260 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field260: type=string, required=false, message=&quot;Field 260 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field261
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 261 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field261: type=string, required=false, message=&quot;Field 261 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field262
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 262 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field262: type=string, required=false, message=&quot;Field 262 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field263
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 263 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field263: type=string, required=false, message=&quot;Field 263 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field264
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 264 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field264: type=string, required=false, message=&quot;Field 264 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field265
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 265 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field265: type=string, required=false, message=&quot;Field 265 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field266
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 266 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field266: type=string, required=false, message=&quot;Field 266 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field267
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 267 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field267: type=string, required=false, message=&quot;Field 267 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field268
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 268 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field268: type=string, required=false, message=&quot;Field 268 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field269
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 269 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field269: type=string, required=false, message=&quot;Field 269 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field270
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 270 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field270: type=string, required=false, message=&quot;Field 270 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field271
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 271 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field271: type=string, required=false, message=&quot;Field 271 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field272
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 272 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field272: type=string, required=false, message=&quot;Field 272 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field273
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 273 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field273: type=string, required=false, message=&quot;Field 273 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field274
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 274 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field274: type=string, required=false, message=&quot;Field 274 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field275
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 275 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field275: type=string, required=false, message=&quot;Field 275 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field276
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 276 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field276: type=string, required=false, message=&quot;Field 276 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field277
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 277 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field277: type=string, required=false, message=&quot;Field 277 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field278
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 278 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field278: type=string, required=false, message=&quot;Field 278 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field279
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 279 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field279: type=string, required=false, message=&quot;Field 279 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field280
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 280 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field280: type=string, required=false, message=&quot;Field 280 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field281
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 281 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field281: type=string, required=false, message=&quot;Field 281 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field282
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 282 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field282: type=string, required=false, message=&quot;Field 282 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field283
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 283 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field283: type=string, required=false, message=&quot;Field 283 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field284
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 284 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field284: type=string, required=false, message=&quot;Field 284 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field285
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 285 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field285: type=string, required=false, message=&quot;Field 285 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field286
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 286 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field286: type=string, required=false, message=&quot;Field 286 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field287
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 287 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field287: type=string, required=false, message=&quot;Field 287 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field288
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 288 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field288: type=string, required=false, message=&quot;Field 288 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field289
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 289 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field289: type=string, required=false, message=&quot;Field 289 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field290
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 290 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field290: type=string, required=false, message=&quot;Field 290 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field291
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 291 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field291: type=string, required=false, message=&quot;Field 291 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field292
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 292 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field292: type=string, required=false, message=&quot;Field 292 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field293
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 293 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field293: type=string, required=false, message=&quot;Field 293 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field294
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 294 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field294: type=string, required=false, message=&quot;Field 294 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field295
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 295 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field295: type=string, required=false, message=&quot;Field 295 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field296
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 296 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field296: type=string, required=false, message=&quot;Field 296 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field297
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 297 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field297: type=string, required=false, message=&quot;Field 297 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field298
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 298 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field298: type=string, required=false, message=&quot;Field 298 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field299
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 299 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field299: type=string, required=false, message=&quot;Field 299 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field300
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 300 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field300: type=string, required=false, message=&quot;Field 300 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field301
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 301 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field301: type=string, required=false, message=&quot;Field 301 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field302
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 302 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field302: type=string, required=false, message=&quot;Field 302 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field303
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 303 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field303: type=string, required=false, message=&quot;Field 303 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field304
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 304 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field304: type=string, required=false, message=&quot;Field 304 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field305
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 305 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field305: type=string, required=false, message=&quot;Field 305 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field306
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 306 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field306: type=string, required=false, message=&quot;Field 306 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field307
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 307 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field307: type=string, required=false, message=&quot;Field 307 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field308
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 308 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field308: type=string, required=false, message=&quot;Field 308 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field309
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 309 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field309: type=string, required=false, message=&quot;Field 309 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field310
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 310 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field310: type=string, required=false, message=&quot;Field 310 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field311
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 311 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field311: type=string, required=false, message=&quot;Field 311 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field312
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 312 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field312: type=string, required=false, message=&quot;Field 312 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field313
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 313 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field313: type=string, required=false, message=&quot;Field 313 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field314
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 314 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field314: type=string, required=false, message=&quot;Field 314 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field315
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 315 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field315: type=string, required=false, message=&quot;Field 315 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field316
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 316 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field316: type=string, required=false, message=&quot;Field 316 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field317
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 317 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field317: type=string, required=false, message=&quot;Field 317 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field318
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 318 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field318: type=string, required=false, message=&quot;Field 318 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field319
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 319 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field319: type=string, required=false, message=&quot;Field 319 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field320
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 320 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field320: type=string, required=false, message=&quot;Field 320 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field321
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 321 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field321: type=string, required=false, message=&quot;Field 321 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field322
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 322 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field322: type=string, required=false, message=&quot;Field 322 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field323
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 323 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field323: type=string, required=false, message=&quot;Field 323 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field324
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 324 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field324: type=string, required=false, message=&quot;Field 324 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field325
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 325 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field325: type=string, required=false, message=&quot;Field 325 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field326
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 326 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field326: type=string, required=false, message=&quot;Field 326 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field327
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 327 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field327: type=string, required=false, message=&quot;Field 327 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field328
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 328 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field328: type=string, required=false, message=&quot;Field 328 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field329
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 329 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field329: type=string, required=false, message=&quot;Field 329 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field330
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 330 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field330: type=string, required=false, message=&quot;Field 330 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field331
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 331 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field331: type=string, required=false, message=&quot;Field 331 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field332
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 332 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field332: type=string, required=false, message=&quot;Field 332 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field333
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 333 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field333: type=string, required=false, message=&quot;Field 333 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field334
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 334 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field334: type=string, required=false, message=&quot;Field 334 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field335
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 335 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field335: type=string, required=false, message=&quot;Field 335 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field336
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 336 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field336: type=string, required=false, message=&quot;Field 336 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field337
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 337 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field337: type=string, required=false, message=&quot;Field 337 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field338
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 338 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field338: type=string, required=false, message=&quot;Field 338 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field339
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 339 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field339: type=string, required=false, message=&quot;Field 339 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field340
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 340 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field340: type=string, required=false, message=&quot;Field 340 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field341
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 341 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field341: type=string, required=false, message=&quot;Field 341 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field342
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 342 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field342: type=string, required=false, message=&quot;Field 342 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field343
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 343 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field343: type=string, required=false, message=&quot;Field 343 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field344
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 344 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field344: type=string, required=false, message=&quot;Field 344 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field345
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 345 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field345: type=string, required=false, message=&quot;Field 345 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field346
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 346 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field346: type=string, required=false, message=&quot;Field 346 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field347
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 347 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field347: type=string, required=false, message=&quot;Field 347 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field348
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 348 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field348: type=string, required=false, message=&quot;Field 348 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field349
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 349 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field349: type=string, required=false, message=&quot;Field 349 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field350
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 350 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field350: type=string, required=false, message=&quot;Field 350 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field351
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 351 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field351: type=string, required=false, message=&quot;Field 351 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field352
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 352 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field352: type=string, required=false, message=&quot;Field 352 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field353
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 353 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field353: type=string, required=false, message=&quot;Field 353 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field354
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 354 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field354: type=string, required=false, message=&quot;Field 354 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field355
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 355 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field355: type=string, required=false, message=&quot;Field 355 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field356
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 356 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field356: type=string, required=false, message=&quot;Field 356 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field357
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 357 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field357: type=string, required=false, message=&quot;Field 357 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field358
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 358 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field358: type=string, required=false, message=&quot;Field 358 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field359
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 359 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field359: type=string, required=false, message=&quot;Field 359 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field360
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 360 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field360: type=string, required=false, message=&quot;Field 360 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field361
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 361 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field361: type=string, required=false, message=&quot;Field 361 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field362
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 362 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field362: type=string, required=false, message=&quot;Field 362 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field363
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 363 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field363: type=string, required=false, message=&quot;Field 363 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field364
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 364 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field364: type=string, required=false, message=&quot;Field 364 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field365
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 365 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field365: type=string, required=false, message=&quot;Field 365 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field366
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 366 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field366: type=string, required=false, message=&quot;Field 366 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field367
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 367 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field367: type=string, required=false, message=&quot;Field 367 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field368
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 368 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field368: type=string, required=false, message=&quot;Field 368 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field369
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 369 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field369: type=string, required=false, message=&quot;Field 369 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field370
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 370 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field370: type=string, required=false, message=&quot;Field 370 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field371
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 371 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field371: type=string, required=false, message=&quot;Field 371 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field372
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 372 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field372: type=string, required=false, message=&quot;Field 372 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field373
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 373 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field373: type=string, required=false, message=&quot;Field 373 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field374
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 374 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field374: type=string, required=false, message=&quot;Field 374 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field375
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 375 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field375: type=string, required=false, message=&quot;Field 375 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field376
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 376 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field376: type=string, required=false, message=&quot;Field 376 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field377
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 377 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field377: type=string, required=false, message=&quot;Field 377 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field378
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 378 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field378: type=string, required=false, message=&quot;Field 378 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field379
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 379 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field379: type=string, required=false, message=&quot;Field 379 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field380
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 380 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field380: type=string, required=false, message=&quot;Field 380 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field381
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 381 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field381: type=string, required=false, message=&quot;Field 381 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field382
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 382 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field382: type=string, required=false, message=&quot;Field 382 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field383
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 383 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field383: type=string, required=false, message=&quot;Field 383 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field384
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 384 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field384: type=string, required=false, message=&quot;Field 384 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field385
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 385 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field385: type=string, required=false, message=&quot;Field 385 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field386
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 386 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field386: type=string, required=false, message=&quot;Field 386 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field387
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 387 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field387: type=string, required=false, message=&quot;Field 387 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field388
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 388 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field388: type=string, required=false, message=&quot;Field 388 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field389
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 389 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field389: type=string, required=false, message=&quot;Field 389 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field390
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 390 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field390: type=string, required=false, message=&quot;Field 390 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field391
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 391 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field391: type=string, required=false, message=&quot;Field 391 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field392
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 392 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field392: type=string, required=false, message=&quot;Field 392 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field393
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 393 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field393: type=string, required=false, message=&quot;Field 393 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field394
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 394 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field394: type=string, required=false, message=&quot;Field 394 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field395
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 395 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field395: type=string, required=false, message=&quot;Field 395 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field396
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 396 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field396: type=string, required=false, message=&quot;Field 396 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field397
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 397 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field397: type=string, required=false, message=&quot;Field 397 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field398
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 398 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field398: type=string, required=false, message=&quot;Field 398 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field399
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 399 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field399: type=string, required=false, message=&quot;Field 399 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field400
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 400 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field400: type=string, required=false, message=&quot;Field 400 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field401
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 401 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field401: type=string, required=false, message=&quot;Field 401 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field402
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 402 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field402: type=string, required=false, message=&quot;Field 402 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field403
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 403 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field403: type=string, required=false, message=&quot;Field 403 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field404
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 404 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field404: type=string, required=false, message=&quot;Field 404 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field405
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 405 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field405: type=string, required=false, message=&quot;Field 405 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field406
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 406 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field406: type=string, required=false, message=&quot;Field 406 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field407
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 407 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field407: type=string, required=false, message=&quot;Field 407 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field408
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 408 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field408: type=string, required=false, message=&quot;Field 408 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field409
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 409 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field409: type=string, required=false, message=&quot;Field 409 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field410
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 410 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field410: type=string, required=false, message=&quot;Field 410 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field411
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 411 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field411: type=string, required=false, message=&quot;Field 411 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field412
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 412 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field412: type=string, required=false, message=&quot;Field 412 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field413
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 413 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field413: type=string, required=false, message=&quot;Field 413 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field414
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 414 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field414: type=string, required=false, message=&quot;Field 414 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field415
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 415 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field415: type=string, required=false, message=&quot;Field 415 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field416
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 416 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field416: type=string, required=false, message=&quot;Field 416 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field417
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 417 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field417: type=string, required=false, message=&quot;Field 417 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field418
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 418 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field418: type=string, required=false, message=&quot;Field 418 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field419
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 419 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field419: type=string, required=false, message=&quot;Field 419 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field420
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 420 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field420: type=string, required=false, message=&quot;Field 420 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field421
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 421 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field421: type=string, required=false, message=&quot;Field 421 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field422
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 422 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field422: type=string, required=false, message=&quot;Field 422 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field423
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 423 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field423: type=string, required=false, message=&quot;Field 423 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field424
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 424 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field424: type=string, required=false, message=&quot;Field 424 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field425
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 425 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field425: type=string, required=false, message=&quot;Field 425 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field426
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 426 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field426: type=string, required=false, message=&quot;Field 426 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field427
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 427 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field427: type=string, required=false, message=&quot;Field 427 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field428
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 428 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field428: type=string, required=false, message=&quot;Field 428 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field429
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 429 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field429: type=string, required=false, message=&quot;Field 429 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field430
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 430 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field430: type=string, required=false, message=&quot;Field 430 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field431
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 431 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field431: type=string, required=false, message=&quot;Field 431 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field432
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 432 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field432: type=string, required=false, message=&quot;Field 432 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field433
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 433 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field433: type=string, required=false, message=&quot;Field 433 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field434
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 434 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field434: type=string, required=false, message=&quot;Field 434 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field435
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 435 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field435: type=string, required=false, message=&quot;Field 435 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field436
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 436 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field436: type=string, required=false, message=&quot;Field 436 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field437
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 437 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field437: type=string, required=false, message=&quot;Field 437 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field438
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 438 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field438: type=string, required=false, message=&quot;Field 438 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field439
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 439 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field439: type=string, required=false, message=&quot;Field 439 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field440
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 440 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field440: type=string, required=false, message=&quot;Field 440 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field441
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 441 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field441: type=string, required=false, message=&quot;Field 441 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field442
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 442 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field442: type=string, required=false, message=&quot;Field 442 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field443
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 443 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field443: type=string, required=false, message=&quot;Field 443 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field444
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 444 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field444: type=string, required=false, message=&quot;Field 444 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field445
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 445 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field445: type=string, required=false, message=&quot;Field 445 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field446
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 446 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field446: type=string, required=false, message=&quot;Field 446 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field447
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 447 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field447: type=string, required=false, message=&quot;Field 447 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field448
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 448 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field448: type=string, required=false, message=&quot;Field 448 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field449
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 449 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field449: type=string, required=false, message=&quot;Field 449 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field450
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 450 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field450: type=string, required=false, message=&quot;Field 450 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field451
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 451 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field451: type=string, required=false, message=&quot;Field 451 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field452
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 452 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field452: type=string, required=false, message=&quot;Field 452 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field453
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 453 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field453: type=string, required=false, message=&quot;Field 453 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field454
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 454 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field454: type=string, required=false, message=&quot;Field 454 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field455
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 455 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field455: type=string, required=false, message=&quot;Field 455 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field456
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 456 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field456: type=string, required=false, message=&quot;Field 456 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field457
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 457 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field457: type=string, required=false, message=&quot;Field 457 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field458
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 458 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field458: type=string, required=false, message=&quot;Field 458 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field459
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 459 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field459: type=string, required=false, message=&quot;Field 459 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field460
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 460 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field460: type=string, required=false, message=&quot;Field 460 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field461
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 461 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field461: type=string, required=false, message=&quot;Field 461 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field462
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 462 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field462: type=string, required=false, message=&quot;Field 462 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field463
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 463 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field463: type=string, required=false, message=&quot;Field 463 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field464
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 464 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field464: type=string, required=false, message=&quot;Field 464 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field465
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 465 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field465: type=string, required=false, message=&quot;Field 465 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field466
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 466 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field466: type=string, required=false, message=&quot;Field 466 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field467
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 467 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field467: type=string, required=false, message=&quot;Field 467 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field468
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 468 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field468: type=string, required=false, message=&quot;Field 468 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field469
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 469 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field469: type=string, required=false, message=&quot;Field 469 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field470
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 470 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field470: type=string, required=false, message=&quot;Field 470 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field471
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 471 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field471: type=string, required=false, message=&quot;Field 471 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field472
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 472 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field472: type=string, required=false, message=&quot;Field 472 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field473
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 473 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field473: type=string, required=false, message=&quot;Field 473 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field474
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 474 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field474: type=string, required=false, message=&quot;Field 474 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field475
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 475 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field475: type=string, required=false, message=&quot;Field 475 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field476
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 476 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field476: type=string, required=false, message=&quot;Field 476 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field477
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 477 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field477: type=string, required=false, message=&quot;Field 477 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field478
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 478 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field478: type=string, required=false, message=&quot;Field 478 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field479
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 479 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field479: type=string, required=false, message=&quot;Field 479 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field480
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 480 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field480: type=string, required=false, message=&quot;Field 480 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field481
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 481 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field481: type=string, required=false, message=&quot;Field 481 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field482
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 482 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field482: type=string, required=false, message=&quot;Field 482 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field483
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 483 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field483: type=string, required=false, message=&quot;Field 483 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field484
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 484 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field484: type=string, required=false, message=&quot;Field 484 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field485
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 485 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field485: type=string, required=false, message=&quot;Field 485 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field486
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 486 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field486: type=string, required=false, message=&quot;Field 486 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field487
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 487 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field487: type=string, required=false, message=&quot;Field 487 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field488
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 488 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field488: type=string, required=false, message=&quot;Field 488 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field489
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 489 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field489: type=string, required=false, message=&quot;Field 489 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field490
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 490 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field490: type=string, required=false, message=&quot;Field 490 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field491
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 491 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field491: type=string, required=false, message=&quot;Field 491 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field492
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 492 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field492: type=string, required=false, message=&quot;Field 492 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field493
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 493 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field493: type=string, required=false, message=&quot;Field 493 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field494
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 494 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field494: type=string, required=false, message=&quot;Field 494 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field495
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 495 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field495: type=string, required=false, message=&quot;Field 495 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field496
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 496 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field496: type=string, required=false, message=&quot;Field 496 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field497
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 497 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field497: type=string, required=false, message=&quot;Field 497 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field498
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 498 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field498: type=string, required=false, message=&quot;Field 498 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field499
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 499 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field499: type=string, required=false, message=&quot;Field 499 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field500
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 500 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field500: type=string, required=false, message=&quot;Field 500 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field501
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 501 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field501: type=string, required=false, message=&quot;Field 501 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field502
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 502 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field502: type=string, required=false, message=&quot;Field 502 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field503
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 503 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field503: type=string, required=false, message=&quot;Field 503 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field504
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 504 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field504: type=string, required=false, message=&quot;Field 504 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field505
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 505 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field505: type=string, required=false, message=&quot;Field 505 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field506
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 506 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field506: type=string, required=false, message=&quot;Field 506 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field507
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 507 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field507: type=string, required=false, message=&quot;Field 507 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field508
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 508 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field508: type=string, required=false, message=&quot;Field 508 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field509
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 509 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field509: type=string, required=false, message=&quot;Field 509 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field510
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 510 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field510: type=string, required=false, message=&quot;Field 510 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field511
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 511 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field511: type=string, required=false, message=&quot;Field 511 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field512
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 512 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field512: type=string, required=false, message=&quot;Field 512 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field513
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 513 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field513: type=string, required=false, message=&quot;Field 513 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field514
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 514 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field514: type=string, required=false, message=&quot;Field 514 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field515
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 515 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field515: type=string, required=false, message=&quot;Field 515 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field516
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 516 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field516: type=string, required=false, message=&quot;Field 516 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field517
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 517 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field517: type=string, required=false, message=&quot;Field 517 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field518
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 518 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field518: type=string, required=false, message=&quot;Field 518 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field519
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 519 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field519: type=string, required=false, message=&quot;Field 519 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field520
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 520 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field520: type=string, required=false, message=&quot;Field 520 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field521
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 521 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field521: type=string, required=false, message=&quot;Field 521 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field522
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 522 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field522: type=string, required=false, message=&quot;Field 522 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field523
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 523 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field523: type=string, required=false, message=&quot;Field 523 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field524
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 524 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field524: type=string, required=false, message=&quot;Field 524 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field525
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 525 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field525: type=string, required=false, message=&quot;Field 525 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field526
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 526 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field526: type=string, required=false, message=&quot;Field 526 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field527
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 527 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field527: type=string, required=false, message=&quot;Field 527 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field528
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 528 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field528: type=string, required=false, message=&quot;Field 528 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field529
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 529 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field529: type=string, required=false, message=&quot;Field 529 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field530
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 530 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field530: type=string, required=false, message=&quot;Field 530 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field531
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 531 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field531: type=string, required=false, message=&quot;Field 531 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field532
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 532 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field532: type=string, required=false, message=&quot;Field 532 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field533
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 533 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field533: type=string, required=false, message=&quot;Field 533 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field534
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 534 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field534: type=string, required=false, message=&quot;Field 534 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field535
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 535 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field535: type=string, required=false, message=&quot;Field 535 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field536
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 536 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field536: type=string, required=false, message=&quot;Field 536 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field537
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 537 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field537: type=string, required=false, message=&quot;Field 537 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field538
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 538 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field538: type=string, required=false, message=&quot;Field 538 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field539
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 539 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field539: type=string, required=false, message=&quot;Field 539 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field540
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 540 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field540: type=string, required=false, message=&quot;Field 540 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field541
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 541 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field541: type=string, required=false, message=&quot;Field 541 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field542
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 542 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field542: type=string, required=false, message=&quot;Field 542 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field543
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 543 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field543: type=string, required=false, message=&quot;Field 543 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field544
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 544 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field544: type=string, required=false, message=&quot;Field 544 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field545
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 545 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field545: type=string, required=false, message=&quot;Field 545 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field546
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 546 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field546: type=string, required=false, message=&quot;Field 546 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field547
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 547 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field547: type=string, required=false, message=&quot;Field 547 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field548
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 548 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field548: type=string, required=false, message=&quot;Field 548 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field549
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 549 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field549: type=string, required=false, message=&quot;Field 549 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field550
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 550 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field550: type=string, required=false, message=&quot;Field 550 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field551
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 551 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field551: type=string, required=false, message=&quot;Field 551 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field552
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 552 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field552: type=string, required=false, message=&quot;Field 552 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field553
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 553 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field553: type=string, required=false, message=&quot;Field 553 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field554
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 554 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field554: type=string, required=false, message=&quot;Field 554 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field555
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 555 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field555: type=string, required=false, message=&quot;Field 555 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field556
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 556 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field556: type=string, required=false, message=&quot;Field 556 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field557
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 557 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field557: type=string, required=false, message=&quot;Field 557 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field558
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 558 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field558: type=string, required=false, message=&quot;Field 558 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field559
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 559 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field559: type=string, required=false, message=&quot;Field 559 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field560
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 560 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field560: type=string, required=false, message=&quot;Field 560 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field561
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 561 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field561: type=string, required=false, message=&quot;Field 561 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field562
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 562 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field562: type=string, required=false, message=&quot;Field 562 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field563
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 563 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field563: type=string, required=false, message=&quot;Field 563 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field564
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 564 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field564: type=string, required=false, message=&quot;Field 564 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field565
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 565 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field565: type=string, required=false, message=&quot;Field 565 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field566
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 566 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field566: type=string, required=false, message=&quot;Field 566 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field567
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 567 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field567: type=string, required=false, message=&quot;Field 567 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field568
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 568 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field568: type=string, required=false, message=&quot;Field 568 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field569
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 569 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field569: type=string, required=false, message=&quot;Field 569 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field570
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 570 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field570: type=string, required=false, message=&quot;Field 570 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field571
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 571 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field571: type=string, required=false, message=&quot;Field 571 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field572
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 572 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field572: type=string, required=false, message=&quot;Field 572 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field573
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 573 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field573: type=string, required=false, message=&quot;Field 573 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field574
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 574 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field574: type=string, required=false, message=&quot;Field 574 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field575
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 575 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field575: type=string, required=false, message=&quot;Field 575 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field576
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 576 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field576: type=string, required=false, message=&quot;Field 576 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field577
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 577 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field577: type=string, required=false, message=&quot;Field 577 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field578
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 578 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field578: type=string, required=false, message=&quot;Field 578 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field579
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 579 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field579: type=string, required=false, message=&quot;Field 579 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field580
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 580 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field580: type=string, required=false, message=&quot;Field 580 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field581
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 581 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field581: type=string, required=false, message=&quot;Field 581 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field582
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 582 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field582: type=string, required=false, message=&quot;Field 582 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field583
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 583 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field583: type=string, required=false, message=&quot;Field 583 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field584
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 584 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field584: type=string, required=false, message=&quot;Field 584 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field585
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 585 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field585: type=string, required=false, message=&quot;Field 585 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field586
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 586 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field586: type=string, required=false, message=&quot;Field 586 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field587
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 587 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field587: type=string, required=false, message=&quot;Field 587 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field588
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 588 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field588: type=string, required=false, message=&quot;Field 588 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field589
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 589 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field589: type=string, required=false, message=&quot;Field 589 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field590
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 590 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field590: type=string, required=false, message=&quot;Field 590 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field591
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 591 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field591: type=string, required=false, message=&quot;Field 591 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field592
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 592 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field592: type=string, required=false, message=&quot;Field 592 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field593
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 593 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field593: type=string, required=false, message=&quot;Field 593 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field594
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 594 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field594: type=string, required=false, message=&quot;Field 594 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field595
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 595 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field595: type=string, required=false, message=&quot;Field 595 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field596
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 596 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field596: type=string, required=false, message=&quot;Field 596 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field597
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 597 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field597: type=string, required=false, message=&quot;Field 597 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field598
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 598 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field598: type=string, required=false, message=&quot;Field 598 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field599
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 599 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field599: type=string, required=false, message=&quot;Field 599 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field600
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 600 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field600: type=string, required=false, message=&quot;Field 600 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field601
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 601 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field601: type=string, required=false, message=&quot;Field 601 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field602
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 602 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field602: type=string, required=false, message=&quot;Field 602 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field603
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 603 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field603: type=string, required=false, message=&quot;Field 603 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field604
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 604 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field604: type=string, required=false, message=&quot;Field 604 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field605
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 605 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field605: type=string, required=false, message=&quot;Field 605 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field606
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 606 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field606: type=string, required=false, message=&quot;Field 606 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field607
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 607 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field607: type=string, required=false, message=&quot;Field 607 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field608
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 608 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field608: type=string, required=false, message=&quot;Field 608 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field609
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 609 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field609: type=string, required=false, message=&quot;Field 609 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field610
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 610 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field610: type=string, required=false, message=&quot;Field 610 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field611
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 611 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field611: type=string, required=false, message=&quot;Field 611 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field612
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 612 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field612: type=string, required=false, message=&quot;Field 612 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field613
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 613 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field613: type=string, required=false, message=&quot;Field 613 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field614
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 614 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field614: type=string, required=false, message=&quot;Field 614 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field615
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 615 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field615: type=string, required=false, message=&quot;Field 615 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field616
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 616 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field616: type=string, required=false, message=&quot;Field 616 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field617
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 617 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field617: type=string, required=false, message=&quot;Field 617 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field618
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 618 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field618: type=string, required=false, message=&quot;Field 618 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field619
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 619 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field619: type=string, required=false, message=&quot;Field 619 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field620
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 620 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field620: type=string, required=false, message=&quot;Field 620 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field621
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 621 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field621: type=string, required=false, message=&quot;Field 621 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field622
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 622 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field622: type=string, required=false, message=&quot;Field 622 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field623
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 623 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field623: type=string, required=false, message=&quot;Field 623 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field624
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 624 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field624: type=string, required=false, message=&quot;Field 624 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field625
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 625 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field625: type=string, required=false, message=&quot;Field 625 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field626
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 626 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field626: type=string, required=false, message=&quot;Field 626 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field627
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 627 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field627: type=string, required=false, message=&quot;Field 627 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field628
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 628 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field628: type=string, required=false, message=&quot;Field 628 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field629
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 629 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field629: type=string, required=false, message=&quot;Field 629 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field630
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 630 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field630: type=string, required=false, message=&quot;Field 630 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field631
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 631 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field631: type=string, required=false, message=&quot;Field 631 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field632
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 632 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field632: type=string, required=false, message=&quot;Field 632 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field633
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 633 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field633: type=string, required=false, message=&quot;Field 633 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field634
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 634 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field634: type=string, required=false, message=&quot;Field 634 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field635
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 635 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field635: type=string, required=false, message=&quot;Field 635 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field636
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 636 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field636: type=string, required=false, message=&quot;Field 636 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field637
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 637 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field637: type=string, required=false, message=&quot;Field 637 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field638
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 638 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field638: type=string, required=false, message=&quot;Field 638 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field639
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 639 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field639: type=string, required=false, message=&quot;Field 639 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field640
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 640 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field640: type=string, required=false, message=&quot;Field 640 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field641
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 641 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field641: type=string, required=false, message=&quot;Field 641 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field642
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 642 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field642: type=string, required=false, message=&quot;Field 642 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field643
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 643 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field643: type=string, required=false, message=&quot;Field 643 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field644
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 644 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field644: type=string, required=false, message=&quot;Field 644 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field645
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 645 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field645: type=string, required=false, message=&quot;Field 645 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field646
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 646 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field646: type=string, required=false, message=&quot;Field 646 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field647
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 647 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field647: type=string, required=false, message=&quot;Field 647 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field648
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 648 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field648: type=string, required=false, message=&quot;Field 648 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field649
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 649 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field649: type=string, required=false, message=&quot;Field 649 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field650
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 650 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field650: type=string, required=false, message=&quot;Field 650 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field651
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 651 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field651: type=string, required=false, message=&quot;Field 651 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field652
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 652 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field652: type=string, required=false, message=&quot;Field 652 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field653
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 653 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field653: type=string, required=false, message=&quot;Field 653 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field654
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 654 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field654: type=string, required=false, message=&quot;Field 654 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field655
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 655 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field655: type=string, required=false, message=&quot;Field 655 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field656
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 656 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field656: type=string, required=false, message=&quot;Field 656 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field657
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 657 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field657: type=string, required=false, message=&quot;Field 657 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field658
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 658 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field658: type=string, required=false, message=&quot;Field 658 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field659
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 659 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field659: type=string, required=false, message=&quot;Field 659 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field660
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 660 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field660: type=string, required=false, message=&quot;Field 660 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field661
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 661 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field661: type=string, required=false, message=&quot;Field 661 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field662
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 662 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field662: type=string, required=false, message=&quot;Field 662 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field663
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 663 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field663: type=string, required=false, message=&quot;Field 663 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field664
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 664 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field664: type=string, required=false, message=&quot;Field 664 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field665
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 665 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field665: type=string, required=false, message=&quot;Field 665 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field666
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 666 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field666: type=string, required=false, message=&quot;Field 666 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field667
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 667 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field667: type=string, required=false, message=&quot;Field 667 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field668
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 668 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field668: type=string, required=false, message=&quot;Field 668 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field669
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 669 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field669: type=string, required=false, message=&quot;Field 669 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field670
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 670 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field670: type=string, required=false, message=&quot;Field 670 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field671
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 671 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field671: type=string, required=false, message=&quot;Field 671 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field672
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 672 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field672: type=string, required=false, message=&quot;Field 672 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field673
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 673 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field673: type=string, required=false, message=&quot;Field 673 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field674
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 674 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field674: type=string, required=false, message=&quot;Field 674 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field675
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 675 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field675: type=string, required=false, message=&quot;Field 675 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field676
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 676 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field676: type=string, required=false, message=&quot;Field 676 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field677
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 677 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field677: type=string, required=false, message=&quot;Field 677 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field678
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 678 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field678: type=string, required=false, message=&quot;Field 678 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field679
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 679 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field679: type=string, required=false, message=&quot;Field 679 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field680
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 680 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field680: type=string, required=false, message=&quot;Field 680 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field681
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 681 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field681: type=string, required=false, message=&quot;Field 681 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field682
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 682 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field682: type=string, required=false, message=&quot;Field 682 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field683
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 683 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field683: type=string, required=false, message=&quot;Field 683 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field684
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 684 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field684: type=string, required=false, message=&quot;Field 684 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field685
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 685 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field685: type=string, required=false, message=&quot;Field 685 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field686
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 686 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field686: type=string, required=false, message=&quot;Field 686 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field687
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 687 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field687: type=string, required=false, message=&quot;Field 687 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field688
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 688 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field688: type=string, required=false, message=&quot;Field 688 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field689
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 689 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field689: type=string, required=false, message=&quot;Field 689 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field690
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 690 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field690: type=string, required=false, message=&quot;Field 690 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field691
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 691 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field691: type=string, required=false, message=&quot;Field 691 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field692
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 692 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field692: type=string, required=false, message=&quot;Field 692 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field693
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 693 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field693: type=string, required=false, message=&quot;Field 693 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field694
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 694 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field694: type=string, required=false, message=&quot;Field 694 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field695
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 695 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field695: type=string, required=false, message=&quot;Field 695 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field696
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 696 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field696: type=string, required=false, message=&quot;Field 696 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field697
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 697 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field697: type=string, required=false, message=&quot;Field 697 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field698
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 698 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field698: type=string, required=false, message=&quot;Field 698 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field699
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 699 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field699: type=string, required=false, message=&quot;Field 699 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field700
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 700 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field700: type=string, required=false, message=&quot;Field 700 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field701
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 701 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field701: type=string, required=false, message=&quot;Field 701 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field702
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 702 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field702: type=string, required=false, message=&quot;Field 702 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field703
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 703 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field703: type=string, required=false, message=&quot;Field 703 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field704
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 704 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field704: type=string, required=false, message=&quot;Field 704 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field705
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 705 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field705: type=string, required=false, message=&quot;Field 705 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field706
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 706 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field706: type=string, required=false, message=&quot;Field 706 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field707
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 707 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field707: type=string, required=false, message=&quot;Field 707 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field708
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 708 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field708: type=string, required=false, message=&quot;Field 708 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field709
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 709 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field709: type=string, required=false, message=&quot;Field 709 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field710
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 710 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field710: type=string, required=false, message=&quot;Field 710 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field711
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 711 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field711: type=string, required=false, message=&quot;Field 711 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field712
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 712 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field712: type=string, required=false, message=&quot;Field 712 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field713
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 713 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field713: type=string, required=false, message=&quot;Field 713 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field714
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 714 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field714: type=string, required=false, message=&quot;Field 714 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field715
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 715 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field715: type=string, required=false, message=&quot;Field 715 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field716
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 716 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field716: type=string, required=false, message=&quot;Field 716 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field717
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 717 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field717: type=string, required=false, message=&quot;Field 717 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field718
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 718 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field718: type=string, required=false, message=&quot;Field 718 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field719
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 719 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field719: type=string, required=false, message=&quot;Field 719 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field720
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 720 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field720: type=string, required=false, message=&quot;Field 720 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field721
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 721 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field721: type=string, required=false, message=&quot;Field 721 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field722
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 722 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field722: type=string, required=false, message=&quot;Field 722 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field723
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 723 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field723: type=string, required=false, message=&quot;Field 723 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field724
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 724 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field724: type=string, required=false, message=&quot;Field 724 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field725
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 725 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field725: type=string, required=false, message=&quot;Field 725 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field726
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 726 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field726: type=string, required=false, message=&quot;Field 726 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field727
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 727 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field727: type=string, required=false, message=&quot;Field 727 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field728
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 728 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field728: type=string, required=false, message=&quot;Field 728 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field729
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 729 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field729: type=string, required=false, message=&quot;Field 729 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field730
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 730 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field730: type=string, required=false, message=&quot;Field 730 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field731
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 731 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field731: type=string, required=false, message=&quot;Field 731 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field732
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 732 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field732: type=string, required=false, message=&quot;Field 732 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field733
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 733 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field733: type=string, required=false, message=&quot;Field 733 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field734
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 734 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field734: type=string, required=false, message=&quot;Field 734 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field735
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 735 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field735: type=string, required=false, message=&quot;Field 735 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field736
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 736 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field736: type=string, required=false, message=&quot;Field 736 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field737
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 737 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field737: type=string, required=false, message=&quot;Field 737 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field738
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 738 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field738: type=string, required=false, message=&quot;Field 738 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field739
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 739 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field739: type=string, required=false, message=&quot;Field 739 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field740
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 740 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field740: type=string, required=false, message=&quot;Field 740 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field741
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 741 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field741: type=string, required=false, message=&quot;Field 741 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field742
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 742 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field742: type=string, required=false, message=&quot;Field 742 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field743
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 743 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field743: type=string, required=false, message=&quot;Field 743 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field744
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 744 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field744: type=string, required=false, message=&quot;Field 744 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field745
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 745 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field745: type=string, required=false, message=&quot;Field 745 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field746
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 746 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field746: type=string, required=false, message=&quot;Field 746 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field747
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 747 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field747: type=string, required=false, message=&quot;Field 747 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field748
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 748 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field748: type=string, required=false, message=&quot;Field 748 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field749
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 749 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field749: type=string, required=false, message=&quot;Field 749 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field750
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 750 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field750: type=string, required=false, message=&quot;Field 750 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field751
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 751 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field751: type=string, required=false, message=&quot;Field 751 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field752
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 752 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field752: type=string, required=false, message=&quot;Field 752 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field753
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 753 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field753: type=string, required=false, message=&quot;Field 753 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field754
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 754 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field754: type=string, required=false, message=&quot;Field 754 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field755
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 755 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field755: type=string, required=false, message=&quot;Field 755 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field756
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 756 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field756: type=string, required=false, message=&quot;Field 756 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field757
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 757 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field757: type=string, required=false, message=&quot;Field 757 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field758
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 758 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field758: type=string, required=false, message=&quot;Field 758 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field759
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 759 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field759: type=string, required=false, message=&quot;Field 759 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field760
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 760 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field760: type=string, required=false, message=&quot;Field 760 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field761
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 761 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field761: type=string, required=false, message=&quot;Field 761 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field762
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 762 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field762: type=string, required=false, message=&quot;Field 762 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field763
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 763 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field763: type=string, required=false, message=&quot;Field 763 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field764
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 764 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field764: type=string, required=false, message=&quot;Field 764 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field765
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 765 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field765: type=string, required=false, message=&quot;Field 765 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field766
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 766 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field766: type=string, required=false, message=&quot;Field 766 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field767
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 767 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field767: type=string, required=false, message=&quot;Field 767 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field768
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 768 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field768: type=string, required=false, message=&quot;Field 768 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field769
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 769 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field769: type=string, required=false, message=&quot;Field 769 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field770
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 770 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field770: type=string, required=false, message=&quot;Field 770 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field771
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 771 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field771: type=string, required=false, message=&quot;Field 771 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field772
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 772 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field772: type=string, required=false, message=&quot;Field 772 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field773
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 773 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field773: type=string, required=false, message=&quot;Field 773 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field774
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 774 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field774: type=string, required=false, message=&quot;Field 774 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field775
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 775 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field775: type=string, required=false, message=&quot;Field 775 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field776
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 776 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field776: type=string, required=false, message=&quot;Field 776 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field777
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 777 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field777: type=string, required=false, message=&quot;Field 777 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field778
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 778 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field778: type=string, required=false, message=&quot;Field 778 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field779
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 779 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field779: type=string, required=false, message=&quot;Field 779 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field780
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 780 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field780: type=string, required=false, message=&quot;Field 780 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field781
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 781 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field781: type=string, required=false, message=&quot;Field 781 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field782
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 782 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field782: type=string, required=false, message=&quot;Field 782 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field783
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 783 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field783: type=string, required=false, message=&quot;Field 783 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field784
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 784 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field784: type=string, required=false, message=&quot;Field 784 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field785
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 785 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field785: type=string, required=false, message=&quot;Field 785 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field786
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 786 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field786: type=string, required=false, message=&quot;Field 786 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field787
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 787 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field787: type=string, required=false, message=&quot;Field 787 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field788
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 788 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field788: type=string, required=false, message=&quot;Field 788 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field789
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 789 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field789: type=string, required=false, message=&quot;Field 789 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field790
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 790 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field790: type=string, required=false, message=&quot;Field 790 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field791
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 791 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field791: type=string, required=false, message=&quot;Field 791 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field792
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 792 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field792: type=string, required=false, message=&quot;Field 792 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field793
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 793 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field793: type=string, required=false, message=&quot;Field 793 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field794
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 794 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field794: type=string, required=false, message=&quot;Field 794 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field795
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 795 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field795: type=string, required=false, message=&quot;Field 795 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field796
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 796 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field796: type=string, required=false, message=&quot;Field 796 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field797
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 797 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field797: type=string, required=false, message=&quot;Field 797 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field798
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 798 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field798: type=string, required=false, message=&quot;Field 798 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field799
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 799 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field799: type=string, required=false, message=&quot;Field 799 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field800
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 800 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field800: type=string, required=false, message=&quot;Field 800 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field801
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 801 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field801: type=string, required=false, message=&quot;Field 801 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field802
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 802 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field802: type=string, required=false, message=&quot;Field 802 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field803
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 803 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field803: type=string, required=false, message=&quot;Field 803 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field804
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 804 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field804: type=string, required=false, message=&quot;Field 804 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field805
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 805 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field805: type=string, required=false, message=&quot;Field 805 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field806
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 806 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field806: type=string, required=false, message=&quot;Field 806 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field807
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 807 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field807: type=string, required=false, message=&quot;Field 807 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field808
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 808 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field808: type=string, required=false, message=&quot;Field 808 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field809
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 809 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field809: type=string, required=false, message=&quot;Field 809 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field810
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 810 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field810: type=string, required=false, message=&quot;Field 810 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field811
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 811 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field811: type=string, required=false, message=&quot;Field 811 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field812
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 812 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field812: type=string, required=false, message=&quot;Field 812 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field813
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 813 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field813: type=string, required=false, message=&quot;Field 813 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field814
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 814 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field814: type=string, required=false, message=&quot;Field 814 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field815
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 815 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field815: type=string, required=false, message=&quot;Field 815 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field816
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 816 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field816: type=string, required=false, message=&quot;Field 816 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field817
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 817 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field817: type=string, required=false, message=&quot;Field 817 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field818
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 818 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field818: type=string, required=false, message=&quot;Field 818 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field819
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 819 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field819: type=string, required=false, message=&quot;Field 819 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field820
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 820 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field820: type=string, required=false, message=&quot;Field 820 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field821
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 821 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field821: type=string, required=false, message=&quot;Field 821 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field822
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 822 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field822: type=string, required=false, message=&quot;Field 822 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field823
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 823 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field823: type=string, required=false, message=&quot;Field 823 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field824
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 824 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field824: type=string, required=false, message=&quot;Field 824 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field825
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 825 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field825: type=string, required=false, message=&quot;Field 825 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field826
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 826 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field826: type=string, required=false, message=&quot;Field 826 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field827
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 827 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field827: type=string, required=false, message=&quot;Field 827 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field828
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 828 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field828: type=string, required=false, message=&quot;Field 828 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field829
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 829 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field829: type=string, required=false, message=&quot;Field 829 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field830
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 830 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field830: type=string, required=false, message=&quot;Field 830 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field831
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 831 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field831: type=string, required=false, message=&quot;Field 831 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field832
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 832 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field832: type=string, required=false, message=&quot;Field 832 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field833
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 833 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field833: type=string, required=false, message=&quot;Field 833 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field834
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 834 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field834: type=string, required=false, message=&quot;Field 834 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field835
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 835 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field835: type=string, required=false, message=&quot;Field 835 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field836
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 836 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field836: type=string, required=false, message=&quot;Field 836 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field837
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 837 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field837: type=string, required=false, message=&quot;Field 837 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field838
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 838 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field838: type=string, required=false, message=&quot;Field 838 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field839
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 839 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field839: type=string, required=false, message=&quot;Field 839 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field840
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 840 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field840: type=string, required=false, message=&quot;Field 840 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field841
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 841 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field841: type=string, required=false, message=&quot;Field 841 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field842
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 842 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field842: type=string, required=false, message=&quot;Field 842 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field843
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 843 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field843: type=string, required=false, message=&quot;Field 843 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field844
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 844 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field844: type=string, required=false, message=&quot;Field 844 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field845
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 845 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field845: type=string, required=false, message=&quot;Field 845 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field846
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 846 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field846: type=string, required=false, message=&quot;Field 846 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field847
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 847 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field847: type=string, required=false, message=&quot;Field 847 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field848
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 848 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field848: type=string, required=false, message=&quot;Field 848 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field849
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 849 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field849: type=string, required=false, message=&quot;Field 849 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field850
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 850 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field850: type=string, required=false, message=&quot;Field 850 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field851
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 851 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field851: type=string, required=false, message=&quot;Field 851 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field852
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 852 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field852: type=string, required=false, message=&quot;Field 852 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field853
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 853 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field853: type=string, required=false, message=&quot;Field 853 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field854
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 854 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field854: type=string, required=false, message=&quot;Field 854 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field855
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 855 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field855: type=string, required=false, message=&quot;Field 855 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field856
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 856 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field856: type=string, required=false, message=&quot;Field 856 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field857
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 857 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field857: type=string, required=false, message=&quot;Field 857 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field858
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 858 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field858: type=string, required=false, message=&quot;Field 858 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field859
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 859 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field859: type=string, required=false, message=&quot;Field 859 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field860
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 860 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field860: type=string, required=false, message=&quot;Field 860 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field861
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 861 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field861: type=string, required=false, message=&quot;Field 861 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field862
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 862 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field862: type=string, required=false, message=&quot;Field 862 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field863
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 863 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field863: type=string, required=false, message=&quot;Field 863 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field864
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 864 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field864: type=string, required=false, message=&quot;Field 864 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field865
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 865 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field865: type=string, required=false, message=&quot;Field 865 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field866
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 866 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field866: type=string, required=false, message=&quot;Field 866 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field867
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 867 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field867: type=string, required=false, message=&quot;Field 867 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field868
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 868 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field868: type=string, required=false, message=&quot;Field 868 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field869
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 869 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field869: type=string, required=false, message=&quot;Field 869 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field870
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 870 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field870: type=string, required=false, message=&quot;Field 870 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field871
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 871 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field871: type=string, required=false, message=&quot;Field 871 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field872
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 872 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field872: type=string, required=false, message=&quot;Field 872 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field873
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 873 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field873: type=string, required=false, message=&quot;Field 873 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field874
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 874 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field874: type=string, required=false, message=&quot;Field 874 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field875
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 875 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field875: type=string, required=false, message=&quot;Field 875 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field876
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 876 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field876: type=string, required=false, message=&quot;Field 876 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field877
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 877 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field877: type=string, required=false, message=&quot;Field 877 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field878
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 878 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field878: type=string, required=false, message=&quot;Field 878 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field879
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 879 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field879: type=string, required=false, message=&quot;Field 879 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field880
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 880 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field880: type=string, required=false, message=&quot;Field 880 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field881
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 881 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field881: type=string, required=false, message=&quot;Field 881 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field882
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 882 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field882: type=string, required=false, message=&quot;Field 882 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field883
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 883 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field883: type=string, required=false, message=&quot;Field 883 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field884
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 884 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field884: type=string, required=false, message=&quot;Field 884 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field885
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 885 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field885: type=string, required=false, message=&quot;Field 885 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field886
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 886 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field886: type=string, required=false, message=&quot;Field 886 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field887
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 887 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field887: type=string, required=false, message=&quot;Field 887 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field888
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 888 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field888: type=string, required=false, message=&quot;Field 888 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field889
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 889 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field889: type=string, required=false, message=&quot;Field 889 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field890
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 890 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field890: type=string, required=false, message=&quot;Field 890 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field891
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 891 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field891: type=string, required=false, message=&quot;Field 891 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field892
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 892 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field892: type=string, required=false, message=&quot;Field 892 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field893
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 893 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field893: type=string, required=false, message=&quot;Field 893 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field894
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 894 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field894: type=string, required=false, message=&quot;Field 894 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field895
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 895 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field895: type=string, required=false, message=&quot;Field 895 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field896
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 896 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field896: type=string, required=false, message=&quot;Field 896 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field897
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 897 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field897: type=string, required=false, message=&quot;Field 897 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field898
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 898 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field898: type=string, required=false, message=&quot;Field 898 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field899
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 899 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field899: type=string, required=false, message=&quot;Field 899 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field900
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 900 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field900: type=string, required=false, message=&quot;Field 900 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field901
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 901 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field901: type=string, required=false, message=&quot;Field 901 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field902
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 902 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field902: type=string, required=false, message=&quot;Field 902 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field903
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 903 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field903: type=string, required=false, message=&quot;Field 903 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field904
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 904 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field904: type=string, required=false, message=&quot;Field 904 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field905
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 905 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field905: type=string, required=false, message=&quot;Field 905 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field906
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 906 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field906: type=string, required=false, message=&quot;Field 906 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field907
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 907 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field907: type=string, required=false, message=&quot;Field 907 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field908
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 908 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field908: type=string, required=false, message=&quot;Field 908 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field909
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 909 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field909: type=string, required=false, message=&quot;Field 909 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field910
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 910 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field910: type=string, required=false, message=&quot;Field 910 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field911
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 911 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field911: type=string, required=false, message=&quot;Field 911 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field912
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 912 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field912: type=string, required=false, message=&quot;Field 912 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field913
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 913 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field913: type=string, required=false, message=&quot;Field 913 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field914
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 914 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field914: type=string, required=false, message=&quot;Field 914 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field915
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 915 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field915: type=string, required=false, message=&quot;Field 915 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field916
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 916 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field916: type=string, required=false, message=&quot;Field 916 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field917
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 917 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field917: type=string, required=false, message=&quot;Field 917 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field918
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 918 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field918: type=string, required=false, message=&quot;Field 918 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field919
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 919 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field919: type=string, required=false, message=&quot;Field 919 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field920
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 920 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field920: type=string, required=false, message=&quot;Field 920 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field921
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 921 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field921: type=string, required=false, message=&quot;Field 921 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field922
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 922 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field922: type=string, required=false, message=&quot;Field 922 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field923
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 923 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field923: type=string, required=false, message=&quot;Field 923 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field924
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 924 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field924: type=string, required=false, message=&quot;Field 924 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field925
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 925 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field925: type=string, required=false, message=&quot;Field 925 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field926
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 926 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field926: type=string, required=false, message=&quot;Field 926 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field927
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 927 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field927: type=string, required=false, message=&quot;Field 927 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field928
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 928 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field928: type=string, required=false, message=&quot;Field 928 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field929
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 929 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field929: type=string, required=false, message=&quot;Field 929 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field930
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 930 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field930: type=string, required=false, message=&quot;Field 930 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field931
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 931 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field931: type=string, required=false, message=&quot;Field 931 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field932
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 932 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field932: type=string, required=false, message=&quot;Field 932 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field933
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 933 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field933: type=string, required=false, message=&quot;Field 933 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field934
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 934 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field934: type=string, required=false, message=&quot;Field 934 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field935
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 935 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field935: type=string, required=false, message=&quot;Field 935 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field936
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 936 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field936: type=string, required=false, message=&quot;Field 936 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field937
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 937 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field937: type=string, required=false, message=&quot;Field 937 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field938
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 938 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field938: type=string, required=false, message=&quot;Field 938 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field939
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 939 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field939: type=string, required=false, message=&quot;Field 939 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field940
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 940 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field940: type=string, required=false, message=&quot;Field 940 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field941
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 941 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field941: type=string, required=false, message=&quot;Field 941 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field942
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 942 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field942: type=string, required=false, message=&quot;Field 942 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field943
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 943 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field943: type=string, required=false, message=&quot;Field 943 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field944
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 944 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field944: type=string, required=false, message=&quot;Field 944 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field945
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 945 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field945: type=string, required=false, message=&quot;Field 945 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field946
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 946 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field946: type=string, required=false, message=&quot;Field 946 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field947
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 947 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field947: type=string, required=false, message=&quot;Field 947 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field948
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 948 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field948: type=string, required=false, message=&quot;Field 948 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field949
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 949 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field949: type=string, required=false, message=&quot;Field 949 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field950
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 950 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field950: type=string, required=false, message=&quot;Field 950 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field951
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 951 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field951: type=string, required=false, message=&quot;Field 951 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field952
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 952 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field952: type=string, required=false, message=&quot;Field 952 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field953
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 953 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field953: type=string, required=false, message=&quot;Field 953 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field954
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 954 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field954: type=string, required=false, message=&quot;Field 954 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field955
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 955 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field955: type=string, required=false, message=&quot;Field 955 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field956
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 956 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field956: type=string, required=false, message=&quot;Field 956 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field957
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 957 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field957: type=string, required=false, message=&quot;Field 957 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field958
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 958 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field958: type=string, required=false, message=&quot;Field 958 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field959
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 959 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field959: type=string, required=false, message=&quot;Field 959 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field960
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 960 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field960: type=string, required=false, message=&quot;Field 960 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field961
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 961 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field961: type=string, required=false, message=&quot;Field 961 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field962
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 962 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field962: type=string, required=false, message=&quot;Field 962 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field963
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 963 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field963: type=string, required=false, message=&quot;Field 963 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field964
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 964 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field964: type=string, required=false, message=&quot;Field 964 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field965
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 965 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field965: type=string, required=false, message=&quot;Field 965 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field966
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 966 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field966: type=string, required=false, message=&quot;Field 966 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field967
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 967 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field967: type=string, required=false, message=&quot;Field 967 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field968
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 968 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field968: type=string, required=false, message=&quot;Field 968 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field969
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 969 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field969: type=string, required=false, message=&quot;Field 969 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field970
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 970 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field970: type=string, required=false, message=&quot;Field 970 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field971
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 971 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field971: type=string, required=false, message=&quot;Field 971 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field972
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 972 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field972: type=string, required=false, message=&quot;Field 972 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field973
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 973 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field973: type=string, required=false, message=&quot;Field 973 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field974
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 974 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field974: type=string, required=false, message=&quot;Field 974 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field975
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 975 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field975: type=string, required=false, message=&quot;Field 975 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field976
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 976 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field976: type=string, required=false, message=&quot;Field 976 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field977
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 977 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field977: type=string, required=false, message=&quot;Field 977 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field978
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 978 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field978: type=string, required=false, message=&quot;Field 978 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field979
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 979 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field979: type=string, required=false, message=&quot;Field 979 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field980
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 980 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field980: type=string, required=false, message=&quot;Field 980 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field981
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 981 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field981: type=string, required=false, message=&quot;Field 981 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field982
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 982 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field982: type=string, required=false, message=&quot;Field 982 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field983
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 983 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field983: type=string, required=false, message=&quot;Field 983 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field984
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 984 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field984: type=string, required=false, message=&quot;Field 984 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field985
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 985 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field985: type=string, required=false, message=&quot;Field 985 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field986
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 986 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field986: type=string, required=false, message=&quot;Field 986 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field987
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 987 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field987: type=string, required=false, message=&quot;Field 987 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field988
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 988 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field988: type=string, required=false, message=&quot;Field 988 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field989
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 989 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field989: type=string, required=false, message=&quot;Field 989 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field990
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 990 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field990: type=string, required=false, message=&quot;Field 990 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field991
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 991 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field991: type=string, required=false, message=&quot;Field 991 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field992
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 992 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field992: type=string, required=false, message=&quot;Field 992 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field993
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 993 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field993: type=string, required=false, message=&quot;Field 993 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field994
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 994 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field994: type=string, required=false, message=&quot;Field 994 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field995
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 995 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field995: type=string, required=false, message=&quot;Field 995 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field996
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 996 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field996: type=string, required=false, message=&quot;Field 996 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field997
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 997 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field997: type=string, required=false, message=&quot;Field 997 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field998
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 998 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field998: type=string, required=false, message=&quot;Field 998 for testing&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: field999
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Field 999 for testing&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field field999: type=string, required=false, message=&quot;Field 999 for testing&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 1000 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Error Handling and Edge Cases &gt; Contract Error Recovery and Robustness &gt; should handle concurrent contract schema processing" time="0.00539">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-0
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName0&apos;[39m, [32m&apos;version0&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName0
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 0 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName0: type=string, required=true, message=&quot;Contract 0 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version0
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 0 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version0: type=string, required=false, message=&quot;Contract 0 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-1
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName1&apos;[39m, [32m&apos;version1&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName1
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 1 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName1: type=string, required=true, message=&quot;Contract 1 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version1
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 1 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version1: type=string, required=false, message=&quot;Contract 1 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-2
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName2&apos;[39m, [32m&apos;version2&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName2
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 2 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName2: type=string, required=true, message=&quot;Contract 2 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version2
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 2 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version2: type=string, required=false, message=&quot;Contract 2 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-3
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName3&apos;[39m, [32m&apos;version3&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName3
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 3 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName3: type=string, required=true, message=&quot;Contract 3 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version3
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 3 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version3: type=string, required=false, message=&quot;Contract 3 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-4
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName4&apos;[39m, [32m&apos;version4&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName4
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 4 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName4: type=string, required=true, message=&quot;Contract 4 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version4
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 4 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version4: type=string, required=false, message=&quot;Contract 4 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-5
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName5&apos;[39m, [32m&apos;version5&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName5
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 5 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName5: type=string, required=true, message=&quot;Contract 5 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version5
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 5 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version5: type=string, required=false, message=&quot;Contract 5 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-6
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName6&apos;[39m, [32m&apos;version6&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName6
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 6 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName6: type=string, required=true, message=&quot;Contract 6 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version6
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 6 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version6: type=string, required=false, message=&quot;Contract 6 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-7
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName7&apos;[39m, [32m&apos;version7&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName7
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 7 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName7: type=string, required=true, message=&quot;Contract 7 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version7
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 7 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version7: type=string, required=false, message=&quot;Contract 7 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-8
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName8&apos;[39m, [32m&apos;version8&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName8
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 8 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName8: type=string, required=true, message=&quot;Contract 8 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version8
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 8 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version8: type=string, required=false, message=&quot;Contract 8 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for concurrent-contract-9
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName9&apos;[39m, [32m&apos;version9&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName9
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract 9 name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName9: type=string, required=true, message=&quot;Contract 9 name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: version9
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract 9 version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field version9: type=string, required=false, message=&quot;Contract 9 version&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Error Handling and Edge Cases &gt; Contract Error Recovery and Robustness &gt; should maintain consistent behavior across multiple contract calls" time="0.034714">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-0
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-1
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-2
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-3
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-4
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-5
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-6
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-7
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-8
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-9
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-10
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-11
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-12
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-13
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-14
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-15
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-16
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-17
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-18
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-19
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-20
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-21
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-22
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-23
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-24
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-25
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-26
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-27
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-28
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-29
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-30
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-31
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-32
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-33
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-34
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-35
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-36
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-37
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-38
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-39
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-40
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-41
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-42
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-43
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-44
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-45
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-46
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-47
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-48
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-49
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-50
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-51
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-52
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-53
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-54
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-55
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-56
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-57
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-58
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-59
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-60
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-61
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-62
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-63
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-64
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-65
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-66
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-67
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-68
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-69
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-70
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-71
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-72
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-73
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-74
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-75
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-76
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-77
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-78
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-79
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-80
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-81
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-82
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-83
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-84
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-85
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-86
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-87
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-88
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-89
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-90
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-91
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-92
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-93
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-94
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-95
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-96
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-97
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-98
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options
🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for consistency-test-99
🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [ [32m&apos;contractName&apos;[39m, [32m&apos;features&apos;[39m ]
🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 2 keys
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: contractName
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;required&apos;[39m, description: [32m&apos;Contract name&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field contractName: type=string, required=true, message=&quot;Contract name&quot;
🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: features
🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;array&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Contract features&apos;[39m },
  items: [ { type: [32m&apos;string&apos;[39m } ]
}
🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field features: type=array, required=false, message=&quot;Contract features&quot;
🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 2 requirements for options

            </system-out>
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Static Cross-Package Compatibility Matrix &gt; should test static compatibility declarations (what smart-contract package controls)" time="0.0006846">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Static Cross-Package Compatibility Matrix &gt; should validate environment-aware compatibility (crosschain example)" time="0.0004103">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Static Cross-Package Compatibility Matrix &gt; should handle contract compatibility with crosschain module" time="0.0001952">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Static Cross-Package Compatibility Matrix &gt; should handle environment-based contract compatibility validation" time="0.0001828">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Cross-Package Contract Integration Tests &gt; should validate contract adapter compatibility with wallet modules" time="0.0001908">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Cross-Package Contract Integration Tests &gt; should handle environment-based contract validation" time="0.0002112">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Contract Performance and Load Tests &gt; should handle rapid contract adapter lookups efficiently" time="0.0015735">
        </testcase>
        <testcase classname="tests/00_Registry.test.ts" name="Smart Contract Auto-Generation System Tests &gt; Contract Performance and Load Tests &gt; should handle bulk contract requirement generation efficiently" time="0.1105841">
            <system-out>
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-0
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-1
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-2
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-3
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-4
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-5
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-6
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-7
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-8
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-9
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-10
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-11
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-12
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-13
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-14
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-15
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-16
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-17
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-18
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-19
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-20
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-21
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-22
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-23
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-24
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-25
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-26
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-27
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-28
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-29
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-30
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-31
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-32
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-33
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-34
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-35
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-36
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-37
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-38
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-39
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-40
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-41
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-42
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-43
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-44
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-45
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-46
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-47
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-48
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-49
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-50
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-51
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-52
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-53
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-54
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-55
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-56
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-57
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-58
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-59
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-60
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-61
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-62
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-63
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-64
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-65
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-66
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-67
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-68
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-69
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-70
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-71
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-72
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-73
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-74
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-75
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-76
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-77
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-78
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-79
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-80
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-81
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-82
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-83
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-84
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-85
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-86
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-87
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-88
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-89
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-90
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-91
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-92
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-93
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-94
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-95
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-96
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-97
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-98
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔍 [getRequirements] Starting analysis for bulk-contract-test-99
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔬 [analyzeJoiSchema] Analyzing schema at path: options
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema description type: object
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📋 [analyzeJoiSchema] Schema keys: [
  [32m&apos;workDir&apos;[39m,
  [32m&apos;hardhatConfig&apos;[39m,
  [32m&apos;preserveOutput&apos;[39m,
  [32m&apos;providerConfig&apos;[39m,
  [32m&apos;compilerSettings&apos;[39m,
  [32m&apos;solcVersion&apos;[39m
]
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] ✅ [analyzeJoiSchema] Processing object schema with 6 keys
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: workDir
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Working directory for contract generation&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field workDir: type=string, required=false, message=&quot;Working directory for contract generation&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Hardhat configuration options&apos;[39m
  },
  keys: {
    configFileName: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    customSettings: { type: [32m&apos;object&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field hardhatConfig: type=object, required=false, message=&quot;Hardhat configuration options&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: hardhatConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: preserveOutput
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;boolean&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    default: [33mfalse[39m,
    description: [32m&apos;Whether to preserve generated files&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field preserveOutput: type=boolean, required=false, message=&quot;Whether to preserve generated files&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: providerConfig
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: {
    presence: [32m&apos;optional&apos;[39m,
    description: [32m&apos;Network provider configuration&apos;[39m
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field providerConfig: type=object, required=false, message=&quot;Network provider configuration&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;object&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler settings&apos;[39m },
  keys: {
    solcVersion: { type: [32m&apos;string&apos;[39m, flags: [36m[Object][39m },
    optimizer: { type: [32m&apos;boolean&apos;[39m, flags: [36m[Object][39m },
    optimizerRuns: { type: [32m&apos;number&apos;[39m, flags: [36m[Object][39m }
  }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field compilerSettings: type=object, required=false, message=&quot;Solidity compiler settings&quot;
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔄 [analyzeJoiSchema] Recursing into nested object: compilerSettings
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🔑 [analyzeJoiSchema] Processing field: solcVersion
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📝 [analyzeJoiSchema] Field description: {
  type: [32m&apos;string&apos;[39m,
  flags: { presence: [32m&apos;optional&apos;[39m, description: [32m&apos;Solidity compiler version&apos;[39m }
}
🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 🤖 [MS3-PKG] [DEBUG] 📊 [analyzeJoiSchema] Field solcVersion: type=string, required=false, message=&quot;Solidity compiler version&quot;
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] 📊 [analyzeJoiSchema] Generated 11 requirements for options

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/01_Core.test.ts" timestamp="2025-09-04T15:19:08.657Z" hostname="GA" tests="1" failures="0" errors="0" skipped="0" time="0.0023846">
        <testcase classname="tests/01_Core.test.ts" name="Core Contract Tests &gt; should export testAdapterPattern function" time="0.0012278">
        </testcase>
    </testsuite>
    <testsuite name="tests/02_IBaseContractHandler.test.ts" timestamp="2025-09-04T15:19:08.657Z" hostname="GA" tests="1" failures="0" errors="0" skipped="0" time="0.0023608">
        <testcase classname="tests/02_IBaseContractHandler.test.ts" name="IBaseContractHandler Tests &gt; should export testContractHandlerInterface function" time="0.0012347">
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Solidity/03_ERC20.test.ts" timestamp="2025-09-04T15:19:08.658Z" hostname="GA" tests="17" failures="0" errors="0" skipped="14" time="93.6685331">
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="IBaseContractHandler Tests &gt; should export testContractHandlerInterface function" time="0.0012805">
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; OpenZeppelinAdapter - Interface Implementation &gt; supports contract handler interface" time="0.0031728">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate basic ERC20 with required options" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with burnable feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with pausable feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with premint feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with mintable feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with permit feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with voting feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with flash minting feature" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with custom access control" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; ERC20 Options Tests &gt; should generate ERC20 with multiple features combined" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; Full Integration Tests &gt; Standard ERC20 Deployment and Functionality &gt; should deploy ERC20 with multiple features and verify functionality" time="93.6619827">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://ethereum-sepolia-rpc.publicnode.com
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://ethereum-sepolia-rpc.publicnode.com

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc20

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;MultiFeatureToken&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\MultiFeatureToken_TXVsdGlG

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract MultiFeatureToken in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\MultiFeatureToken_TXVsdGlG with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\MultiFeatureToken_TXVsdGlG): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\MultiFeatureToken_TXVsdGlG\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for MultiFeatureToken: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\MultiFeatureToken_TXVsdGlG\artifacts\contracts\MultiFeatureToken.sol\MultiFeatureToken.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Estimating gas for transaction: {
  to: [90mundefined[39m,
  data: [32m&apos;0x610160604052348015610010575f5ffd5b50604051611a19380380611a1983398101604081905261002f91610473565b6040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b8152506040518060400160405280600381526020016213519560ea1b81525081600390816100ca919061053b565b5060046100d7828261053b565b5050506001600160a01b03811661010857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610111816101e9565b5061011d826006610242565b6101205261012c816007610242565b61014052815160208084019190912060e052815190820120610100524660a0526101b860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506101e2826101d26012600a6106ec565b6101dd906064610701565b610274565b5050610783565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208351101561025d57610256836102ac565b905061026e565b81610268848261053b565b5060ff90505b92915050565b6001600160a01b03821661029d5760405163ec442f0560e01b81525f60048201526024016100ff565b6102a85f83836102e9565b5050565b5f5f829050601f815111156102d6578260405163305a27a960e01b81526004016100ff9190610718565b80516102e18261074d565b179392505050565b6102f48383836102f9565b505050565b61030161030c565b6102f4838383610332565b60055460ff16156103305760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661035c578060025f8282546103519190610770565b909155506103cc9050565b6001600160a01b0383165f90815260208190526040902054818110156103ae5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ff565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103e857600280548290039055610406565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044b91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461046e575f5ffd5b919050565b5f5f60408385031215610484575f5ffd5b61048d83610458565b915061049b60208401610458565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104cc57607f821691505b6020821081036104ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102f457805f5260205f20601f840160051c810160208510156105155750805b601f840160051c820191505b81811015610534575f8155600101610521565b5050505050565b81516001600160401b03811115610554576105546104a4565b6105688161056284546104b8565b846104f0565b6020601f82116001811461059a575f83156105835750848201515b5f19600385901b1c1916600184901b178455610534565b5f84815260208120601f198516915b828110156105c957878501518255602094850194600190920191016105a9565b50848210156105e657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561064457808504811115610628576106286105f5565b600184161561063657908102905b60019390931c92800261060d565b935093915050565b5f8261065a5750600161026e565b8161066657505f61026e565b816001811461067c5760028114610686576106a2565b600191505061026e565b60ff841115610697576106976105f5565b50506001821b61026e565b5060208310610133831016604e8410600b84101617156106c5575081810a61026e565b6106d15f198484610609565b805f19048211156106e4576106e46105f5565b029392505050565b5f6106fa60ff84168361064c565b9392505050565b808202811582820484141761026e5761026e6105f5565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104ea575f1960209190910360031b1b16919050565b8082018082111561026e5761026e6105f5565b60805160a05160c05160e0516101005161012051610140516112456107d45f395f610a1401525f6109e701525f61080d01525f6107e501525f61074001525f61076a01525f61079401526112455ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f5ffd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f5ffd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f5ffd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f5ffd5b610149610314565b6040516101569190610faa565b60405180910390f35b61017261016d366004610fde565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611006565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fde565b610400565b6101c66101e9366004611040565b610416565b60055460ff16610172565b610186610207366004611057565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fde565b610434565b61018661024a366004611057565b610449565b6101c6610466565b61025f610476565b6040516101569796959493929190611070565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fde565b6104c7565b6101c66102c4366004611106565b6104d4565b6101866102d7366004611173565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611057565b61060f565b606060038054610323906111a4565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a4565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d7565b506001949350505050565b5f6103e9610734565b905090565b6103f661085d565b6103fe610890565b565b61040861085d565b61041282826108e2565b5050565b6104203382610916565b50565b61042b61085d565b6103fe5f61094a565b61043f82338361065b565b6104128282610916565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085d565b6103fe6109a3565b5f6060805f5f5f60606104876109e0565b61048f610a0d565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a4565b5f336103b18185856106d7565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a3a565b90505f6105b182878787610a66565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085d565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b6104208161094a565b6106568383836001610a92565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106d157818110156106c357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d184848484035f610a92565b50505050565b6001600160a01b03831661070057604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107295760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b64565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078c57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b657507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610898610b6f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090b5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b64565b6001600160a01b03821661093f57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b64565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109ab610b92565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c53390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb6565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb6565b5f6103b7610a46610734565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f610a7688888888610c5f565b925092509250610a868282610d27565b50909695505050505050565b6001600160a01b038416610abb5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae457604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5691815260200190565b60405180910390a350505050565b610656838383610ddf565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b81526004016040518091&apos;[39m... 3492 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Gas estimation for:  {
  to: [90mundefined[39m,
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x610160604052348015610010575f5ffd5b50604051611a19380380611a1983398101604081905261002f91610473565b6040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b8152506040518060400160405280600381526020016213519560ea1b81525081600390816100ca919061053b565b5060046100d7828261053b565b5050506001600160a01b03811661010857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610111816101e9565b5061011d826006610242565b6101205261012c816007610242565b61014052815160208084019190912060e052815190820120610100524660a0526101b860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506101e2826101d26012600a6106ec565b6101dd906064610701565b610274565b5050610783565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208351101561025d57610256836102ac565b905061026e565b81610268848261053b565b5060ff90505b92915050565b6001600160a01b03821661029d5760405163ec442f0560e01b81525f60048201526024016100ff565b6102a85f83836102e9565b5050565b5f5f829050601f815111156102d6578260405163305a27a960e01b81526004016100ff9190610718565b80516102e18261074d565b179392505050565b6102f48383836102f9565b505050565b61030161030c565b6102f4838383610332565b60055460ff16156103305760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661035c578060025f8282546103519190610770565b909155506103cc9050565b6001600160a01b0383165f90815260208190526040902054818110156103ae5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ff565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103e857600280548290039055610406565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044b91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461046e575f5ffd5b919050565b5f5f60408385031215610484575f5ffd5b61048d83610458565b915061049b60208401610458565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104cc57607f821691505b6020821081036104ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102f457805f5260205f20601f840160051c810160208510156105155750805b601f840160051c820191505b81811015610534575f8155600101610521565b5050505050565b81516001600160401b03811115610554576105546104a4565b6105688161056284546104b8565b846104f0565b6020601f82116001811461059a575f83156105835750848201515b5f19600385901b1c1916600184901b178455610534565b5f84815260208120601f198516915b828110156105c957878501518255602094850194600190920191016105a9565b50848210156105e657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561064457808504811115610628576106286105f5565b600184161561063657908102905b60019390931c92800261060d565b935093915050565b5f8261065a5750600161026e565b8161066657505f61026e565b816001811461067c5760028114610686576106a2565b600191505061026e565b60ff841115610697576106976105f5565b50506001821b61026e565b5060208310610133831016604e8410600b84101617156106c5575081810a61026e565b6106d15f198484610609565b805f19048211156106e4576106e46105f5565b029392505050565b5f6106fa60ff84168361064c565b9392505050565b808202811582820484141761026e5761026e6105f5565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104ea575f1960209190910360031b1b16919050565b8082018082111561026e5761026e6105f5565b60805160a05160c05160e0516101005161012051610140516112456107d45f395f610a1401525f6109e701525f61080d01525f6107e501525f61074001525f61076a01525f61079401526112455ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f5ffd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f5ffd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f5ffd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f5ffd5b610149610314565b6040516101569190610faa565b60405180910390f35b61017261016d366004610fde565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611006565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fde565b610400565b6101c66101e9366004611040565b610416565b60055460ff16610172565b610186610207366004611057565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fde565b610434565b61018661024a366004611057565b610449565b6101c6610466565b61025f610476565b6040516101569796959493929190611070565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fde565b6104c7565b6101c66102c4366004611106565b6104d4565b6101866102d7366004611173565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611057565b61060f565b606060038054610323906111a4565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a4565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d7565b506001949350505050565b5f6103e9610734565b905090565b6103f661085d565b6103fe610890565b565b61040861085d565b61041282826108e2565b5050565b6104203382610916565b50565b61042b61085d565b6103fe5f61094a565b61043f82338361065b565b6104128282610916565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085d565b6103fe6109a3565b5f6060805f5f5f60606104876109e0565b61048f610a0d565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a4565b5f336103b18185856106d7565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a3a565b90505f6105b182878787610a66565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085d565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b6104208161094a565b6106568383836001610a92565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106d157818110156106c357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d184848484035f610a92565b50505050565b6001600160a01b03831661070057604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107295760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b64565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078c57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b657507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610898610b6f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090b5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b64565b6001600160a01b03821661093f57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b64565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109ab610b92565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c53390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb6565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb6565b5f6103b7610a46610734565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f610a7688888888610c5f565b925092509250610a868282610d27565b50909695505050505050565b6001600160a01b038416610abb5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae457604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5691815260200190565b60405180910390a350505050565b610656838383610ddf565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b81526004016040518091&apos;[39m... 3492 more characters,
  from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
}
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Gas estimation results: {
  gasLimit: [33m1222737n[39m,
  gasPrice: [32m&apos;3142858&apos;[39m,
  maxFeePerGas: [32m&apos;5232922&apos;[39m,
  maxPriorityFeePerGas: [32m&apos;1052794&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x610160604052348015610010575f5ffd5b50604051611a19380380611a1983398101604081905261002f91610473565b6040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b8152506040518060400160405280600381526020016213519560ea1b81525081600390816100ca919061053b565b5060046100d7828261053b565b5050506001600160a01b03811661010857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610111816101e9565b5061011d826006610242565b6101205261012c816007610242565b61014052815160208084019190912060e052815190820120610100524660a0526101b860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506101e2826101d26012600a6106ec565b6101dd906064610701565b610274565b5050610783565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208351101561025d57610256836102ac565b905061026e565b81610268848261053b565b5060ff90505b92915050565b6001600160a01b03821661029d5760405163ec442f0560e01b81525f60048201526024016100ff565b6102a85f83836102e9565b5050565b5f5f829050601f815111156102d6578260405163305a27a960e01b81526004016100ff9190610718565b80516102e18261074d565b179392505050565b6102f48383836102f9565b505050565b61030161030c565b6102f4838383610332565b60055460ff16156103305760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661035c578060025f8282546103519190610770565b909155506103cc9050565b6001600160a01b0383165f90815260208190526040902054818110156103ae5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ff565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103e857600280548290039055610406565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044b91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461046e575f5ffd5b919050565b5f5f60408385031215610484575f5ffd5b61048d83610458565b915061049b60208401610458565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104cc57607f821691505b6020821081036104ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102f457805f5260205f20601f840160051c810160208510156105155750805b601f840160051c820191505b81811015610534575f8155600101610521565b5050505050565b81516001600160401b03811115610554576105546104a4565b6105688161056284546104b8565b846104f0565b6020601f82116001811461059a575f83156105835750848201515b5f19600385901b1c1916600184901b178455610534565b5f84815260208120601f198516915b828110156105c957878501518255602094850194600190920191016105a9565b50848210156105e657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561064457808504811115610628576106286105f5565b600184161561063657908102905b60019390931c92800261060d565b935093915050565b5f8261065a5750600161026e565b8161066657505f61026e565b816001811461067c5760028114610686576106a2565b600191505061026e565b60ff841115610697576106976105f5565b50506001821b61026e565b5060208310610133831016604e8410600b84101617156106c5575081810a61026e565b6106d15f198484610609565b805f19048211156106e4576106e46105f5565b029392505050565b5f6106fa60ff84168361064c565b9392505050565b808202811582820484141761026e5761026e6105f5565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104ea575f1960209190910360031b1b16919050565b8082018082111561026e5761026e6105f5565b60805160a05160c05160e0516101005161012051610140516112456107d45f395f610a1401525f6109e701525f61080d01525f6107e501525f61074001525f61076a01525f61079401526112455ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f5ffd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f5ffd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f5ffd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f5ffd5b610149610314565b6040516101569190610faa565b60405180910390f35b61017261016d366004610fde565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611006565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fde565b610400565b6101c66101e9366004611040565b610416565b60055460ff16610172565b610186610207366004611057565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fde565b610434565b61018661024a366004611057565b610449565b6101c6610466565b61025f610476565b6040516101569796959493929190611070565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fde565b6104c7565b6101c66102c4366004611106565b6104d4565b6101866102d7366004611173565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611057565b61060f565b606060038054610323906111a4565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a4565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d7565b506001949350505050565b5f6103e9610734565b905090565b6103f661085d565b6103fe610890565b565b61040861085d565b61041282826108e2565b5050565b6104203382610916565b50565b61042b61085d565b6103fe5f61094a565b61043f82338361065b565b6104128282610916565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085d565b6103fe6109a3565b5f6060805f5f5f60606104876109e0565b61048f610a0d565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a4565b5f336103b18185856106d7565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a3a565b90505f6105b182878787610a66565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085d565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b6104208161094a565b6106568383836001610a92565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106d157818110156106c357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d184848484035f610a92565b50505050565b6001600160a01b03831661070057604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107295760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b64565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078c57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b657507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610898610b6f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090b5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b64565b6001600160a01b03821661093f57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b64565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109ab610b92565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c53390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb6565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb6565b5f6103b7610a46610734565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f610a7688888888610c5f565b925092509250610a868282610d27565b50909695505050505050565b6001600160a01b038416610abb5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae457604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5691815260200190565b60405180910390a350505050565b610656838383610ddf565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b81526004016040518091&apos;[39m... 3492 more characters,
  value: [32m&apos;0&apos;[39m,
  options: {
    gasLimit: [33m1467284n[39m,
    maxPriorityFeePerGas: [33m3000000000n[39m,
    maxFeePerGas: [33m15000000000n[39m
  }
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x610160604052348015610010575f5ffd5b50604051611a19380380611a1983398101604081905261002f91610473565b6040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280601181526020017026bab63a34a332b0ba3ab932aa37b5b2b760791b8152506040518060400160405280600381526020016213519560ea1b81525081600390816100ca919061053b565b5060046100d7828261053b565b5050506001600160a01b03811661010857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610111816101e9565b5061011d826006610242565b6101205261012c816007610242565b61014052815160208084019190912060e052815190820120610100524660a0526101b860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506101e2826101d26012600a6106ec565b6101dd906064610701565b610274565b5050610783565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208351101561025d57610256836102ac565b905061026e565b81610268848261053b565b5060ff90505b92915050565b6001600160a01b03821661029d5760405163ec442f0560e01b81525f60048201526024016100ff565b6102a85f83836102e9565b5050565b5f5f829050601f815111156102d6578260405163305a27a960e01b81526004016100ff9190610718565b80516102e18261074d565b179392505050565b6102f48383836102f9565b505050565b61030161030c565b6102f4838383610332565b60055460ff16156103305760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661035c578060025f8282546103519190610770565b909155506103cc9050565b6001600160a01b0383165f90815260208190526040902054818110156103ae5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100ff565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103e857600280548290039055610406565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044b91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461046e575f5ffd5b919050565b5f5f60408385031215610484575f5ffd5b61048d83610458565b915061049b60208401610458565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104cc57607f821691505b6020821081036104ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102f457805f5260205f20601f840160051c810160208510156105155750805b601f840160051c820191505b81811015610534575f8155600101610521565b5050505050565b81516001600160401b03811115610554576105546104a4565b6105688161056284546104b8565b846104f0565b6020601f82116001811461059a575f83156105835750848201515b5f19600385901b1c1916600184901b178455610534565b5f84815260208120601f198516915b828110156105c957878501518255602094850194600190920191016105a9565b50848210156105e657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561064457808504811115610628576106286105f5565b600184161561063657908102905b60019390931c92800261060d565b935093915050565b5f8261065a5750600161026e565b8161066657505f61026e565b816001811461067c5760028114610686576106a2565b600191505061026e565b60ff841115610697576106976105f5565b50506001821b61026e565b5060208310610133831016604e8410600b84101617156106c5575081810a61026e565b6106d15f198484610609565b805f19048211156106e4576106e46105f5565b029392505050565b5f6106fa60ff84168361064c565b9392505050565b808202811582820484141761026e5761026e6105f5565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156104ea575f1960209190910360031b1b16919050565b8082018082111561026e5761026e6105f5565b60805160a05160c05160e0516101005161012051610140516112456107d45f395f610a1401525f6109e701525f61080d01525f6107e501525f61074001525f61076a01525f61079401526112455ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b45780638da5cb5b116100795780638da5cb5b1461027257806395d89b411461029b578063a9059cbb146102a3578063d505accf146102b6578063dd62ed3e146102c9578063f2fde38b14610301575f5ffd5b8063715018a61461022157806379cc6790146102295780637ecebe001461023c5780638456cb591461024f57806384b0196e14610257575f5ffd5b80633644e515116101055780633644e515146101b65780633f4ba83a146101be57806340c10f19146101c857806342966c68146101db5780635c975abb146101ee57806370a08231146101f9575f5ffd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd1461018257806323b872dd14610194578063313ce567146101a7575b5f5ffd5b610149610314565b6040516101569190610faa565b60405180910390f35b61017261016d366004610fde565b6103a4565b6040519015158152602001610156565b6002545b604051908152602001610156565b6101726101a2366004611006565b6103bd565b60405160128152602001610156565b6101866103e0565b6101c66103ee565b005b6101c66101d6366004610fde565b610400565b6101c66101e9366004611040565b610416565b60055460ff16610172565b610186610207366004611057565b6001600160a01b03165f9081526020819052604090205490565b6101c6610423565b6101c6610237366004610fde565b610434565b61018661024a366004611057565b610449565b6101c6610466565b61025f610476565b6040516101569796959493929190611070565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610156565b6101496104b8565b6101726102b1366004610fde565b6104c7565b6101c66102c4366004611106565b6104d4565b6101866102d7366004611173565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c661030f366004611057565b61060f565b606060038054610323906111a4565b80601f016020809104026020016040519081016040528092919081815260200182805461034f906111a4565b801561039a5780601f106103715761010080835404028352916020019161039a565b820191905f5260205f20905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b5f336103b1818585610649565b60019150505b92915050565b5f336103ca85828561065b565b6103d58585856106d7565b506001949350505050565b5f6103e9610734565b905090565b6103f661085d565b6103fe610890565b565b61040861085d565b61041282826108e2565b5050565b6104203382610916565b50565b61042b61085d565b6103fe5f61094a565b61043f82338361065b565b6104128282610916565b6001600160a01b0381165f908152600860205260408120546103b7565b61046e61085d565b6103fe6109a3565b5f6060805f5f5f60606104876109e0565b61048f610a0d565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610323906111a4565b5f336103b18185856106d7565b834211156104fd5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105488c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f6105a282610a3a565b90505f6105b182878787610a66565b9050896001600160a01b0316816001600160a01b0316146105f8576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104f4565b6106038a8a8a610649565b50505050505050505050565b61061761085d565b6001600160a01b03811661064057604051631e4fbdf760e01b81525f60048201526024016104f4565b6104208161094a565b6106568383836001610a92565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156106d157818110156106c357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104f4565b6106d184848484035f610a92565b50505050565b6001600160a01b03831661070057604051634b637e8f60e11b81525f60048201526024016104f4565b6001600160a01b0382166107295760405163ec442f0560e01b81525f60048201526024016104f4565b610656838383610b64565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561078c57507f000000000000000000000000000000000000000000000000000000000000000046145b156107b657507f000000000000000000000000000000000000000000000000000000000000000090565b6103e9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146103fe5760405163118cdaa760e01b81523360048201526024016104f4565b610898610b6f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661090b5760405163ec442f0560e01b81525f60048201526024016104f4565b6104125f8383610b64565b6001600160a01b03821661093f57604051634b637e8f60e11b81525f60048201526024016104f4565b610412825f83610b64565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6109ab610b92565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108c53390565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006006610bb6565b60606103e97f00000000000000000000000000000000000000000000000000000000000000006007610bb6565b5f6103b7610a46610734565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f610a7688888888610c5f565b925092509250610a868282610d27565b50909695505050505050565b6001600160a01b038416610abb5760405163e602df0560e01b81525f60048201526024016104f4565b6001600160a01b038316610ae457604051634a1406b160e11b81525f60048201526024016104f4565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106d157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b5691815260200190565b60405180910390a350505050565b610656838383610ddf565b60055460ff166103fe57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103fe5760405163d93c066560e01b81526004016040518091&apos;[39m... 3492 more characters,
  nonce: [33m2790[39m,
  gasLimit: [33m1467284n[39m,
  maxFeePerGas: [33m15000000000n[39m,
  maxPriorityFeePerGas: [33m3000000000n[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xb211d6a7b58ab7cef72f156c1f830ed39fb1d33ea4e67053387a493687bed96d

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Estimating gas for transaction: {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x40c10f19000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f000000000000000000000000000000000000000000000001b1ae4d6e2ef500000&apos;[39m,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Gas estimation for:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x40c10f19000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f000000000000000000000000000000000000000000000001b1ae4d6e2ef500000&apos;[39m,
  from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
}
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Gas estimation results: {
  gasLimit: [33m54596n[39m,
  gasPrice: [32m&apos;3323930&apos;[39m,
  maxFeePerGas: [32m&apos;5595250&apos;[39m,
  maxPriorityFeePerGas: [32m&apos;1052610&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x40c10f19000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f000000000000000000000000000000000000000000000001b1ae4d6e2ef500000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x40c10f19000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f000000000000000000000000000000000000000000000001b1ae4d6e2ef500000&apos;[39m,
  nonce: [33m2791[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xebe36bd2ca7187553f0a45b803c45af9889fb39e6e3bb7a7ad8abde68b37285a

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  nonce: [33m2792[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x271dd3c340336a44b7bc48dcb880616e2fa45219b5ef4e1d393e95ae10ac3ecc

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
  nonce: [33m2793[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sender address: 0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  nonce: [33m2793[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x9aa79480e819a1a7a61bcb6363865b91c33069bc84e93d9499ec8f7c069680b8

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
  nonce: [33m2794[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xd74023a862993675ab246773e57291417d957ec52f1bbefdec56e7043bfd0851

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000055de6a779bbac0000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
  data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000055de6a779bbac0000&apos;[39m,
  nonce: [33m2795[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xe6333b66ca33527ab06410d40f54eca991d652af9beea8fa56927b5142ce38d0

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] Error decoded: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
  code: [32m&apos;CALL_EXCEPTION&apos;[39m,
  action: [32m&apos;estimateGas&apos;[39m,
  data: [32m&apos;0xd93c0665&apos;[39m,
  reason: [1mnull[22m,
  transaction: {
    to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
    data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
    from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
  },
  invocation: [1mnull[22m,
  revert: [1mnull[22m,
  shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
  info: {
    error: { code: [33m3[39m, message: [32m&apos;execution reverted&apos;[39m, data: [32m&apos;0xd93c0665&apos;[39m },
    payload: {
      method: [32m&apos;eth_estimateGas&apos;[39m,
      params: [36m[Array][39m,
      id: [33m70[39m,
      jsonrpc: [32m&apos;2.0&apos;[39m
    }
  }
}
🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] Transaction failed: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
  code: [32m&apos;CALL_EXCEPTION&apos;[39m,
  action: [32m&apos;estimateGas&apos;[39m,
  data: [32m&apos;0xd93c0665&apos;[39m,
  reason: [1mnull[22m,
  transaction: {
    to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
    data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
    from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
  },
  invocation: [1mnull[22m,
  revert: [1mnull[22m,
  shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
  info: {
    error: { code: [33m3[39m, message: [32m&apos;execution reverted&apos;[39m, data: [32m&apos;0xd93c0665&apos;[39m },
    payload: {
      method: [32m&apos;eth_estimateGas&apos;[39m,
      params: [36m[Array][39m,
      id: [33m70[39m,
      jsonrpc: [32m&apos;2.0&apos;[39m
    }
  }
}
🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [AdapterError] AdapterError: Failed to send transaction: execution reverted (unknown custom error) {
  code: [32m&apos;TRANSACTION_FAILED&apos;[39m,
  methodName: [32m&apos;sendTransaction&apos;[39m,
  details: [90mundefined[39m,
  cause: {
    name: [32m&apos;Error&apos;[39m,
    message: [32m&apos;execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)&apos;[39m,
    stack: [32m&apos;Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)\n&apos;[39m +
      [32m&apos;    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/utils/errors.ts:698:21)\n&apos;[39m +
      [32m&apos;    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/abi/abi-coder.ts:118:12)\n&apos;[39m +
      [32m&apos;    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/abi/abi-coder.ts:235:16)\n&apos;[39m +
      [32m&apos;    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/providers/provider-jsonrpc.ts:1016:32)\n&apos;[39m +
      [32m&apos;    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/providers/provider-jsonrpc.ts:571:45\n&apos;[39m +
      [32m&apos;    at processTicksAndRejections (node:internal/process/task_queues:105:5)&apos;[39m,
    data: [32m&apos;0xd93c0665&apos;[39m,
    info: { error: [36m[Object][39m, payload: [36m[Object][39m }
  }
}

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [WalletAdapter(ethers) Error] Method &apos;writeContract&apos; failed: Failed to send transaction: execution reverted (unknown custom error) AdapterError: Failed to send transaction: execution reverted (unknown custom error)
    at _EvmWalletAdapter.sendTransaction (C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\wallet\src\adapters\ethers\ethersWallet.ts:391:13)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at Proxy.&lt;anonymous&gt; (C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\shared\src\errors\proxy.ts:102:22)
    at [90mC:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\[39mtests\adapters\Solidity\03_ERC20.test.ts:575:26
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  code: [32m&apos;TRANSACTION_FAILED&apos;[39m,
  cause: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
      at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
      at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
      at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
      at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
      at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
  [90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
    code: [32m&apos;CALL_EXCEPTION&apos;[39m,
    action: [32m&apos;estimateGas&apos;[39m,
    data: [32m&apos;0xd93c0665&apos;[39m,
    reason: [1mnull[22m,
    transaction: {
      to: [32m&apos;0x98f7699e7A15c289eed3B4eB92f6827F677Ff2A6&apos;[39m,
      data: [32m&apos;0xa9059cbb000000000000000000000000d516d0139efaf0729dd682786d5eeb705003d0f00000000000000000000000000000000000000000000000000de0b6b3a7640000&apos;[39m,
      from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
    },
    invocation: [1mnull[22m,
    revert: [1mnull[22m,
    shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
    info: { error: [36m[Object][39m, payload: [36m[Object][39m }
  },
  methodName: [32m&apos;sendTransaction&apos;[39m,
  details: [90mundefined[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; Full Integration Tests &gt; Proxy Artifact Preservation Tests &gt; With preserveOutput: false &gt; UUPS Proxy: should NOT preserve proxy artifacts in workDir" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; Full Integration Tests &gt; Proxy Artifact Preservation Tests &gt; With preserveOutput: true &gt; UUPS Proxy: should PRESERVE proxy artifacts in workDir/m3s_proxies_cache" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; Full Integration Tests &gt; General Proxy Functionality Tests &gt; UUPS ERC20 Proxy: should deploy and verify functionality" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/adapters/Solidity/03_ERC20.test.ts" name="OpenZeppelinAdapter Tests &gt; Full Integration Tests &gt; General Proxy Functionality Tests &gt; Transparent ERC20 Proxy: should deploy and verify functionality" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Solidity/04_ERC721.test.ts" timestamp="2025-09-04T15:19:08.668Z" hostname="GA" tests="15" failures="0" errors="0" skipped="0" time="136.0503566">
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate basic ERC721 with required options" time="0.0401516">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with baseUri option" time="0.0052828">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with enumerable feature" time="0.0032018">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with URI storage" time="0.002751">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with burnable feature" time="0.0032336">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with pausable feature" time="0.0033683">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with mintable feature" time="0.0020408">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with incremental IDs" time="0.0027534">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with votes feature" time="0.0027748">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with custom access control" time="0.0044321">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with multiple features combined" time="0.0025023">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="ERC721 Options Tests &gt; should generate ERC721 with upgradeability" time="0.0025218">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="Full ERC721 Integration Tests &gt; should deploy ERC721 with multiple features and verify functionality" time="43.252881">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;ComplexNFT&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexNFT_Q29tcGxl

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract ComplexNFT in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexNFT_Q29tcGxl with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexNFT_Q29tcGxl): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexNFT_Q29tcGxl\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for ComplexNFT: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexNFT_Q29tcGxl\artifacts\contracts\ComplexNFT.sol\ComplexNFT.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;&apos;[39m... 4306 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;&apos;[39m... 4306 more characters,
  nonce: [33m2763[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x0131e176e745211d608ea330a25bde8471e0cf54173e070d0cadaa7651574bac

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0x0131e176e745211d608ea330a25bde8471e0cf54173e070d0cadaa7651574bac. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0xd204c45e000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0xd204c45e000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2764[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x5c16e9e3f11e94328385b05c89e532c0a4746bde7bf5ba2693be4e2dbf37c527

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0x5c16e9e3f11e94328385b05c89e532c0a4746bde7bf5ba2693be4e2dbf37c527. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  nonce: [33m2765[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xfddfd922313b3a35922f58321eba64f3fca9b5993fa648b4af2aa7dd5a407b3b

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xfddfd922313b3a35922f58321eba64f3fca9b5993fa648b4af2aa7dd5a407b3b. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
  data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2766[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sender address: 0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] Error decoded: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0x42966c680000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
  code: [32m&apos;CALL_EXCEPTION&apos;[39m,
  action: [32m&apos;estimateGas&apos;[39m,
  data: [32m&apos;0xd93c0665&apos;[39m,
  reason: [1mnull[22m,
  transaction: {
    to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
    data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
    from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
  },
  invocation: [1mnull[22m,
  revert: [1mnull[22m,
  shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
  info: {
    error: { code: [33m3[39m, message: [32m&apos;execution reverted&apos;[39m, data: [32m&apos;0xd93c0665&apos;[39m },
    payload: {
      method: [32m&apos;eth_estimateGas&apos;[39m,
      params: [36m[Array][39m,
      id: [33m60[39m,
      jsonrpc: [32m&apos;2.0&apos;[39m
    }
  }
}
🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] Transaction failed: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0x42966c680000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
  code: [32m&apos;CALL_EXCEPTION&apos;[39m,
  action: [32m&apos;estimateGas&apos;[39m,
  data: [32m&apos;0xd93c0665&apos;[39m,
  reason: [1mnull[22m,
  transaction: {
    to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
    data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
    from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
  },
  invocation: [1mnull[22m,
  revert: [1mnull[22m,
  shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
  info: {
    error: { code: [33m3[39m, message: [32m&apos;execution reverted&apos;[39m, data: [32m&apos;0xd93c0665&apos;[39m },
    payload: {
      method: [32m&apos;eth_estimateGas&apos;[39m,
      params: [36m[Array][39m,
      id: [33m60[39m,
      jsonrpc: [32m&apos;2.0&apos;[39m
    }
  }
}
🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [AdapterError] AdapterError: Failed to send transaction: execution reverted (unknown custom error) {
  code: [32m&apos;TRANSACTION_FAILED&apos;[39m,
  methodName: [32m&apos;sendTransaction&apos;[39m,
  details: [90mundefined[39m,
  cause: {
    name: [32m&apos;Error&apos;[39m,
    message: [32m&apos;execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0x42966c680000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)&apos;[39m,
    stack: [32m&apos;Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0x42966c680000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)\n&apos;[39m +
      [32m&apos;    at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/utils/errors.ts:698:21)\n&apos;[39m +
      [32m&apos;    at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/abi/abi-coder.ts:118:12)\n&apos;[39m +
      [32m&apos;    at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/abi/abi-coder.ts:235:16)\n&apos;[39m +
      [32m&apos;    at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/providers/provider-jsonrpc.ts:1016:32)\n&apos;[39m +
      [32m&apos;    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/ethers/src.ts/providers/provider-jsonrpc.ts:571:45\n&apos;[39m +
      [32m&apos;    at processTicksAndRejections (node:internal/process/task_queues:105:5)&apos;[39m,
    data: [32m&apos;0xd93c0665&apos;[39m,
    info: { error: [36m[Object][39m, payload: [36m[Object][39m }
  }
}

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [WalletAdapter(ethers) Error] Method &apos;writeContract&apos; failed: Failed to send transaction: execution reverted (unknown custom error) AdapterError: Failed to send transaction: execution reverted (unknown custom error)
    at _EvmWalletAdapter.sendTransaction (C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\wallet\src\adapters\ethers\ethersWallet.ts:391:13)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at Proxy.&lt;anonymous&gt; (C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\shared\src\errors\proxy.ts:102:22)
    at [90mC:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\[39mtests\adapters\Solidity\04_ERC721.test.ts:526:26
    at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  code: [32m&apos;TRANSACTION_FAILED&apos;[39m,
  cause: Error: execution reverted (unknown custom error) (action=&quot;estimateGas&quot;, data=&quot;0xd93c0665&quot;, reason=null, transaction={ &quot;data&quot;: &quot;0x42966c680000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;from&quot;: &quot;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&quot;, &quot;to&quot;: &quot;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&quot; }, invocation=null, revert=null, code=CALL_EXCEPTION, version=6.15.0)
      at makeError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/utils/errors.ts:698:21)
      at getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:118:12)
      at Function.getBuiltinCallException (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/abi/abi-coder.ts:235:16)
      at JsonRpcProvider.getRpcError (file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:1016:32)
      at file:///C:/Users/gunne/Desktop/M3S-GITHUB/MS3/node_modules/[4methers[24m/src.ts/providers/provider-jsonrpc.ts:571:45
  [90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
    code: [32m&apos;CALL_EXCEPTION&apos;[39m,
    action: [32m&apos;estimateGas&apos;[39m,
    data: [32m&apos;0xd93c0665&apos;[39m,
    reason: [1mnull[22m,
    transaction: {
      to: [32m&apos;0x3192818E23a96D9D52dFD21F982C5750983f4aBD&apos;[39m,
      data: [32m&apos;0x42966c680000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
      from: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m
    },
    invocation: [1mnull[22m,
    revert: [1mnull[22m,
    shortMessage: [32m&apos;execution reverted (unknown custom error)&apos;[39m,
    info: { error: [36m[Object][39m, payload: [36m[Object][39m }
  },
  methodName: [32m&apos;sendTransaction&apos;[39m,
  details: [90mundefined[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="Full ERC721 Integration Tests &gt; should deploy UUPS ERC721 proxy and verify functionality" time="46.2327809">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;UUPSNFT&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSNFT_VVVQU05G

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract UUPSNFT in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSNFT_VVVQU05G with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSNFT_VVVQU05G): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSNFT_VVVQU05G\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for UUPSNFT: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSNFT_VVVQU05G\artifacts\contracts\UUPSNFT.sol\UUPSNFT.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Using directory for proxy compilation: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing proxy compile: cd &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS&quot; &amp;&amp; npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Proxy compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.22 (evm target: shanghai)

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Reading proxy artifact: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\artifacts\contracts\M3S_ERC1967Proxy.sol\M3S_ERC1967Proxy.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Preserving output for proxy in: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611cdb6100f95f395f8181610b4b01528181610b740152610cb30152611cdb5ff3fe608060405260043610610161575f3560e01c806370a08231116100cd578063a22cb46511610087578063c4d66de811610062578063c4d66de81461041e578063c87b56dd1461043d578063e985e9c51461045c578063f2fde38b1461047b575f5ffd5b8063a22cb465146103b0578063ad3cb1cc146103cf578063b88d4fde146103ff575f5ffd5b806370a08231146102fa578063715018a6146103195780638456cb591461032d5780638da5cb5b1461034157806395d89b411461037d578063a144819414610391575f5ffd5b806342842e0e1161011e57806342842e0e1461024557806342966c68146102645780634f1ef2861461028357806352d1902d146102965780635c975abb146102b85780636352211e146102db575f5ffd5b806301ffc9a71461016557806306fdde0314610199578063081812fc146101ba578063095ea7b3146101f157806323b872dd146102125780633f4ba83a14610231575b5f5ffd5b348015610170575f5ffd5b5061018461017f3660046117aa565b61049a565b60405190151581526020015b60405180910390f35b3480156101a4575f5ffd5b506101ad6104eb565b60405161019091906117f3565b3480156101c5575f5ffd5b506101d96101d4366004611805565b61058c565b6040516001600160a01b039091168152602001610190565b3480156101fc575f5ffd5b5061021061020b366004611837565b6105a0565b005b34801561021d575f5ffd5b5061021061022c36600461185f565b6105af565b34801561023c575f5ffd5b5061021061063d565b348015610250575f5ffd5b5061021061025f36600461185f565b61064f565b34801561026f575f5ffd5b5061021061027e366004611805565b61066e565b610210610291366004611938565b610679565b3480156102a1575f5ffd5b506102aa610694565b604051908152602001610190565b3480156102c3575f5ffd5b505f516020611c865f395f51905f525460ff16610184565b3480156102e6575f5ffd5b506101d96102f5366004611805565b6106af565b348015610305575f5ffd5b506102aa610314366004611983565b6106b9565b348015610324575f5ffd5b50610210610711565b348015610338575f5ffd5b50610210610722565b34801561034c575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101d9565b348015610388575f5ffd5b506101ad610732565b34801561039c575f5ffd5b506102106103ab366004611837565b610770565b3480156103bb575f5ffd5b506102106103ca36600461199c565b610782565b3480156103da575f5ffd5b506101ad604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561040a575f5ffd5b506102106104193660046119d5565b61078d565b348015610429575f5ffd5b50610210610438366004611983565b6107a5565b348015610448575f5ffd5b506101ad610457366004611805565b6108fb565b348015610467575f5ffd5b50610184610476366004611a39565b61096c565b348015610486575f5ffd5b50610210610495366004611983565b6109b8565b5f6001600160e01b031982166380ac58cd60e01b14806104ca57506001600160e01b03198216635b5e139f60e01b145b806104e557506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f516020611c465f395f51905f52805460609190819061050a90611a6a565b80601f016020809104026020016040519081016040528092919081815260200182805461053690611a6a565b80156105815780601f1061055857610100808354040283529160200191610581565b820191905f5260205f20905b81548152906001019060200180831161056457829003601f168201915b505050505091505090565b5f610596826109f5565b506104e582610a2c565b6105ab828233610a65565b5050565b6001600160a01b0382166105dd57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6105e9838333610a72565b9050836001600160a01b0316816001600160a01b031614610637576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105d4565b50505050565b610645610a86565b61064d610ae1565b565b61066983838360405180602001604052805f81525061078d565b505050565b6105ab5f8233610a72565b610681610b40565b61068a82610be4565b6105ab8282610bec565b5f61069d610ca8565b505f516020611c665f395f51905f5290565b5f6104e5826109f5565b5f5f516020611c465f395f51905f526001600160a01b0383166106f1576040516322718ad960e21b81525f60048201526024016105d4565b6001600160a01b039092165f908152600390920160205250604090205490565b610719610a86565b61064d5f610cf1565b61072a610a86565b61064d610d61565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060915f516020611c465f395f51905f529161050a90611a6a565b610778610a86565b6105ab8282610da9565b6105ab338383610dc2565b6107988484846105af565b6106373385858585610e71565b5f6107ae610f97565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156107d55750825b90505f8267ffffffffffffffff1660011480156107f15750303b155b9050811580156107ff575080155b1561081d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561084757845460ff60401b1916600160401b1785555b61088c6040518060400160405280600781526020016615555414d3919560ca1b815250604051806040016040528060048152602001631553919560e21b815250610fbf565b610894610fd1565b61089d86610fd9565b6108a5610fd1565b6108ad610fd1565b83156108f357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6060610906826109f5565b505f61091c60408051602081019091525f815290565b90505f81511161093a5760405180602001604052805f815250610965565b8061094484610fea565b604051602001610955929190611ab9565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b6109c0610a86565b6001600160a01b0381166109e957604051631e4fbdf760e01b81525f60048201526024016105d4565b6109f281610cf1565b50565b5f5f610a008361107a565b90506001600160a01b0381166104e557604051637e27328960e01b8152600481018490526024016105d4565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61066983838360016110b3565b5f610a7e8484846111c6565b949350505050565b33610ab87f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461064d5760405163118cdaa760e01b81523360048201526024016105d4565b610ae96111da565b5f516020611c865f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610bc657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bba5f516020611c665f395f51905f52546001600160a01b031690565b6001600160a01b031614155b1561064d5760405163703e46dd60e11b815260040160405180910390fd5b6109f2610a86565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c46575060408051601f3d908101601f19168201909252610c4391810190611acd565b60015b610c6e57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105d4565b5f516020611c665f395f51905f528114610c9e57604051632a87526960e21b8152600481018290526024016105d4565b6106698383611209565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064d5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610d6961125e565b5f516020611c865f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610b22565b6105ab828260405180602001604052805f81525061128e565b5f516020611c465f395f51905f526001600160a01b038316610e0257604051630b61174360e31b81526001600160a01b03841660048201526024016105d4565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610f9057604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610eb3908890889087908790600401611ae4565b6020604051808303815f875af1925050508015610eed575060408051601f3d908101601f19168201909252610eea91810190611b20565b60015b610f54573d808015610f1a576040519150601f19603f3d011682016040523d82523d5f602084013e610f1f565b606091505b5080515f03610f4c57604051633250574960e11b81526001600160a01b03851660048201526024016105d4565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b146108f357604051633250574960e11b81526001600160a01b03851660048201526024016105d4565b5050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006104e5565b610fc76112a5565b6105ab82826112ca565b61064d6112a5565b610fe16112a5565b6109f2816112fa565b60605f610ff683611302565b60010190505f8167ffffffffffffffff81111561101557611015611899565b6040519080825280601f01601f19166020018201604052801561103f576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461104957509392505050565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b5f516020611c465f395f51905f5281806110d557506001600160a01b03831615155b15611196575f6110e4856109f5565b90506001600160a01b038416158015906111105750836001600160a01b0316816001600160a01b031614155b80156111235750611121818561096c565b155b1561114c5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016105d4565b82156111945784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f6111cf61125e565b610a7e8484846113d9565b5f516020611c865f395f51905f525460ff1661064d57604051638dfc202b60e01b815260040160405180910390fd5b611212826114db565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561125657610669828261153e565b6105ab6115b0565b5f516020611c865f395f51905f525460ff161561064d5760405163d93c066560e01b815260040160405180910390fd&apos;[39m... 5274 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611cdb6100f95f395f8181610b4b01528181610b740152610cb30152611cdb5ff3fe608060405260043610610161575f3560e01c806370a08231116100cd578063a22cb46511610087578063c4d66de811610062578063c4d66de81461041e578063c87b56dd1461043d578063e985e9c51461045c578063f2fde38b1461047b575f5ffd5b8063a22cb465146103b0578063ad3cb1cc146103cf578063b88d4fde146103ff575f5ffd5b806370a08231146102fa578063715018a6146103195780638456cb591461032d5780638da5cb5b1461034157806395d89b411461037d578063a144819414610391575f5ffd5b806342842e0e1161011e57806342842e0e1461024557806342966c68146102645780634f1ef2861461028357806352d1902d146102965780635c975abb146102b85780636352211e146102db575f5ffd5b806301ffc9a71461016557806306fdde0314610199578063081812fc146101ba578063095ea7b3146101f157806323b872dd146102125780633f4ba83a14610231575b5f5ffd5b348015610170575f5ffd5b5061018461017f3660046117aa565b61049a565b60405190151581526020015b60405180910390f35b3480156101a4575f5ffd5b506101ad6104eb565b60405161019091906117f3565b3480156101c5575f5ffd5b506101d96101d4366004611805565b61058c565b6040516001600160a01b039091168152602001610190565b3480156101fc575f5ffd5b5061021061020b366004611837565b6105a0565b005b34801561021d575f5ffd5b5061021061022c36600461185f565b6105af565b34801561023c575f5ffd5b5061021061063d565b348015610250575f5ffd5b5061021061025f36600461185f565b61064f565b34801561026f575f5ffd5b5061021061027e366004611805565b61066e565b610210610291366004611938565b610679565b3480156102a1575f5ffd5b506102aa610694565b604051908152602001610190565b3480156102c3575f5ffd5b505f516020611c865f395f51905f525460ff16610184565b3480156102e6575f5ffd5b506101d96102f5366004611805565b6106af565b348015610305575f5ffd5b506102aa610314366004611983565b6106b9565b348015610324575f5ffd5b50610210610711565b348015610338575f5ffd5b50610210610722565b34801561034c575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101d9565b348015610388575f5ffd5b506101ad610732565b34801561039c575f5ffd5b506102106103ab366004611837565b610770565b3480156103bb575f5ffd5b506102106103ca36600461199c565b610782565b3480156103da575f5ffd5b506101ad604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561040a575f5ffd5b506102106104193660046119d5565b61078d565b348015610429575f5ffd5b50610210610438366004611983565b6107a5565b348015610448575f5ffd5b506101ad610457366004611805565b6108fb565b348015610467575f5ffd5b50610184610476366004611a39565b61096c565b348015610486575f5ffd5b50610210610495366004611983565b6109b8565b5f6001600160e01b031982166380ac58cd60e01b14806104ca57506001600160e01b03198216635b5e139f60e01b145b806104e557506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f516020611c465f395f51905f52805460609190819061050a90611a6a565b80601f016020809104026020016040519081016040528092919081815260200182805461053690611a6a565b80156105815780601f1061055857610100808354040283529160200191610581565b820191905f5260205f20905b81548152906001019060200180831161056457829003601f168201915b505050505091505090565b5f610596826109f5565b506104e582610a2c565b6105ab828233610a65565b5050565b6001600160a01b0382166105dd57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6105e9838333610a72565b9050836001600160a01b0316816001600160a01b031614610637576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105d4565b50505050565b610645610a86565b61064d610ae1565b565b61066983838360405180602001604052805f81525061078d565b505050565b6105ab5f8233610a72565b610681610b40565b61068a82610be4565b6105ab8282610bec565b5f61069d610ca8565b505f516020611c665f395f51905f5290565b5f6104e5826109f5565b5f5f516020611c465f395f51905f526001600160a01b0383166106f1576040516322718ad960e21b81525f60048201526024016105d4565b6001600160a01b039092165f908152600390920160205250604090205490565b610719610a86565b61064d5f610cf1565b61072a610a86565b61064d610d61565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060915f516020611c465f395f51905f529161050a90611a6a565b610778610a86565b6105ab8282610da9565b6105ab338383610dc2565b6107988484846105af565b6106373385858585610e71565b5f6107ae610f97565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156107d55750825b90505f8267ffffffffffffffff1660011480156107f15750303b155b9050811580156107ff575080155b1561081d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561084757845460ff60401b1916600160401b1785555b61088c6040518060400160405280600781526020016615555414d3919560ca1b815250604051806040016040528060048152602001631553919560e21b815250610fbf565b610894610fd1565b61089d86610fd9565b6108a5610fd1565b6108ad610fd1565b83156108f357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6060610906826109f5565b505f61091c60408051602081019091525f815290565b90505f81511161093a5760405180602001604052805f815250610965565b8061094484610fea565b604051602001610955929190611ab9565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b6109c0610a86565b6001600160a01b0381166109e957604051631e4fbdf760e01b81525f60048201526024016105d4565b6109f281610cf1565b50565b5f5f610a008361107a565b90506001600160a01b0381166104e557604051637e27328960e01b8152600481018490526024016105d4565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61066983838360016110b3565b5f610a7e8484846111c6565b949350505050565b33610ab87f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461064d5760405163118cdaa760e01b81523360048201526024016105d4565b610ae96111da565b5f516020611c865f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610bc657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bba5f516020611c665f395f51905f52546001600160a01b031690565b6001600160a01b031614155b1561064d5760405163703e46dd60e11b815260040160405180910390fd5b6109f2610a86565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c46575060408051601f3d908101601f19168201909252610c4391810190611acd565b60015b610c6e57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105d4565b5f516020611c665f395f51905f528114610c9e57604051632a87526960e21b8152600481018290526024016105d4565b6106698383611209565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461064d5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610d6961125e565b5f516020611c865f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610b22565b6105ab828260405180602001604052805f81525061128e565b5f516020611c465f395f51905f526001600160a01b038316610e0257604051630b61174360e31b81526001600160a01b03841660048201526024016105d4565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610f9057604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610eb3908890889087908790600401611ae4565b6020604051808303815f875af1925050508015610eed575060408051601f3d908101601f19168201909252610eea91810190611b20565b60015b610f54573d808015610f1a576040519150601f19603f3d011682016040523d82523d5f602084013e610f1f565b606091505b5080515f03610f4c57604051633250574960e11b81526001600160a01b03851660048201526024016105d4565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b146108f357604051633250574960e11b81526001600160a01b03851660048201526024016105d4565b5050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006104e5565b610fc76112a5565b6105ab82826112ca565b61064d6112a5565b610fe16112a5565b6109f2816112fa565b60605f610ff683611302565b60010190505f8167ffffffffffffffff81111561101557611015611899565b6040519080825280601f01601f19166020018201604052801561103f576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461104957509392505050565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b5f516020611c465f395f51905f5281806110d557506001600160a01b03831615155b15611196575f6110e4856109f5565b90506001600160a01b038416158015906111105750836001600160a01b0316816001600160a01b031614155b80156111235750611121818561096c565b155b1561114c5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016105d4565b82156111945784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f6111cf61125e565b610a7e8484846113d9565b5f516020611c865f395f51905f525460ff1661064d57604051638dfc202b60e01b815260040160405180910390fd5b611212826114db565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561125657610669828261153e565b6105ab6115b0565b5f516020611c865f395f51905f525460ff161561064d5760405163d93c066560e01b815260040160405180910390fd&apos;[39m... 5274 more characters,
  nonce: [33m2766[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x5616b347a1b8f8e7c7ee968bf0988499084e182af757594bca08607f47ad53dc

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0x5616b347a1b8f8e7c7ee968bf0988499084e182af757594bca08607f47ad53dc. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c63430008160033000000000000000000000000259e734b1cb45ba5d06861c159756bf3212209f000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c63430008160033000000000000000000000000259e734b1cb45ba5d06861c159756bf3212209f000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2767[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xe67879f4b7b0b76c34d985ba32b3675583aa94f88843fb629b835579b5204147

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xe67879f4b7b0b76c34d985ba32b3675583aa94f88843fb629b835579b5204147. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xA94B0B1945c62bE0B2f8c0bCcD85629d16Deb0dD&apos;[39m,
  data: [32m&apos;0xa1448194000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000000&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xA94B0B1945c62bE0B2f8c0bCcD85629d16Deb0dD&apos;[39m,
  data: [32m&apos;0xa1448194000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2768[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xc695ff35012b408693a3faae3a47b2cf5cdcc3546000b66c82b4c174049845c8

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xc695ff35012b408693a3faae3a47b2cf5cdcc3546000b66c82b4c174049845c8. Status: Success

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/04_ERC721.test.ts" name="Full ERC721 Integration Tests &gt; should deploy Transparent ERC721 proxy and verify functionality" time="46.4871154">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc721

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;TransparentNFT&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentNFT_VHJhbnNw

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract TransparentNFT in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentNFT_VHJhbnNw with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentNFT_VHJhbnNw): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentNFT_VHJhbnNw\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for TransparentNFT: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentNFT_VHJhbnNw\artifacts\contracts\TransparentNFT.sol\TransparentNFT.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Using directory for proxy compilation: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing proxy compile: cd &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS&quot; &amp;&amp; npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Proxy compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.22 (evm target: shanghai)

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Reading proxy artifact: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\artifacts\contracts\M3S_ERC1967Proxy.sol\M3S_ERC1967Proxy.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Preserving output for proxy in: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x6080604052348015600e575f5ffd5b5060156019565b60c9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560685760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611704806100d65f395ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b4578063a22cb46511610079578063a22cb465146102a5578063b88d4fde146102b8578063c4d66de8146102cb578063c87b56dd146102de578063e985e9c5146102f1578063f2fde38b14610304575f5ffd5b8063715018a61461024a5780638456cb59146102525780638da5cb5b1461025a57806395d89b411461028a578063a144819414610292575f5ffd5b80633f4ba83a116101055780633f4ba83a146101d157806342842e0e146101d957806342966c68146101ec5780635c975abb146101ff5780636352211e1461021657806370a0823114610229575f5ffd5b806301ffc9a71461014157806306fdde0314610169578063081812fc1461017e578063095ea7b3146101a957806323b872dd146101be575b5f5ffd5b61015461014f366004611272565b610317565b60405190151581526020015b60405180910390f35b610171610368565b60405161016091906112bb565b61019161018c3660046112cd565b610409565b6040516001600160a01b039091168152602001610160565b6101bc6101b73660046112ff565b61041d565b005b6101bc6101cc366004611327565b61042c565b6101bc6104ba565b6101bc6101e7366004611327565b6104cc565b6101bc6101fa3660046112cd565b6104eb565b5f5160206116af5f395f51905f525460ff16610154565b6101916102243660046112cd565b6104f6565b61023c610237366004611361565b610500565b604051908152602001610160565b6101bc610558565b6101bc610569565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610191565b610171610579565b6101bc6102a03660046112ff565b6105b7565b6101bc6102b336600461137a565b6105c9565b6101bc6102c63660046113c7565b6105d4565b6101bc6102d9366004611361565b6105ec565b6101716102ec3660046112cd565b610741565b6101546102ff3660046114a4565b6107b2565b6101bc610312366004611361565b6107fe565b5f6001600160e01b031982166380ac58cd60e01b148061034757506001600160e01b03198216635b5e139f60e01b145b8061036257506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f51602061168f5f395f51905f528054606091908190610387906114d5565b80601f01602080910402602001604051908101604052809291908181526020018280546103b3906114d5565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b505050505091505090565b5f6104138261083b565b5061036282610872565b6104288282336108ab565b5050565b6001600160a01b03821661045a57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6104668383336108b8565b9050836001600160a01b0316816001600160a01b0316146104b4576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610451565b50505050565b6104c26108cc565b6104ca610927565b565b6104e683838360405180602001604052805f8152506105d4565b505050565b6104285f82336108b8565b5f6103628261083b565b5f5f51602061168f5f395f51905f526001600160a01b038316610538576040516322718ad960e21b81525f6004820152602401610451565b6001600160a01b039092165f908152600390920160205250604090205490565b6105606108cc565b6104ca5f610986565b6105716108cc565b6104ca6109f6565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060915f51602061168f5f395f51905f5291610387906114d5565b6105bf6108cc565b6104288282610a3e565b610428338383610a57565b6105df84848461042c565b6104b43385858585610b06565b5f6105f5610c2c565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561061c5750825b90505f8267ffffffffffffffff1660011480156106385750303b155b905081158015610646575080155b156106645760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561068e57845460ff60401b1916600160401b1785555b6106da6040518060400160405280600e81526020016d151c985b9cdc185c995b9d13919560921b815250604051806040016040528060048152602001631513919560e21b815250610c54565b6106e2610c66565b6106eb86610c6e565b6106f3610c66565b831561073957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b606061074c8261083b565b505f61076260408051602081019091525f815290565b90505f8151116107805760405180602001604052805f8152506107ab565b8061078a84610c7f565b60405160200161079b929190611524565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b6108066108cc565b6001600160a01b03811661082f57604051631e4fbdf760e01b81525f6004820152602401610451565b61083881610986565b50565b5f5f61084683610d0f565b90506001600160a01b03811661036257604051637e27328960e01b815260048101849052602401610451565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b6104e68383836001610d48565b5f6108c4848484610e5b565b949350505050565b336108fe7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104ca5760405163118cdaa760e01b8152336004820152602401610451565b61092f610e6f565b5f5160206116af5f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6109fe610e9e565b5f5160206116af5f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610968565b610428828260405180602001604052805f815250610ece565b5f51602061168f5f395f51905f526001600160a01b038316610a9757604051630b61174360e31b81526001600160a01b0384166004820152602401610451565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610c2557604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b48908890889087908790600401611538565b6020604051808303815f875af1925050508015610b82575060408051601f3d908101601f19168201909252610b7f91810190611574565b60015b610be9573d808015610baf576040519150601f19603f3d011682016040523d82523d5f602084013e610bb4565b606091505b5080515f03610be157604051633250574960e11b81526001600160a01b0385166004820152602401610451565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461073957604051633250574960e11b81526001600160a01b0385166004820152602401610451565b5050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610362565b610c5c610ee5565b6104288282610f0a565b6104ca610ee5565b610c76610ee5565b61083881610f3a565b60605f610c8b83610f42565b60010190505f8167ffffffffffffffff811115610caa57610caa6113b3565b6040519080825280601f01601f191660200182016040528015610cd4576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cde57509392505050565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b5f51602061168f5f395f51905f528180610d6a57506001600160a01b03831615155b15610e2b575f610d798561083b565b90506001600160a01b03841615801590610da55750836001600160a01b0316816001600160a01b031614155b8015610db85750610db681856107b2565b155b15610de15760405163a9fbf51f60e01b81526001600160a01b0385166004820152602401610451565b8215610e295784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f610e64610e9e565b6108c4848484611019565b5f5160206116af5f395f51905f525460ff166104ca57604051638dfc202b60e01b815260040160405180910390fd5b5f5160206116af5f395f51905f525460ff16156104ca5760405163d93c066560e01b815260040160405180910390fd5b610ed8838361111b565b6104e6335f858585610b06565b610eed61117c565b6104ca57604051631afcd79f60e31b815260040160405180910390fd5b610f12610ee5565b5f51602061168f5f395f51905f5280610f2b84826115d3565b50600181016104b483826115d3565b610806610ee5565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f805772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fac576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fca57662386f26fc10000830492506010015b6305f5e1008310610fe2576305f5e100830492506008015b6127108310610ff657612710830492506004015b60648310611008576064830492506002015b600a83106103625760010192915050565b5f5f51602061168f5f395f51905f528161103285610d0f565b90506001600160a01b0384161561104e5761104e818587611195565b6001600160a01b0381161561108a576110695f865f5f610d48565b6001600160a01b0381165f908152600383016020526040902080545f190190555b6001600160a01b038616156110ba576001600160a01b0386165f9081526003830160205260409020805460010190555b5f85815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6001600160a01b03821661114457604051633250574960e11b81525f6004820152602401610451565b5f61115083835f6108b8565b90506001600160a01b038116156104e6576040516339e3563760e11b81525f6004820152602401610451565b5f611185610c2c565b54600160401b900460ff16919050565b6111a08383836111f9565b6104e6576001600160a01b0383166111ce57604051637e27328960e01b815260048101829052602401610451565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610451565b5f6001600160a01b038316158015906108c45750826001600160a01b0316846001600160a01b03161480611232575061123284846107b2565b806108c45750826001600160a01b031661124b83610872565b6001600160a01b031614949350505050565b6001600160e01b031981168114610838575f5ffd5b5f60208284031215611282575f5ffd5b81356107ab8161125d565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685&apos;[39m... 2214 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x6080604052348015600e575f5ffd5b5060156019565b60c9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560685760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611704806100d65f395ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063715018a6116100b4578063a22cb46511610079578063a22cb465146102a5578063b88d4fde146102b8578063c4d66de8146102cb578063c87b56dd146102de578063e985e9c5146102f1578063f2fde38b14610304575f5ffd5b8063715018a61461024a5780638456cb59146102525780638da5cb5b1461025a57806395d89b411461028a578063a144819414610292575f5ffd5b80633f4ba83a116101055780633f4ba83a146101d157806342842e0e146101d957806342966c68146101ec5780635c975abb146101ff5780636352211e1461021657806370a0823114610229575f5ffd5b806301ffc9a71461014157806306fdde0314610169578063081812fc1461017e578063095ea7b3146101a957806323b872dd146101be575b5f5ffd5b61015461014f366004611272565b610317565b60405190151581526020015b60405180910390f35b610171610368565b60405161016091906112bb565b61019161018c3660046112cd565b610409565b6040516001600160a01b039091168152602001610160565b6101bc6101b73660046112ff565b61041d565b005b6101bc6101cc366004611327565b61042c565b6101bc6104ba565b6101bc6101e7366004611327565b6104cc565b6101bc6101fa3660046112cd565b6104eb565b5f5160206116af5f395f51905f525460ff16610154565b6101916102243660046112cd565b6104f6565b61023c610237366004611361565b610500565b604051908152602001610160565b6101bc610558565b6101bc610569565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610191565b610171610579565b6101bc6102a03660046112ff565b6105b7565b6101bc6102b336600461137a565b6105c9565b6101bc6102c63660046113c7565b6105d4565b6101bc6102d9366004611361565b6105ec565b6101716102ec3660046112cd565b610741565b6101546102ff3660046114a4565b6107b2565b6101bc610312366004611361565b6107fe565b5f6001600160e01b031982166380ac58cd60e01b148061034757506001600160e01b03198216635b5e139f60e01b145b8061036257506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f51602061168f5f395f51905f528054606091908190610387906114d5565b80601f01602080910402602001604051908101604052809291908181526020018280546103b3906114d5565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b505050505091505090565b5f6104138261083b565b5061036282610872565b6104288282336108ab565b5050565b6001600160a01b03821661045a57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6104668383336108b8565b9050836001600160a01b0316816001600160a01b0316146104b4576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610451565b50505050565b6104c26108cc565b6104ca610927565b565b6104e683838360405180602001604052805f8152506105d4565b505050565b6104285f82336108b8565b5f6103628261083b565b5f5f51602061168f5f395f51905f526001600160a01b038316610538576040516322718ad960e21b81525f6004820152602401610451565b6001600160a01b039092165f908152600390920160205250604090205490565b6105606108cc565b6104ca5f610986565b6105716108cc565b6104ca6109f6565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060915f51602061168f5f395f51905f5291610387906114d5565b6105bf6108cc565b6104288282610a3e565b610428338383610a57565b6105df84848461042c565b6104b43385858585610b06565b5f6105f5610c2c565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561061c5750825b90505f8267ffffffffffffffff1660011480156106385750303b155b905081158015610646575080155b156106645760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561068e57845460ff60401b1916600160401b1785555b6106da6040518060400160405280600e81526020016d151c985b9cdc185c995b9d13919560921b815250604051806040016040528060048152602001631513919560e21b815250610c54565b6106e2610c66565b6106eb86610c6e565b6106f3610c66565b831561073957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b606061074c8261083b565b505f61076260408051602081019091525f815290565b90505f8151116107805760405180602001604052805f8152506107ab565b8061078a84610c7f565b60405160200161079b929190611524565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b6108066108cc565b6001600160a01b03811661082f57604051631e4fbdf760e01b81525f6004820152602401610451565b61083881610986565b50565b5f5f61084683610d0f565b90506001600160a01b03811661036257604051637e27328960e01b815260048101849052602401610451565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b6104e68383836001610d48565b5f6108c4848484610e5b565b949350505050565b336108fe7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104ca5760405163118cdaa760e01b8152336004820152602401610451565b61092f610e6f565b5f5160206116af5f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6109fe610e9e565b5f5160206116af5f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610968565b610428828260405180602001604052805f815250610ece565b5f51602061168f5f395f51905f526001600160a01b038316610a9757604051630b61174360e31b81526001600160a01b0384166004820152602401610451565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b15610c2557604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b48908890889087908790600401611538565b6020604051808303815f875af1925050508015610b82575060408051601f3d908101601f19168201909252610b7f91810190611574565b60015b610be9573d808015610baf576040519150601f19603f3d011682016040523d82523d5f602084013e610bb4565b606091505b5080515f03610be157604051633250574960e11b81526001600160a01b0385166004820152602401610451565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461073957604051633250574960e11b81526001600160a01b0385166004820152602401610451565b5050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610362565b610c5c610ee5565b6104288282610f0a565b6104ca610ee5565b610c76610ee5565b61083881610f3a565b60605f610c8b83610f42565b60010190505f8167ffffffffffffffff811115610caa57610caa6113b3565b6040519080825280601f01601f191660200182016040528015610cd4576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cde57509392505050565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b5f51602061168f5f395f51905f528180610d6a57506001600160a01b03831615155b15610e2b575f610d798561083b565b90506001600160a01b03841615801590610da55750836001600160a01b0316816001600160a01b031614155b8015610db85750610db681856107b2565b155b15610de15760405163a9fbf51f60e01b81526001600160a01b0385166004820152602401610451565b8215610e295784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f610e64610e9e565b6108c4848484611019565b5f5160206116af5f395f51905f525460ff166104ca57604051638dfc202b60e01b815260040160405180910390fd5b5f5160206116af5f395f51905f525460ff16156104ca5760405163d93c066560e01b815260040160405180910390fd5b610ed8838361111b565b6104e6335f858585610b06565b610eed61117c565b6104ca57604051631afcd79f60e31b815260040160405180910390fd5b610f12610ee5565b5f51602061168f5f395f51905f5280610f2b84826115d3565b50600181016104b483826115d3565b610806610ee5565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f805772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fac576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fca57662386f26fc10000830492506010015b6305f5e1008310610fe2576305f5e100830492506008015b6127108310610ff657612710830492506004015b60648310611008576064830492506002015b600a83106103625760010192915050565b5f5f51602061168f5f395f51905f528161103285610d0f565b90506001600160a01b0384161561104e5761104e818587611195565b6001600160a01b0381161561108a576110695f865f5f610d48565b6001600160a01b0381165f908152600383016020526040902080545f190190555b6001600160a01b038616156110ba576001600160a01b0386165f9081526003830160205260409020805460010190555b5f85815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b6001600160a01b03821661114457604051633250574960e11b81525f6004820152602401610451565b5f61115083835f6108b8565b90506001600160a01b038116156104e6576040516339e3563760e11b81525f6004820152602401610451565b5f611185610c2c565b54600160401b900460ff16919050565b6111a08383836111f9565b6104e6576001600160a01b0383166111ce57604051637e27328960e01b815260048101829052602401610451565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610451565b5f6001600160a01b038316158015906108c45750826001600160a01b0316846001600160a01b03161480611232575061123284846107b2565b806108c45750826001600160a01b031661124b83610872565b6001600160a01b031614949350505050565b6001600160e01b031981168114610838575f5ffd5b5f60208284031215611282575f5ffd5b81356107ab8161125d565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685&apos;[39m... 2214 more characters,
  nonce: [33m2769[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xcdce85bbef79f85b688a238016977dbc8d29d11f7f4856592f6cdba89de4698e

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xcdce85bbef79f85b688a238016977dbc8d29d11f7f4856592f6cdba89de4698e. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c634300081600330000000000000000000000007118afa28251562b3bf7e28c88bd71da5cfac79200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c634300081600330000000000000000000000007118afa28251562b3bf7e28c88bd71da5cfac79200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2770[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xaf9e7770db7ac37a7a3b43f3326077be8318a927e9c31bcbca55722a675cb5a5

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xaf9e7770db7ac37a7a3b43f3326077be8318a927e9c31bcbca55722a675cb5a5. Status: Success

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m,
  data: [32m&apos;0xa1448194000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xc4aD6Db1C266E1FF9229aEea524731c1379f4A37&apos;[39m,
  data: [32m&apos;0xa1448194000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2771[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xa3ed502391e3d5f23b161610564e547ca671916c85f7e0e0de38b1f62ec40a94

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] PROVIDER JsonRpcProvider {}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Receipt found for 0xa3ed502391e3d5f23b161610564e547ca671916c85f7e0e0de38b1f62ec40a94. Status: Success

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Solidity/05_ERC1155.test.ts" timestamp="2025-09-04T15:19:08.691Z" hostname="GA" tests="12" failures="0" errors="0" skipped="0" time="276.2317793">
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate basic ERC1155 with required options" time="0.0342786">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with burnable feature" time="0.0025533">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with pausable feature" time="0.0022973">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with mintable feature" time="0.0019553">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with supply tracking" time="0.0019695">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with updatable URI" time="0.002498">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with custom access control (roles)" time="0.0026497">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with multiple features combined" time="0.0026835">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="ERC1155 Options Tests &gt; should generate ERC1155 with upgradeability" time="0.003022">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [OpenZeppelinAdapter] No suitable RPC URL found in providerConfig for its own default provider.

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="Full ERC1155 Integration Tests &gt; should deploy ERC1155 with multiple features and verify functionality" time="86.0870979">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;ComplexMultiToken&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexMultiToken_Q29tcGxl

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract ComplexMultiToken in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexMultiToken_Q29tcGxl with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexMultiToken_Q29tcGxl): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexMultiToken_Q29tcGxl\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for ComplexMultiToken: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\ComplexMultiToken_Q29tcGxl\artifacts\contracts\ComplexMultiToken.sol\ComplexMultiToken.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x608060405234801561000f575f5ffd5b50604051611c6a380380611c6a83398101604081905261002e9161010c565b60408051808201909152601f81527f697066733a2f2f516d436f6d706c6578546f6b656e2f7b69647d2e6a736f6e006020820152819061006d816100ab565b506001600160a01b03811661009b57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a4816100bb565b505061028b565b60026100b782826101d1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020828403121561011c575f5ffd5b81516001600160a01b0381168114610132575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061016157607f821691505b60208210810361017f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101cc57805f5260205f20601f840160051c810160208510156101aa5750805b601f840160051c820191505b818110156101c9575f81556001016101b6565b50505b505050565b81516001600160401b038111156101ea576101ea610139565b6101fe816101f8845461014d565b84610185565b6020601f821160018114610230575f83156102195750848201515b5f19600385901b1c1916600184901b1784556101c9565b5f84815260208120601f198516915b8281101561025f578785015182556020948501946001909201910161023f565b508482101561027c57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6119d2806102985f395ff3fe608060405234801561000f575f5ffd5b506004361061013c575f3560e01c80636b20c454116100b4578063a22cb46511610079578063a22cb46514610298578063bd85b039146102ab578063e985e9c5146102ca578063f242432a146102dd578063f2fde38b146102f0578063f5298aca14610303575f5ffd5b80636b20c45414610247578063715018a61461025a578063731133e9146102625780638456cb59146102755780638da5cb5b1461027d575f5ffd5b80631f7fdffa116101055780631f7fdffa146101c65780632eb2c2d6146101d95780633f4ba83a146101ec5780634e1273f4146101f45780634f558e79146102145780635c975abb14610235575f5ffd5b8062fdd58e1461014057806301ffc9a71461016657806302fe5305146101895780630e89341c1461019e57806318160ddd146101be575b5f5ffd5b61015361014e3660046110f1565b610316565b6040519081526020015b60405180910390f35b61017961017436600461112e565b61033d565b604051901515815260200161015d565b61019c6101973660046111ec565b61038c565b005b6101b16101ac366004611238565b6103a0565b60405161015d919061127d565b600554610153565b61019c6101d4366004611339565b610432565b61019c6101e73660046113d5565b61044c565b61019c6104b8565b610207610202366004611481565b6104ca565b60405161015d919061157c565b610179610222366004611238565b5f90815260046020526040902054151590565b600354600160a01b900460ff16610179565b61019c61025536600461158e565b610594565b61019c6105f8565b61019c610270366004611600565b610609565b61019c61061d565b6003546040516001600160a01b03909116815260200161015d565b61019c6102a6366004611644565b61062d565b6101536102b9366004611238565b5f9081526004602052604090205490565b6101796102d836600461167d565b61063c565b61019c6102eb3660046116ae565b610669565b61019c6102fe366004611701565b6106c8565b61019c61031136600461171a565b610702565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061036d57506001600160e01b031982166303a24d0760e21b145b8061033757506301ffc9a760e01b6001600160e01b0319831614610337565b610394610738565b61039d81610765565b50565b6060600280546103af9061174a565b80601f01602080910402602001604051908101604052809291908181526020018280546103db9061174a565b80156104265780601f106103fd57610100808354040283529160200191610426565b820191905f5260205f20905b81548152906001019060200180831161040957829003601f168201915b50505050509050919050565b61043a610738565b61044684848484610771565b50505050565b336001600160a01b038616811480159061046d575061046b868261063c565b155b156104a35760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6104b086868686866107a7565b505050505050565b6104c0610738565b6104c861080c565b565b606081518351146104fb5781518351604051635b05999160e01b81526004810192909252602482015260440161049a565b5f83516001600160401b0381111561051557610515611150565b60405190808252806020026020018201604052801561053e578160200160208202803683370190505b5090505f5b845181101561058c5760208082028601015161056790602080840287010151610316565b82828151811061057957610579611782565b6020908102919091010152600101610543565b509392505050565b6001600160a01b03831633148015906105b457506105b2833361063c565b155b156105e857335b60405163711bec9160e11b81526001600160a01b039182166004820152908416602482015260440161049a565b6105f3838383610861565b505050565b610600610738565b6104c85f6108a4565b610611610738565b610446848484846108f5565b610625610738565b6104c8610950565b610638338383610993565b5050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061068a5750610688868261063c565b155b156106bb5760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161049a565b6104b08686868686610a27565b6106d0610738565b6001600160a01b0381166106f957604051631e4fbdf760e01b81525f600482015260240161049a565b61039d816108a4565b6001600160a01b03831633148015906107225750610720833361063c565b155b1561072d57336105bb565b6105f3838383610ab3565b6003546001600160a01b031633146104c85760405163118cdaa760e01b815233600482015260240161049a565b600261063882826117da565b6001600160a01b03841661079a57604051632bfa23e760e11b81525f600482015260240161049a565b6104465f85858585610b15565b6001600160a01b0384166107d057604051632bfa23e760e11b81525f600482015260240161049a565b6001600160a01b0385166107f857604051626a0d4560e21b81525f600482015260240161049a565b6108058585858585610b15565b5050505050565b610814610b68565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03831661088957604051626a0d4560e21b81525f600482015260240161049a565b6105f3835f848460405180602001604052805f815250610b15565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661091e57604051632bfa23e760e11b81525f600482015260240161049a565b604080516001808252602082018690528183019081526060820185905260808201909252906104b05f87848487610b15565b610958610b92565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108443390565b6001600160a01b0382166109bb5760405162ced3e160e81b81525f600482015260240161049a565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a5057604051632bfa23e760e11b81525f600482015260240161049a565b6001600160a01b038516610a7857604051626a0d4560e21b81525f600482015260240161049a565b60408051600180825260208201869052818301908152606082018590526080820190925290610aaa8787848487610b15565b50505050505050565b6001600160a01b038316610adb57604051626a0d4560e21b81525f600482015260240161049a565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610805918791859085905b610b2185858585610bbd565b6001600160a01b038416156108055782513390600103610b5a5760208481015190840151610b53838989858589610bc9565b50506104b0565b6104b0818787878787610cea565b600354600160a01b900460ff166104c857604051638dfc202b60e01b815260040160405180910390fd5b600354600160a01b900460ff16156104c85760405163d93c066560e01b815260040160405180910390fd5b61044684848484610dd1565b6001600160a01b0384163b156104b05760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c0d9089908990889088908890600401611894565b6020604051808303815f875af1925050508015610c47575060408051601f3d908101601f19168201909252610c44918101906118d8565b60015b610cae573d808015610c74576040519150601f19603f3d011682016040523d82523d5f602084013e610c79565b606091505b5080515f03610ca657604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14610aaa57604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b6001600160a01b0384163b156104b05760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d2e90899089908890889088906004016118f3565b6020604051808303815f875af1925050508015610d68575060408051601f3d908101601f19168201909252610d65918101906118d8565b60015b610d95573d808015610c74576040519150601f19603f3d011682016040523d82523d5f602084013e610c79565b6001600160e01b0319811663bc197c8160e01b14610aaa57604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b610ddd84848484610eb8565b6001600160a01b038416610e5a575f805b8351811015610e415760208181028481018201519086018201515f908152600490925260408220805491928392610e26908490611950565b90915550610e3690508184611950565b925050600101610dee565b508060055f828254610e539190611950565b9091555050505b6001600160a01b038316610446575f805b8351811015610ea75760208181028481018201519086018201515f90815260049092526040909120805482900390559190910190600101610e6b565b506005805491909103905550505050565b610ec0610b92565b610446848484848051825114610ef65781518151604051635b05999160e01b81526004810192909252602482015260440161049a565b335f5b8351811015610ff8576020818102858101820151908501909101516001600160a01b03881615610faa575f828152602081815260408083206001600160a01b038c16845290915290205481811015610f84576040516303dee4c560e01b81526001600160a01b038a16600482015260248101829052604481018390526064810184905260840161049a565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610fee575f828152602081815260408083206001600160a01b038b16845290915281208054839290610fe8908490611950565b90915550505b5050600101610ef9565b5082516001036110785760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611069929190918252602082015260400190565b60405180910390a45050610805565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516110c792919061196f565b60405180910390a45050505050565b80356001600160a01b03811681146110ec575f5ffd5b9190&apos;[39m... 4614 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x608060405234801561000f575f5ffd5b50604051611c6a380380611c6a83398101604081905261002e9161010c565b60408051808201909152601f81527f697066733a2f2f516d436f6d706c6578546f6b656e2f7b69647d2e6a736f6e006020820152819061006d816100ab565b506001600160a01b03811661009b57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a4816100bb565b505061028b565b60026100b782826101d1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020828403121561011c575f5ffd5b81516001600160a01b0381168114610132575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061016157607f821691505b60208210810361017f57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101cc57805f5260205f20601f840160051c810160208510156101aa5750805b601f840160051c820191505b818110156101c9575f81556001016101b6565b50505b505050565b81516001600160401b038111156101ea576101ea610139565b6101fe816101f8845461014d565b84610185565b6020601f821160018114610230575f83156102195750848201515b5f19600385901b1c1916600184901b1784556101c9565b5f84815260208120601f198516915b8281101561025f578785015182556020948501946001909201910161023f565b508482101561027c57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6119d2806102985f395ff3fe608060405234801561000f575f5ffd5b506004361061013c575f3560e01c80636b20c454116100b4578063a22cb46511610079578063a22cb46514610298578063bd85b039146102ab578063e985e9c5146102ca578063f242432a146102dd578063f2fde38b146102f0578063f5298aca14610303575f5ffd5b80636b20c45414610247578063715018a61461025a578063731133e9146102625780638456cb59146102755780638da5cb5b1461027d575f5ffd5b80631f7fdffa116101055780631f7fdffa146101c65780632eb2c2d6146101d95780633f4ba83a146101ec5780634e1273f4146101f45780634f558e79146102145780635c975abb14610235575f5ffd5b8062fdd58e1461014057806301ffc9a71461016657806302fe5305146101895780630e89341c1461019e57806318160ddd146101be575b5f5ffd5b61015361014e3660046110f1565b610316565b6040519081526020015b60405180910390f35b61017961017436600461112e565b61033d565b604051901515815260200161015d565b61019c6101973660046111ec565b61038c565b005b6101b16101ac366004611238565b6103a0565b60405161015d919061127d565b600554610153565b61019c6101d4366004611339565b610432565b61019c6101e73660046113d5565b61044c565b61019c6104b8565b610207610202366004611481565b6104ca565b60405161015d919061157c565b610179610222366004611238565b5f90815260046020526040902054151590565b600354600160a01b900460ff16610179565b61019c61025536600461158e565b610594565b61019c6105f8565b61019c610270366004611600565b610609565b61019c61061d565b6003546040516001600160a01b03909116815260200161015d565b61019c6102a6366004611644565b61062d565b6101536102b9366004611238565b5f9081526004602052604090205490565b6101796102d836600461167d565b61063c565b61019c6102eb3660046116ae565b610669565b61019c6102fe366004611701565b6106c8565b61019c61031136600461171a565b610702565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061036d57506001600160e01b031982166303a24d0760e21b145b8061033757506301ffc9a760e01b6001600160e01b0319831614610337565b610394610738565b61039d81610765565b50565b6060600280546103af9061174a565b80601f01602080910402602001604051908101604052809291908181526020018280546103db9061174a565b80156104265780601f106103fd57610100808354040283529160200191610426565b820191905f5260205f20905b81548152906001019060200180831161040957829003601f168201915b50505050509050919050565b61043a610738565b61044684848484610771565b50505050565b336001600160a01b038616811480159061046d575061046b868261063c565b155b156104a35760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6104b086868686866107a7565b505050505050565b6104c0610738565b6104c861080c565b565b606081518351146104fb5781518351604051635b05999160e01b81526004810192909252602482015260440161049a565b5f83516001600160401b0381111561051557610515611150565b60405190808252806020026020018201604052801561053e578160200160208202803683370190505b5090505f5b845181101561058c5760208082028601015161056790602080840287010151610316565b82828151811061057957610579611782565b6020908102919091010152600101610543565b509392505050565b6001600160a01b03831633148015906105b457506105b2833361063c565b155b156105e857335b60405163711bec9160e11b81526001600160a01b039182166004820152908416602482015260440161049a565b6105f3838383610861565b505050565b610600610738565b6104c85f6108a4565b610611610738565b610446848484846108f5565b610625610738565b6104c8610950565b610638338383610993565b5050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061068a5750610688868261063c565b155b156106bb5760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161049a565b6104b08686868686610a27565b6106d0610738565b6001600160a01b0381166106f957604051631e4fbdf760e01b81525f600482015260240161049a565b61039d816108a4565b6001600160a01b03831633148015906107225750610720833361063c565b155b1561072d57336105bb565b6105f3838383610ab3565b6003546001600160a01b031633146104c85760405163118cdaa760e01b815233600482015260240161049a565b600261063882826117da565b6001600160a01b03841661079a57604051632bfa23e760e11b81525f600482015260240161049a565b6104465f85858585610b15565b6001600160a01b0384166107d057604051632bfa23e760e11b81525f600482015260240161049a565b6001600160a01b0385166107f857604051626a0d4560e21b81525f600482015260240161049a565b6108058585858585610b15565b5050505050565b610814610b68565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03831661088957604051626a0d4560e21b81525f600482015260240161049a565b6105f3835f848460405180602001604052805f815250610b15565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661091e57604051632bfa23e760e11b81525f600482015260240161049a565b604080516001808252602082018690528183019081526060820185905260808201909252906104b05f87848487610b15565b610958610b92565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108443390565b6001600160a01b0382166109bb5760405162ced3e160e81b81525f600482015260240161049a565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a5057604051632bfa23e760e11b81525f600482015260240161049a565b6001600160a01b038516610a7857604051626a0d4560e21b81525f600482015260240161049a565b60408051600180825260208201869052818301908152606082018590526080820190925290610aaa8787848487610b15565b50505050505050565b6001600160a01b038316610adb57604051626a0d4560e21b81525f600482015260240161049a565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610805918791859085905b610b2185858585610bbd565b6001600160a01b038416156108055782513390600103610b5a5760208481015190840151610b53838989858589610bc9565b50506104b0565b6104b0818787878787610cea565b600354600160a01b900460ff166104c857604051638dfc202b60e01b815260040160405180910390fd5b600354600160a01b900460ff16156104c85760405163d93c066560e01b815260040160405180910390fd5b61044684848484610dd1565b6001600160a01b0384163b156104b05760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c0d9089908990889088908890600401611894565b6020604051808303815f875af1925050508015610c47575060408051601f3d908101601f19168201909252610c44918101906118d8565b60015b610cae573d808015610c74576040519150601f19603f3d011682016040523d82523d5f602084013e610c79565b606091505b5080515f03610ca657604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14610aaa57604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b6001600160a01b0384163b156104b05760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d2e90899089908890889088906004016118f3565b6020604051808303815f875af1925050508015610d68575060408051601f3d908101601f19168201909252610d65918101906118d8565b60015b610d95573d808015610c74576040519150601f19603f3d011682016040523d82523d5f602084013e610c79565b6001600160e01b0319811663bc197c8160e01b14610aaa57604051632bfa23e760e11b81526001600160a01b038616600482015260240161049a565b610ddd84848484610eb8565b6001600160a01b038416610e5a575f805b8351811015610e415760208181028481018201519086018201515f908152600490925260408220805491928392610e26908490611950565b90915550610e3690508184611950565b925050600101610dee565b508060055f828254610e539190611950565b9091555050505b6001600160a01b038316610446575f805b8351811015610ea75760208181028481018201519086018201515f90815260049092526040909120805482900390559190910190600101610e6b565b506005805491909103905550505050565b610ec0610b92565b610446848484848051825114610ef65781518151604051635b05999160e01b81526004810192909252602482015260440161049a565b335f5b8351811015610ff8576020818102858101820151908501909101516001600160a01b03881615610faa575f828152602081815260408083206001600160a01b038c16845290915290205481811015610f84576040516303dee4c560e01b81526001600160a01b038a16600482015260248101829052604481018390526064810184905260840161049a565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610fee575f828152602081815260408083206001600160a01b038b16845290915281208054839290610fe8908490611950565b90915550505b5050600101610ef9565b5082516001036110785760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611069929190918252602082015260400190565b60405180910390a45050610805565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516110c792919061196f565b60405180910390a45050505050565b80356001600160a01b03811681146110ec575f5ffd5b9190&apos;[39m... 4614 more characters,
  nonce: [33m2772[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x2d24d2c2c35415f9983956c4aba3efff3f98efce5429b7e5aabfd4720d87e11a

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000eapos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2773[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x7b8a5b30d25062ec75550cfd9e0f8a991540758dbe904c1ace102b4b67f2058a

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  nonce: [33m2774[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x89bf135fff6e4af1144ed6d5ebf63cd580699ae6f4d433ba8005634c1b4788ab

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  nonce: [33m2775[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xf5d96988b9710d01f615adae1fdb16b1bab3bc9e0cc13f242e60c6b3ae0f34b2

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0xf5298aca000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0xf5298aca000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a&apos;[39m,
  nonce: [33m2776[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x9799dbf9acce8cbb3d3a261e302532a96214e5c0295683314b68eab1d82e6a03

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x02fe530500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019697066733a2f2f516d4e65775572692f7b69647d2e6a736f6e00000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x5444e843037b4f8c6c47F8CD1E63668e1c6dad46&apos;[39m,
  data: [32m&apos;0x02fe530500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019697066733a2f2f516d4e65775572692f7b69647d2e6a736f6e00000000000000&apos;[39m,
  nonce: [33m2777[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x487c5f73ca1f8a8354c553fb92d70b2e3121e0cc5892e5efcb226b146967e3de

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="Full ERC1155 Integration Tests &gt; should deploy UUPS ERC1155 proxy and verify upgradeability" time="95.0736789">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;UUPSMultiToken&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSMultiToken_VVVQU011

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract UUPSMultiToken in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSMultiToken_VVVQU011 with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSMultiToken_VVVQU011): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSMultiToken_VVVQU011\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for UUPSMultiToken: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\UUPSMultiToken_VVVQU011\artifacts\contracts\UUPSMultiToken.sol\UUPSMultiToken.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Using directory for proxy compilation: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing proxy compile: cd &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS&quot; &amp;&amp; npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Proxy compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.22 (evm target: shanghai)

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Reading proxy artifact: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\artifacts\contracts\M3S_ERC1967Proxy.sol\M3S_ERC1967Proxy.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Preserving output for proxy in: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;&apos;[39m... 7696 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;&apos;[39m... 7696 more characters,
  nonce: [33m2778[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x5f348d5cd5413cf9671e12f891829d1fddbc0a0e22e83db1129dc6149f67efa4

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c634300081600330000000000000000000000008ab5945ef6ce9e7b024f8d4f2f7c6b8f31d7600300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c634300081600330000000000000000000000008ab5945ef6ce9e7b024f8d4f2f7c6b8f31d7600300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2779[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x1e9ea41eaf0d12a1202bb8ab592dfcdf3fbb830d5c9d061ba7e83b7587e67fe1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000c80000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000c80000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2780[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x0c8e6ec1987999e8215923f990a066a2d0f5f5cbc250d0e07b24151d77528aac

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x8456cb59&apos;[39m,
  nonce: [33m2781[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x9bb8ac15541ac87f6fd0ee0db63398827cb3f65a77398271e04c3d446524c39c

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0x3f4ba83a&apos;[39m,
  nonce: [33m2782[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xda761b86fc86d37d600ed253319bd7483495be339b936e27601980cb350a6ce2

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0xf5298aca000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0x308EA3943Ac0C6f7A2311f886070E90BCaE0Ea63&apos;[39m,
  data: [32m&apos;0xf5298aca000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a&apos;[39m,
  nonce: [33m2783[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x4f1577d04abe984864228f45cf5780a6471e77b93505c4007a1b6448ddd10128

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

            </system-err>
        </testcase>
        <testcase classname="tests/adapters/Solidity/05_ERC1155.test.ts" name="Full ERC1155 Integration Tests &gt; should deploy Transparent ERC1155 proxy and verify functionality" time="95.0142419">
            <system-out>
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Initialized with solc version: 0.8.22, workDir: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts, preserveOutput: true
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initializing...

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Work directory ensured: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using rpcUrls[0] for its default provider: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Configuring its default EVM provider from: https://sepolia.infura.io/v3/5791a18dd1ee45af8ac3d79b549d54f1

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Its default EVM provider connected successfully to network: sepolia
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Initialized successfully.

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [CodeGenerator] Generating contract for language: solidity, template: openzeppelin_erc1155

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Routing compile request for language: solidity
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [OpenZeppelinAdapter] Using SolidityCompiler (solc 0.8.22)...
🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Attempting to compile &apos;TransparentMultiToken&apos;. Language: solidity, PreserveOutput: true

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install for implementation in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentMultiToken_VHJhbnNw

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Compiling contract TransparentMultiToken in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentMultiToken_VHJhbnNw with solc version 0.8.27

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing implementation compile (cwd=C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentMultiToken_VHJhbnNw): npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentMultiToken_VHJhbnNw\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Implementation compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.27 (evm target: cancun)


🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Found artifact for TransparentMultiToken: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\TransparentMultiToken_VHJhbnNw\artifacts\contracts\TransparentMultiToken.sol\TransparentMultiToken.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Using directory for proxy compilation: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Running npm install in C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Executing proxy compile: cd &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS&quot; &amp;&amp; npx hardhat compile --config &quot;C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\hardhat.config.cjs&quot; --force

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Proxy compile stdout:
Compiling your Solidity contracts...
Compiled 1 Solidity file with solc 0.8.22 (evm target: shanghai)

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Reading proxy artifact: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS\artifacts\contracts\M3S_ERC1967Proxy.sol\M3S_ERC1967Proxy.json

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] [SolidityCompiler] Preserving output for proxy in: C:\Users\gunne\Desktop\M3S-GITHUB\MS3\packages\smart-contract\artifacts\m3s_proxies_cache\proxy_TTNTX0VS

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;&apos;[39m... 4856 more characters,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;&apos;[39m... 4856 more characters,
  nonce: [33m2784[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x89a912f1225f5e82133c88ff3661bfff3b9b2e3a33dd9cfd194ca2c71f3c0b82

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c6343000816003300000000000000000000000098ebbf14f6a818ba331b848a9ccd10dfd6c7151c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [32m&apos;0&apos;[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  value: [32m&apos;0&apos;[39m,
  data: [32m&apos;0x608060405234801561000f575f80fd5b506040516103ff3803806103ff83398101604081905261002e9161026d565b818161003a8282610043565b50505050610350565b61004c826100a1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561009557610090828261011c565b505050565b61009d61018f565b5050565b806001600160a01b03163b5f036100db57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101389190610335565b5f60405180830381855af49150503d805f8114610170576040519150601f19603f3d011682016040523d82523d5f602084013e610175565b606091505b5090925090506101868583836101b0565b95945050505050565b34156101ae5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101c5576101c08261020f565b610208565b81511580156101dc57506001600160a01b0384163b155b1561020557604051639996b31560e01b81526001600160a01b03851660048201526024016100d2565b50805b9392505050565b80511561021e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561026557818101518382015260200161024d565b50505f910152565b5f806040838503121561027e575f80fd5b82516001600160a01b0381168114610294575f80fd5b60208401519092506001600160401b03808211156102b0575f80fd5b818501915085601f8301126102c3575f80fd5b8151818111156102d5576102d5610237565b604051601f8201601f19908116603f011681019083821181831017156102fd576102fd610237565b81604052828152886020848701011115610315575f80fd5b61032683602083016020880161024b565b80955050505050509250929050565b5f825161034681846020870161024b565b9190910192915050565b60a38061035c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220954191c3c836d4c274b8fab3c5f507a4b890e3c3c331d8225e6580ba0377acf264736f6c6343000816003300000000000000000000000098ebbf14f6a818ba331b848a9ccd10dfd6c7151c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000024c4d66de8000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a3700000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2785[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0xa3d9fbc6c3f240670b7e6f2c1a7815506a12de8c9d97f97dbe39a512c49becd0

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x731133e9000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003e800000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x731133e9000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003e800000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2786[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x95c37fab52f9602c6644101d27d48ae994b69a7cc8622152d58a6ec341c3213d

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x02fe530500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021697066733a2f2f516d4e65775472616e73706172656e742f7b69647d2e6a736f6e00000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x02fe530500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000021697066733a2f2f516d4e65775472616e73706172656e742f7b69647d2e6a736f6e00000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2787[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x907f9a8dea8c6d741dc773fe4c48dcef4827ba7ee57305630cd7a01d9ceee67c

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000004b00000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x1f7fdffa000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a370000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000004b00000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000000&apos;[39m,
  nonce: [33m2788[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x8068aab589871131dfe542b10147494c07197017420cd5cdd51a454a17fc5a78

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client:  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x6b20c454000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000005&apos;[39m,
  value: [90mundefined[39m,
  options: [90mundefined[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Sending tx from client (final txRequest):  {
  to: [32m&apos;0xdF9E68A9D1B2081Cb6febEAD7754212478Ad0D6a&apos;[39m,
  data: [32m&apos;0x6b20c454000000000000000000000000c4ad6db1c266e1ff9229aeea524731c1379f4a37000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000005&apos;[39m,
  nonce: [33m2789[39m
}

🤖 [MS3-PKG] [INFO] 🤖 [MS3-PKG] [INFO] Transaction sent, hash: 0x4579984d712da65c7c4c83255683fb62552acaccaba823b5c674a369b9b9e60d

            </system-out>
            <system-err>
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Private keys are processed during wallet creation but not stored persistently
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive private key operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Browser usage requires secure private key handling by the application
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Ensure secure handling of private keys in browser environment
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: Consider using hardware wallets for enhanced security
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [ethers] Security Note: ethers adapter follows standard security practices

🤖 [MS3-PKG] [ERROR] 🤖 [MS3-PKG] [ERROR] [testRpcConnection] Connection timed out for https://rpc.sepolia.org after 3000ms

🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Contract interactions require proper gas estimation
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure contract addresses are verified and trusted
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Private key handling follows secure practices when using signerOptions
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Server environments provide better security for sensitive operations
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: Ensure proper private key management and storage
🤖 [MS3-PKG] [WARN] 🤖 [MS3-PKG] [WARN] [openZeppelin] Security Note: openZeppelin adapter follows standard security practices

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Cairo/0X_Cairo.test.ts" timestamp="2025-09-04T15:19:08.708Z" hostname="GA" tests="1" failures="0" errors="0" skipped="0" time="0.0026921">
        <testcase classname="tests/adapters/Cairo/0X_Cairo.test.ts" name="CAIRO SUPPORT NOT IMPLEMENTED &gt; CAIRO SUPPORT NOT IMPLEMENTED" time="0.0014008">
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Stellar/0X_Soroban_Token.test.ts" timestamp="2025-09-04T15:19:08.708Z" hostname="GA" tests="1" failures="0" errors="0" skipped="0" time="0.0027743">
        <testcase classname="tests/adapters/Stellar/0X_Soroban_Token.test.ts" name="STELLAR SUPPORT NOT IMPLEMENTED &gt; STELLAR SUPPORT NOT IMPLEMENTED" time="0.0013353">
        </testcase>
    </testsuite>
    <testsuite name="tests/adapters/Stylus/0X_Stylus_ERC20.test.ts" timestamp="2025-09-04T15:19:08.709Z" hostname="GA" tests="1" failures="0" errors="0" skipped="0" time="0.0029212">
        <testcase classname="tests/adapters/Stylus/0X_Stylus_ERC20.test.ts" name="STYLUS SUPPORT NOT IMPLEMENTED &gt; STYLUS SUPPORT NOT IMPLEMENTED" time="0.0015123">
        </testcase>
    </testsuite>
</testsuites>
